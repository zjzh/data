{"package_name": "java.nio.channels", "subclass_list": ["AbstractSelector", "AbstractSelector"], "class_description": "A multiplexor of SelectableChannel objects. A selector may be created by invoking the open method of\n this class, which will use the system's default selector provider to\n create a new selector.  A selector may also be created by invoking the\n openSelector\n method of a custom selector provider.  A selector remains open until it is\n closed via its close method. A selectable channel's registration with a selector is represented by a\n SelectionKey object.  A selector maintains three sets of selection\n keys: All three sets are empty in a newly-created selector. A key is added to a selector's key set as a side effect of registering a\n channel via the channel's SelectableChannel#register(Selector,int) method.  Cancelled keys are removed from the key set during\n selection operations.  The key set itself is not directly modifiable. A key is added to its selector's cancelled-key set when it is cancelled,\n whether by closing its channel or by invoking its SelectionKey#cancel method.  Cancelling a key will cause its channel to be deregistered\n during the next selection operation, at which time the key will removed from\n all of the selector's key sets. Keys are added to the selected-key set by selection\n operations.  A key may be removed directly from the selected-key set by\n invoking the set's remove\n method or by invoking the remove method\n of an iterator obtained from the\n set.  Keys are never removed from the selected-key set in any other way;\n they are not, in particular, removed as a side effect of selection\n operations.  Keys may not be added directly to the selected-key set. ", "class_type": "class", "typealias": [], "interface_list": ["Closeable"], "class_inherit_list": ["Object"], "Methods": [], "class_name": "Selector", "Vars": null}