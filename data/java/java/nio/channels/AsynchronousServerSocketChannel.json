{"package_name": "java.nio.channels", "subclass_list": [], "class_description": "An asynchronous channel for stream-oriented listening sockets. An asynchronous server-socket channel is created by invoking the\n open method of this class.\n A newly-created asynchronous server-socket channel is open but not yet bound.\n It can be bound to a local address and configured to listen for connections\n by invoking the bind method. Once bound,\n the accept method\n is used to initiate the accepting of connections to the channel's socket.\n An attempt to invoke the accept method on an unbound channel will\n cause a NotYetBoundException to be thrown. Channels of this type are safe for use by multiple concurrent threads\n though at most one accept operation can be outstanding at any time.\n If a thread initiates an accept operation before a previous accept operation\n has completed then an AcceptPendingException will be thrown. Socket options are configured using the setOption method. Channels of this type support the following options: Usage Example: ", "class_type": "class", "typealias": [], "interface_list": ["AsynchronousChannel", "NetworkChannel"], "class_inherit_list": ["Object"], "Methods": [], "class_name": "AsynchronousServerSocketChannel", "Vars": null}