{"package_name": "java.nio.channels", "subclass_list": [], "class_description": "A grouping of asynchronous channels for the purpose of resource sharing. An asynchronous channel group encapsulates the mechanics required to\n handle the completion of I/O operations initiated by AsynchronousChannel that are bound to the group. A group has an associated\n thread pool to which tasks are submitted to handle I/O events and dispatch to\n CompletionHandler that consume the result of\n asynchronous operations performed on channels in the group. In addition to\n handling I/O events, the pooled threads may also execute other tasks required\n to support the execution of asynchronous I/O operations. An asynchronous channel group is created by invoking the withFixedThreadPool or withCachedThreadPool methods defined here. Channels are bound to a group by\n specifying the group when constructing the channel. The associated thread\n pool is owned by the group; termination of the group results in the\n shutdown of the associated thread pool. In addition to groups created explicitly, the Java virtual machine\n maintains a system-wide default group that is constructed\n automatically. Asynchronous channels that do not specify a group at\n construction time are bound to the default group. The default group has an\n associated thread pool that creates new threads as needed. The default group\n may be configured by means of system properties defined in the table below.\n Where the ThreadFactory for the\n default group is not configured then the pooled threads of the default group\n are Thread#isDaemon threads. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [], "class_name": "AsynchronousChannelGroup", "Vars": null}