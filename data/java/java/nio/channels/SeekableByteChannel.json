{"package_name": "java.nio.channels", "subclass_list": ["FileChannel", "FileChannel"], "class_description": "A byte channel that maintains a current position and allows the\n position to be changed. A seekable byte channel is connected to an entity, typically a file,\n that contains a variable-length sequence of bytes that can be read and\n written. The current position can be queried and\n modified. The channel also provides access to\n the current size of the entity to which the channel is connected. The\n size increases when bytes are written beyond its current size; the size\n decreases when it is truncated. The position and truncate methods\n which do not otherwise have a value to return are specified to return the\n channel upon which they are invoked. This allows method invocations to be\n chained. Implementations of this interface should specialize the return type\n so that method invocations on the implementation class can be chained. ", "class_type": "interface", "typealias": [], "interface_list": ["ByteChannel"], "class_inherit_list": [], "Methods": [], "class_name": "SeekableByteChannel", "Vars": null}