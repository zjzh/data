{"package_name": "java.nio.channels", "subclass_list": [], "class_description": "A selectable channel for datagram-oriented sockets. A datagram channel is created by invoking one of the open methods\n of this class. It is not possible to create a channel for an arbitrary,\n pre-existing datagram socket. A newly-created datagram channel is open but not\n connected. A datagram channel need not be connected in order for the send and receive methods to be used.  A datagram channel may be\n connected, by invoking its connect method, in order to\n avoid the overhead of the security checks are otherwise performed as part of\n every send and receive operation.  A datagram channel must be connected in\n order to use the read and write methods, since those methods do not\n accept or return socket addresses. Once connected, a datagram channel remains connected until it is\n disconnected or closed.  Whether or not a datagram channel is connected may\n be determined by invoking its isConnected method. Socket options are configured using the setOption method. A datagram channel to an Internet Protocol socket supports\n the following options: Datagram channels are safe for use by multiple concurrent threads.  They\n support concurrent reading and writing, though at most one thread may be\n reading and at most one thread may be writing at any given time. ", "class_type": "class", "typealias": [], "interface_list": ["ByteChannel", "ScatteringByteChannel", "GatheringByteChannel", "MulticastChannel"], "class_inherit_list": ["AbstractSelectableChannel"], "Methods": [], "class_name": "DatagramChannel", "Vars": null}