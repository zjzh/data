{"package_name": "java.nio", "subclass_list": [], "class_description": "A char buffer. This class defines four categories of operations upon\n char buffers: Char buffers can be created either by allocation, which allocates space for the buffer's\n\n\n content, by wrapping an existing\n char array or string into a buffer, or by creating a\n view of an existing byte buffer. Like a byte buffer, a char buffer is either direct or non-direct.  A\n char buffer created via the wrap methods of this class will\n be non-direct.  A char buffer created as a view of a byte buffer will\n be direct if, and only if, the byte buffer itself is direct.  Whether or not\n a char buffer is direct may be determined by invoking the isDirect method. This class implements the CharSequence interface so that\n character buffers may be used wherever character sequences are accepted, for\n example in the regular-expression package java.util.regex. Methods in this class that do not otherwise have a value to return are\n specified to return the buffer upon which they are invoked.  This allows\n method invocations to be chained.\n\n\n The sequence of statements ", "class_type": "class", "typealias": [], "interface_list": ["Comparable<CharBuffer>", "Appendable", "CharSequence", "Readable"], "class_inherit_list": ["Buffer"], "Methods": [], "class_name": "CharBuffer", "Vars": null}