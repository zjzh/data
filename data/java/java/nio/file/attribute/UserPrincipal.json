{"package_name": "java.nio.file.attribute", "subclass_list": ["GroupPrincipal", "GroupPrincipal"], "class_description": "A Principal representing an identity used to determine access rights\n to objects in a file system. On many platforms and file systems an entity requires appropriate access\n rights or permissions in order to access objects in a file system. The\n access rights are generally performed by checking the identity of the entity.\n For example, on implementations that use Access Control Lists (ACLs) to\n enforce privilege separation then a file in the file system may have an\n associated ACL that determines the access rights of identities specified in\n the ACL. A UserPrincipal object is an abstract representation of an\n identity. It has a name that is typically the username or\n account name that it represents. User principal objects may be obtained using\n a UserPrincipalLookupService, or returned by FileAttributeView implementations that provide access to identity related\n attributes. For example, the AclFileAttributeView and PosixFileAttributeView provide access to a file's PosixFileAttributes#owner. ", "class_type": "interface", "typealias": [], "interface_list": ["Principal"], "class_inherit_list": [], "Methods": [], "class_name": "UserPrincipal", "Vars": null}