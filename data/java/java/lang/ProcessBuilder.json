{"package_name": "java.lang", "subclass_list": [], "class_description": "This class is used to create operating system processes. Each ProcessBuilder instance manages a collection\n of process attributes.  The start() method creates a new\n Process instance with those attributes.  The start() method can be invoked repeatedly from the same instance\n to create new subprocesses with identical or related attributes. Each process builder manages these process attributes: Modifying a process builder's attributes will affect processes\n subsequently started by that object's start() method, but\n will never affect previously started processes or the Java process\n itself. Most error checking is performed by the start() method.\n It is possible to modify the state of an object so that start() will fail.  For example, setting the command attribute to\n an empty list will not throw an exception unless start()\n is invoked. Note that this class is not synchronized.\n If multiple threads access a ProcessBuilder instance\n concurrently, and at least one of the threads modifies one of the\n attributes structurally, it must be synchronized externally. Starting a new process which uses the default working directory\n and environment is easy: Here is an example that starts a process with a modified working\n directory and environment, and redirects standard output and error\n to be appended to a log file: To start a process with an explicit set of environment\n variables, first call Map.clear()\n before adding environment variables. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [], "class_name": "ProcessBuilder", "Vars": null}