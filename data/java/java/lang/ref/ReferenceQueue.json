{"package_name": "java.lang.ref", "subclass_list": [], "class_description": "Reference queues, to which registered reference objects are appended by the\n garbage collector after the appropriate reachability changes are detected. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [{"params": [], "class_name": "ReferenceQueue", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new reference-object queue.\n", "method_declar": ""}, {"params": [], "class_name": "ReferenceQueue", "is_static": false, "return_value": {"return_name": [], "return_description": ["A reference object, if one was immediately available,\n          otherwise null"], "return_type": ["Reference<?\u00a0extends\u00a0T>"]}, "method_name": "poll", "method_description": "Polls this queue to see if a reference object is available.  If one is\n available without further delay then it is removed from the queue and\n returned.  Otherwise this method immediately returns null.\n", "method_declar": ""}, {"params": [{"param_name": ["timeout"], "param_type": "long", "param_description": " If positive, block for up to timeout\n                  milliseconds while waiting for a reference to be\n                  added to this queue.  If zero, block indefinitely."}], "class_name": "ReferenceQueue", "is_static": false, "return_value": {"return_name": [], "return_description": ["A reference object, if one was available within the specified\n          timeout period, otherwise null"], "return_type": ["Reference<?\u00a0extends\u00a0T>"]}, "method_name": "remove", "method_description": "Removes the next reference object in this queue, blocking until either\n one becomes available or the given timeout period expires.\n\n \n This method does not offer real-time guarantees: It schedules the\n timeout as if by invoking the Object#wait(long) method.\n", "method_declar": ""}, {"params": [], "class_name": "ReferenceQueue", "is_static": false, "return_value": {"return_name": [], "return_description": ["A reference object, blocking until one becomes available"], "return_type": ["Reference<?\u00a0extends\u00a0T>"]}, "method_name": "remove", "method_description": "Removes the next reference object in this queue, blocking until one\n becomes available.\n", "method_declar": ""}], "class_name": "ReferenceQueue", "Vars": null}