{"package_name": "java.lang", "subclass_list": ["ClassNotFoundException", "IllegalAccessException", "InstantiationException", "InvocationTargetException", "NoSuchFieldException", "NoSuchMethodException", "ClassNotFoundException", "IllegalAccessException", "InstantiationException", "InvocationTargetException", "NoSuchFieldException", "NoSuchMethodException"], "class_description": "Common superclass of exceptions thrown by reflective operations in\n core reflection. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Exception"], "Methods": [{"params": [], "class_name": "ReflectiveOperationException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new exception with null as its detail\n message.  The cause is not initialized, and may subsequently be\n initialized by a call to Throwable.initCause(Throwable).\n", "method_declar": ""}, {"params": [{"param_name": ["message"], "param_type": "String", "param_description": " the detail message. The detail message is saved for\n          later retrieval by the Throwable.getMessage() method."}], "class_name": "ReflectiveOperationException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new exception with the specified detail message.\n The cause is not initialized, and may subsequently be\n initialized by a call to Throwable.initCause(Throwable).\n", "method_declar": ""}, {"params": [{"param_name": ["message"], "param_type": "String", "param_description": " the detail message (which is saved for later retrieval\n         by the Throwable.getMessage() method)."}, {"param_name": ["cause"], "param_type": "Throwable", "param_description": " the cause (which is saved for later retrieval by the\n         Throwable.getCause() method).  (A null value is\n         permitted, and indicates that the cause is nonexistent or\n         unknown.)"}], "class_name": "ReflectiveOperationException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new exception with the specified detail message\n and cause.\n\n \nNote that the detail message associated with\n cause is not automatically incorporated in\n this exception's detail message.\n", "method_declar": ""}, {"params": [{"param_name": ["cause"], "param_type": "Throwable", "param_description": " the cause (which is saved for later retrieval by the\n         Throwable.getCause() method).  (A null value is\n         permitted, and indicates that the cause is nonexistent or\n         unknown.)"}], "class_name": "ReflectiveOperationException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new exception with the specified cause and a detail\n message of (cause==null ? null : cause.toString()) (which\n typically contains the class and detail message of cause).\n", "method_declar": ""}], "class_name": "ReflectiveOperationException", "Vars": null}