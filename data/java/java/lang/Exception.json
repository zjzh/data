{"package_name": "java.lang", "subclass_list": ["AccountsException", "AclNotFoundException", "AndroidException", "BackingStoreException", "BrokenBarrierException", "CertificateException", "CloneNotSupportedException", "ConfirmationAlreadyPresentingException", "ConfirmationNotAvailableException", "DataFormatException", "DatatypeConfigurationException", "DestroyFailedException", "ErrnoException", "ExecutionException", "FormatException", "AccountsException", "AclNotFoundException", "AndroidException", "BackingStoreException", "BrokenBarrierException", "CertificateException", "CloneNotSupportedException", "ConfirmationAlreadyPresentingException", "ConfirmationNotAvailableException", "DataFormatException", "DatatypeConfigurationException", "DestroyFailedException", "ErrnoException", "Os", "ExecutionException", "FormatException", "GeneralSecurityException", "IOException", "InterruptedException", "InvalidPreferencesFormatException", "Preferences", "JSONException", "KeyChainException", "KeyChain", "LambdaConversionException", "LastOwnerException", "MediaCasException", "MediaCryptoException", "MediaDrmException", "NotOwnerException", "OperationApplicationException", "ContentProviderOperation", "ParseException", "ParserConfigurationException", "PrivilegedActionException", "ReflectiveOperationException", "RuntimeException", "SAXException", "SQLException", "SipException", "SurfaceTexture.OutOfResourcesException", "Surface.OutOfResourcesException", "TimeoutException", "TooManyListenersException", "TransformerException", "URISyntaxException", "UnsupportedCallbackException", "XPathException", "XmlPullParserException"], "class_description": "The class Exception and its subclasses are a form of\n Throwable that indicates conditions that a reasonable\n application might want to catch. The class Exception and any subclasses that are not also\n subclasses of RuntimeException are checked\n exceptions.  Checked exceptions need to be declared in a\n method or constructor's throws clause if they can be thrown\n by the execution of the method or constructor and propagate outside\n the method or constructor boundary. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Throwable"], "Methods": [{"params": [], "class_name": "Exception", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new exception with null as its detail message.\n The cause is not initialized, and may subsequently be initialized by a\n call to Throwable.initCause(Throwable).\n", "method_declar": ""}, {"params": [{"param_name": ["message"], "param_type": "String", "param_description": " the detail message. The detail message is saved for\n          later retrieval by the Throwable.getMessage() method."}], "class_name": "Exception", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new exception with the specified detail message.  The\n cause is not initialized, and may subsequently be initialized by\n a call to Throwable.initCause(Throwable).\n", "method_declar": ""}, {"params": [{"param_name": ["message"], "param_type": "String", "param_description": " the detail message (which is saved for later retrieval\n         by the Throwable.getMessage() method)."}, {"param_name": ["cause"], "param_type": "Throwable", "param_description": " the cause (which is saved for later retrieval by the\n         Throwable.getCause() method).  (A null value is\n         permitted, and indicates that the cause is nonexistent or\n         unknown.)"}], "class_name": "Exception", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new exception with the specified detail message and\n cause.  \nNote that the detail message associated with\n cause is not automatically incorporated in\n this exception's detail message.\n", "method_declar": ""}, {"params": [{"param_name": ["cause"], "param_type": "Throwable", "param_description": " the cause (which is saved for later retrieval by the\n         Throwable.getCause() method).  (A null value is\n         permitted, and indicates that the cause is nonexistent or\n         unknown.)"}], "class_name": "Exception", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new exception with the specified cause and a detail\n message of (cause==null ? null : cause.toString()) (which\n typically contains the class and detail message of cause).\n This constructor is useful for exceptions that are little more than\n wrappers for other throwables (for example, PrivilegedActionException).\n", "method_declar": ""}], "class_name": "Exception", "Vars": null}