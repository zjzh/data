{"package_name": "java.lang", "subclass_list": ["AnnotationFormatError", "AssertionError", "AssertionFailedError", "CoderMalfunctionError", "FactoryConfigurationError", "IOError", "LinkageError", "ServiceConfigurationError", "ThreadDeath", "TransformerFactoryConfigurationError", "VirtualMachineError", "AnnotationFormatError", "AssertionError", "AssertionFailedError", "CoderMalfunctionError", "CharsetDecoder#decodeLoop", "CharsetDecoder", "CharsetEncoder#encodeLoop", "CharsetEncoder", "FactoryConfigurationError", "IOError", "LinkageError", "ServiceConfigurationError", "ThreadDeath", "Thread#stop()", "TransformerFactoryConfigurationError", "VirtualMachineError"], "class_description": "An Error is a subclass of Throwable\n that indicates serious problems that a reasonable application\n should not try to catch. Most such errors are abnormal conditions.\n The ThreadDeath error, though a \"normal\" condition,\n is also a subclass of Error because most applications\n should not try to catch it. A method is not required to declare in its throws\n clause any subclasses of Error that might be thrown\n during the execution of the method but not caught, since these\n errors are abnormal conditions that should never occur.\n\n That is, Error and its subclasses are regarded as unchecked\n exceptions for the purposes of compile-time checking of exceptions. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Throwable"], "Methods": [{"params": [], "class_name": "Error", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new error with null as its detail message.\n The cause is not initialized, and may subsequently be initialized by a\n call to Throwable.initCause(Throwable).\n", "method_declar": ""}, {"params": [{"param_name": ["message"], "param_type": "String", "param_description": " the detail message. The detail message is saved for\n          later retrieval by the Throwable.getMessage() method."}], "class_name": "Error", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new error with the specified detail message.  The\n cause is not initialized, and may subsequently be initialized by\n a call to Throwable.initCause(Throwable).\n", "method_declar": ""}, {"params": [{"param_name": ["message"], "param_type": "String", "param_description": " the detail message (which is saved for later retrieval\n         by the Throwable.getMessage() method)."}, {"param_name": ["cause"], "param_type": "Throwable", "param_description": " the cause (which is saved for later retrieval by the\n         Throwable.getCause() method).  (A null value is\n         permitted, and indicates that the cause is nonexistent or\n         unknown.)"}], "class_name": "Error", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new error with the specified detail message and\n cause.  \nNote that the detail message associated with\n cause is not automatically incorporated in\n this error's detail message.\n", "method_declar": ""}, {"params": [{"param_name": ["cause"], "param_type": "Throwable", "param_description": " the cause (which is saved for later retrieval by the\n         Throwable.getCause() method).  (A null value is\n         permitted, and indicates that the cause is nonexistent or\n         unknown.)"}], "class_name": "Error", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new error with the specified cause and a detail\n message of (cause==null ? null : cause.toString()) (which\n typically contains the class and detail message of cause).\n This constructor is useful for errors that are little more than\n wrappers for other throwables.\n", "method_declar": ""}], "class_name": "Error", "Vars": null}