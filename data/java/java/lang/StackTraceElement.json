{"package_name": "java.lang", "subclass_list": [], "class_description": "An element in a stack trace, as returned by Throwable#getStackTrace().  Each element represents a single stack frame.\n All stack frames except for the one at the top of the stack represent\n a method invocation.  The frame at the top of the stack represents the\n execution point at which the stack trace was generated.  Typically,\n this is the point at which the throwable corresponding to the stack trace\n was created. ", "class_type": "class", "typealias": [], "interface_list": ["Serializable"], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["declaringClass"], "param_type": "String", "param_description": " the fully qualified name of the class containing\n        the execution point represented by the stack trace element"}, {"param_name": ["methodName"], "param_type": "String", "param_description": " the name of the method containing the execution point\n        represented by the stack trace element"}, {"param_name": ["fileName"], "param_type": "String", "param_description": " the name of the file containing the execution point\n         represented by the stack trace element, or null if\n         this information is unavailable"}, {"param_name": ["lineNumber"], "param_type": "int", "param_description": " the line number of the source line containing the\n         execution point represented by this stack trace element, or\n         a negative number if this information is unavailable. A value\n         of -2 indicates that the method containing the execution point\n         is a native method"}], "class_name": "StackTraceElement", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a stack trace element representing the specified execution\n point.\n", "method_declar": ""}, {"params": [{"param_name": ["obj"], "param_type": "Object", "param_description": " the object to be compared with this stack trace element."}], "class_name": "StackTraceElement", "is_static": false, "return_value": {"return_name": [], "return_description": ["true if the specified object is another\n         StackTraceElement instance representing the same\n         execution point as this instance."], "return_type": ["boolean"]}, "method_name": "equals", "method_description": "Returns true if the specified object is another\n StackTraceElement instance representing the same execution\n point as this instance.  Two stack trace elements a and\n b are equal if and only if:\n \n", "method_declar": ""}, {"params": [], "class_name": "StackTraceElement", "is_static": false, "return_value": {"return_name": [], "return_description": ["the fully qualified name of the Class containing\n         the execution point represented by this stack trace element."], "return_type": ["String"]}, "method_name": "getClassName", "method_description": "Returns the fully qualified name of the class containing the\n execution point represented by this stack trace element.\n", "method_declar": ""}, {"params": [], "class_name": "StackTraceElement", "is_static": false, "return_value": {"return_name": [], "return_description": ["the name of the file containing the execution point\n         represented by this stack trace element, or null if\n         this information is unavailable."], "return_type": ["String"]}, "method_name": "getFileName", "method_description": "Returns the name of the source file containing the execution point\n represented by this stack trace element.  Generally, this corresponds\n to the SourceFile attribute of the relevant class\n file (as per The Java Virtual Machine Specification, Section\n 4.7.7).  In some systems, the name may refer to some source code unit\n other than a file, such as an entry in source repository.\n", "method_declar": ""}, {"params": [], "class_name": "StackTraceElement", "is_static": false, "return_value": {"return_name": [], "return_description": ["the line number of the source line containing the execution\n         point represented by this stack trace element, or a negative\n         number if this information is unavailable."], "return_type": ["int"]}, "method_name": "getLineNumber", "method_description": "Returns the line number of the source line containing the execution\n point represented by this stack trace element.  Generally, this is\n derived from the LineNumberTable attribute of the relevant\n class file (as per The Java Virtual Machine\n Specification, Section 4.7.8).\n", "method_declar": ""}, {"params": [], "class_name": "StackTraceElement", "is_static": false, "return_value": {"return_name": [], "return_description": ["the name of the method containing the execution point\n         represented by this stack trace element."], "return_type": ["String"]}, "method_name": "getMethodName", "method_description": "Returns the name of the method containing the execution point\n represented by this stack trace element.  If the execution point is\n contained in an instance or class initializer, this method will return\n the appropriate special method name, <init> or\n <clinit>, as per Section 3.9 of The Java Virtual\n Machine Specification.\n", "method_declar": ""}, {"params": [], "class_name": "StackTraceElement", "is_static": false, "return_value": {"return_name": [], "return_description": ["a hash code value for this object."], "return_type": ["int"]}, "method_name": "hashCode", "method_description": "Returns a hash code value for this stack trace element.\n", "method_declar": ""}, {"params": [], "class_name": "StackTraceElement", "is_static": false, "return_value": {"return_name": [], "return_description": ["true if the method containing the execution point\n         represented by this stack trace element is a native method."], "return_type": ["boolean"]}, "method_name": "isNativeMethod", "method_description": "Returns true if the method containing the execution point\n represented by this stack trace element is a native method.\n", "method_declar": ""}, {"params": [], "class_name": "StackTraceElement", "is_static": false, "return_value": {"return_name": [], "return_description": ["a string representation of the object."], "return_type": ["String"]}, "method_name": "toString", "method_description": "Returns a string representation of this stack trace element.  The\n format of this string depends on the implementation, but the following\n examples may be regarded as typical:\n \nSee also:\n", "method_declar": ""}], "class_name": "StackTraceElement", "Vars": null}