{"package_name": "java.lang.invoke", "subclass_list": ["ConstantCallSite", "MutableCallSite", "VolatileCallSite", "ConstantCallSite", "CallSite", "MutableCallSite", "CallSite", "VolatileCallSite", "CallSite"], "class_description": "A CallSite is a holder for a variable MethodHandle,\n which is called its target.\n An invokedynamic instruction linked to a CallSite delegates\n all calls to the site's current target.\n A CallSite may be associated with several invokedynamic\n instructions, or it may be \"free floating\", associated with none.\n In any case, it may be invoked through an associated method handle\n called its dynamic invoker. CallSite is an abstract class which does not allow\n direct subclassing by users.  It has three immediate,\n concrete subclasses that may be either instantiated or subclassed. A non-constant call site may be relinked by changing its target.\n The new target must have the same MethodHandle#type()\n as the previous target.\n Thus, though a call site can be relinked to a series of\n successive targets, it cannot change its type. Here is a sample use of call sites and bootstrap methods which links every\n dynamic call site to print its arguments: ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [], "class_name": "CallSite", "Vars": null}