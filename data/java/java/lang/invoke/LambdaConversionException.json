{"package_name": "java.lang.invoke", "subclass_list": [], "class_description": "LambdaConversionException ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Exception"], "Methods": [{"params": [], "class_name": "LambdaConversionException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a LambdaConversionException.\n", "method_declar": ""}, {"params": [{"param_name": ["message"], "param_type": "String", "param_description": " the detail message"}], "class_name": "LambdaConversionException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a LambdaConversionException with a message.\n", "method_declar": ""}, {"params": [{"param_name": ["message"], "param_type": "String", "param_description": " the detail message"}, {"param_name": ["cause"], "param_type": "Throwable", "param_description": " the cause"}], "class_name": "LambdaConversionException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a LambdaConversionException with a message and cause.\n", "method_declar": ""}, {"params": [{"param_name": ["cause"], "param_type": "Throwable", "param_description": " the cause"}], "class_name": "LambdaConversionException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a LambdaConversionException with a cause.\n", "method_declar": ""}, {"params": [{"param_name": ["message"], "param_type": "String", "param_description": " the detail message"}, {"param_name": ["cause"], "param_type": "Throwable", "param_description": " the cause"}, {"param_name": ["enableSuppression"], "param_type": "boolean", "param_description": " whether or not suppressed exceptions are enabled"}, {"param_name": ["writableStackTrace"], "param_type": "boolean", "param_description": " whether or not the stack trace is writable"}], "class_name": "LambdaConversionException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a LambdaConversionException with a message,\n cause, and other settings.\n", "method_declar": ""}], "class_name": "LambdaConversionException", "Vars": null}