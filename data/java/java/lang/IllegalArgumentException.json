{"package_name": "java.lang", "subclass_list": ["IllegalChannelGroupException", "IllegalCharsetNameException", "IllegalFormatException", "IllegalSelectorException", "IllegalThreadStateException", "InvalidParameterException", "InvalidPathException", "NumberFormatException", "PatternSyntaxException", "ProviderMismatchException", "SystemUpdatePolicy.ValidationFailedException", "UnresolvedAddressException", "UnsupportedAddressTypeException", "UnsupportedCharsetException", "IllegalChannelGroupException", "IllegalCharsetNameException", "legal charset name", "IllegalFormatException", "IllegalSelectorException", "IllegalThreadStateException", "InvalidParameterException", "InvalidPathException", "Path", "NumberFormatException", "PatternSyntaxException", "ProviderMismatchException", "SystemUpdatePolicy.ValidationFailedException", "SystemUpdatePolicy#setFreezePeriods", "DevicePolicyManager#setSystemUpdatePolicy", "UnresolvedAddressException", "UnsupportedAddressTypeException", "UnsupportedCharsetException"], "class_description": "Thrown to indicate that a method has been passed an illegal or\n inappropriate argument. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["RuntimeException"], "Methods": [{"params": [], "class_name": "IllegalArgumentException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an IllegalArgumentException with no\n detail message.\n", "method_declar": ""}, {"params": [{"param_name": ["s"], "param_type": "String", "param_description": " the detail message."}], "class_name": "IllegalArgumentException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an IllegalArgumentException with the\n specified detail message.\n", "method_declar": ""}, {"params": [{"param_name": ["message"], "param_type": "String", "param_description": " the detail message (which is saved for later retrieval\n         by the Throwable#getMessage() method)."}, {"param_name": ["cause"], "param_type": "Throwable", "param_description": " the cause (which is saved for later retrieval by the\n         Throwable#getCause() method).  (A null value\n         is permitted, and indicates that the cause is nonexistent or\n         unknown.)"}], "class_name": "IllegalArgumentException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new exception with the specified detail message and\n cause.\n\n \nNote that the detail message associated with cause is\n not automatically incorporated in this exception's detail\n message.\n", "method_declar": ""}, {"params": [{"param_name": ["cause"], "param_type": "Throwable", "param_description": " the cause (which is saved for later retrieval by the\n         Throwable#getCause() method).  (A null value is\n         permitted, and indicates that the cause is nonexistent or\n         unknown.)"}], "class_name": "IllegalArgumentException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new exception with the specified cause and a detail\n message of (cause==null ? null : cause.toString()) (which\n typically contains the class and detail message of cause).\n This constructor is useful for exceptions that are little more than\n wrappers for other throwables (for example, PrivilegedActionException).\n", "method_declar": ""}], "class_name": "IllegalArgumentException", "Vars": null}