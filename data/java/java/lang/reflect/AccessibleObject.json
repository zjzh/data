{"package_name": "java.lang.reflect", "subclass_list": ["Executable", "Field", "Executable", "Method", "Constructor", "Field"], "class_description": "The AccessibleObject class is the base class for Field, Method and\n Constructor objects.  It provides the ability to flag a reflected\n object as suppressing default Java language access control checks\n when it is used.  The access checks--for public, default (package)\n access, protected, and private members--are performed when Fields,\n Methods or Constructors are used to set or get fields, to invoke\n methods, or to create and initialize new instances of classes,\n respectively. Setting the accessible flag in a reflected object\n permits sophisticated applications with sufficient privilege, such\n as Java Object Serialization or other persistence mechanisms, to\n manipulate objects in a manner that would normally be prohibited. By default, a reflected object is not accessible. ", "class_type": "class", "typealias": [], "interface_list": ["AnnotatedElement"], "class_inherit_list": ["Object"], "Methods": [], "class_name": "AccessibleObject", "Vars": null}