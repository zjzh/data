{"package_name": "java.lang", "subclass_list": [], "class_description": "Thrown when an application tries to access a type using a string\n representing the type's name, but no definition for the type with\n the specified name can be found.   This exception differs from\n ClassNotFoundException in that ClassNotFoundException is a\n checked exception, whereas this exception is unchecked. Note that this exception may be used when undefined type variables\n are accessed as well as when types (e.g., classes, interfaces or\n annotation types) are loaded.\n In particular, this exception can be thrown by the API used to read annotations\n reflectively. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["RuntimeException"], "Methods": [{"params": [{"param_name": ["typeName"], "param_type": "String", "param_description": " the fully qualified name of the unavailable type"}, {"param_name": ["cause"], "param_type": "Throwable", "param_description": " the exception that was thrown when the system attempted to\n    load the named type, or null if unavailable or inapplicable"}], "class_name": "TypeNotPresentException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a TypeNotPresentException for the named type\n with the specified cause.\n", "method_declar": ""}, {"params": [], "class_name": "TypeNotPresentException", "is_static": false, "return_value": {"return_name": [], "return_description": ["the fully qualified name of the unavailable type"], "return_type": ["String"]}, "method_name": "typeName", "method_description": "Returns the fully qualified name of the unavailable type.\n", "method_declar": ""}], "class_name": "TypeNotPresentException", "Vars": null}