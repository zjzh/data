{"package_name": "java.lang.annotation", "subclass_list": [], "class_description": "The constants of this enumerated type provide a simple classification of the\n syntactic locations where annotations may appear in a Java program. These\n constants are used in Target\n meta-annotations to specify where it is legal to write annotations of a\n given type. The syntactic locations where annotations may appear are split into\n declaration contexts , where annotations apply to declarations, and\n type contexts , where annotations apply to types used in\n declarations and expressions. The constants ANNOTATION_TYPE , CONSTRUCTOR , FIELD , LOCAL_VARIABLE , METHOD , PACKAGE ,\n PARAMETER , TYPE , and TYPE_PARAMETER correspond\n to the declaration contexts in JLS 9.6.4.1. For example, an annotation whose type is meta-annotated with\n @Target(ElementType.FIELD) may only be written as a modifier for a\n field declaration. The constant TYPE_USE corresponds to the 15 type contexts in JLS\n 4.11, as well as to two declaration contexts: type declarations (including\n annotation type declarations) and type parameter declarations. For example, an annotation whose type is meta-annotated with\n @Target(ElementType.TYPE_USE) may be written on the type of a field\n (or within the type of the field, if it is a nested, parameterized, or array\n type), and may also appear as a modifier for, say, a class declaration. The TYPE_USE constant includes type declarations and type\n parameter declarations as a convenience for designers of type checkers which\n give semantics to annotation types. For example, if the annotation type\n NonNull is meta-annotated with\n @Target(ElementType.TYPE_USE), then @NonNull\nclass C {...} could be treated by a type checker as indicating that\n all variables of class C are non-null, while still allowing\n variables of other classes to be non-null or not non-null based on whether\n @NonNull appears at the variable's declaration. ", "class_type": "enum", "typealias": [], "interface_list": [""], "class_inherit_list": ["Enum<ElementType>"], "Methods": [], "class_name": "ElementType", "Vars": null}