{"package_name": "java.lang", "subclass_list": [], "class_description": "A thread group represents a set of threads. In addition, a thread\n group can also include other thread groups. The thread groups form\n a tree in which every thread group except the initial thread group\n has a parent. A thread is allowed to access information about its own thread\n group, but not to access information about its thread group's\n parent thread group or any other thread groups. ", "class_type": "class", "typealias": [], "interface_list": ["Thread.UncaughtExceptionHandler"], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["name"], "param_type": "String", "param_description": " the name of the new thread group."}], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new thread group. The parent of this new group is\n the thread group of the currently running thread.\n \n\n The checkAccess method of the parent thread group is\n called with no arguments; this may result in a security exception.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["parent"], "param_type": "ThreadGroup", "param_description": " the parent thread group."}, {"param_name": ["name"], "param_type": "String", "param_description": " the name of the new thread group."}], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a new thread group. The parent of this new group is the\n specified thread group.\n \n\n The checkAccess method of the parent thread group is\n called with no arguments; this may result in a security exception.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": ["an estimate of the number of active threads in this thread\n          group and in any other thread group that has this thread\n          group as an ancestor"], "return_type": ["int"]}, "method_name": "activeCount", "method_description": "Returns an estimate of the number of active threads in this thread\n group and its subgroups. Recursively iterates over all subgroups in\n this thread group.\n\n \n The value returned is only an estimate because the number of\n threads may change dynamically while this method traverses internal\n data structures, and might be affected by the presence of certain\n system threads. This method is intended primarily for debugging\n and monitoring purposes.\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": ["the number of active thread groups with this thread group as\n          an ancestor"], "return_type": ["int"]}, "method_name": "activeGroupCount", "method_description": "Returns an estimate of the number of active groups in this\n thread group and its subgroups. Recursively iterates over\n all subgroups in this thread group.\n\n \n The value returned is only an estimate because the number of\n thread groups may change dynamically while this method traverses\n internal data structures. This method is intended primarily for\n debugging and monitoring purposes.\n", "method_declar": ""}, {"params": [{"param_name": ["b"], "param_type": "boolean", "param_description": " boolean to allow or disallow suspension"}], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": ["true on success"], "return_type": ["boolean"]}, "method_name": "allowThreadSuspension", "method_description": "\n\n\n      This method was deprecated\n      in API level 15.\n    The definition of this call depends on suspend(),\n             which is deprecated.  Further, the behavior of this call\n             was never specified.\n  \nUsed by VM to control lowmem implicit suspension.\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "checkAccess", "method_description": "Determines if the currently running thread has permission to\n modify this thread group.\n \n\n If there is a security manager, its checkAccess method\n is called with this thread group as its argument. This may result\n in throwing a SecurityException.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "destroy", "method_description": "Destroys this thread group and all of its subgroups. This thread\n group must be empty, indicating that all threads that had been in\n this thread group have since stopped.\n \n\n First, the checkAccess method of this thread group is\n called with no arguments; this may result in a security exception.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["list"], "param_type": "ThreadGroup[]", "param_description": " an array into which to put the list of thread groups"}], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": ["the number of thread groups put into the array"], "return_type": ["int"]}, "method_name": "enumerate", "method_description": "Copies into the specified array references to every active\n subgroup in this thread group and its subgroups.\n\n \n An invocation of this method behaves in exactly the same\n way as the invocation\n\n \n", "method_declar": ""}, {"params": [{"param_name": ["list"], "param_type": "ThreadGroup[]", "param_description": " an array into which to put the list of thread groups"}, {"param_name": ["recurse"], "param_type": "boolean", "param_description": " if true, recursively enumerate all subgroups"}], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": ["the number of thread groups put into the array"], "return_type": ["int"]}, "method_name": "enumerate", "method_description": "Copies into the specified array references to every active\n subgroup in this thread group. If recurse is\n true, this method recursively enumerates all subgroups of this\n thread group and references to every active thread group in these\n subgroups are also included.\n\n \n An application might use the\n activeGroupCount method to\n get an estimate of how big the array should be, however if the\n array is too short to hold all the thread groups, the extra thread\n groups are silently ignored.  If it is critical to obtain every\n active subgroup in this thread group, the caller should verify that\n the returned int value is strictly less than the length of\n list.\n\n \n Due to the inherent race condition in this method, it is recommended\n that the method only be used for debugging and monitoring purposes.\n", "method_declar": ""}, {"params": [{"param_name": ["list"], "param_type": "Thread[]", "param_description": " an array into which to put the list of threads"}], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": ["the number of threads put into the array"], "return_type": ["int"]}, "method_name": "enumerate", "method_description": "Copies into the specified array every active thread in this\n thread group and its subgroups.\n\n \n An invocation of this method behaves in exactly the same\n way as the invocation\n\n \n", "method_declar": ""}, {"params": [{"param_name": ["list"], "param_type": "Thread[]", "param_description": " an array into which to put the list of threads"}, {"param_name": ["recurse"], "param_type": "boolean", "param_description": " if true, recursively enumerate all subgroups of this\n         thread group"}], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": ["the number of threads put into the array"], "return_type": ["int"]}, "method_name": "enumerate", "method_description": "Copies into the specified array every active thread in this\n thread group. If recurse is true,\n this method recursively enumerates all subgroups of this\n thread group and references to every active thread in these\n subgroups are also included. If the array is too short to\n hold all the threads, the extra threads are silently ignored.\n\n \n An application might use the activeCount\n method to get an estimate of how big the array should be, however\n if the array is too short to hold all the threads, the extra threads\n are silently ignored.  If it is critical to obtain every active\n thread in this thread group, the caller should verify that the returned\n int value is strictly less than the length of list.\n\n \n Due to the inherent race condition in this method, it is recommended\n that the method only be used for debugging and monitoring purposes.\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": ["the maximum priority that a thread in this thread group\n          can have."], "return_type": ["int"]}, "method_name": "getMaxPriority", "method_description": "Returns the maximum priority of this thread group. Threads that are\n part of this group cannot have a higher priority than the maximum\n priority.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": ["the name of this thread group."], "return_type": ["String"]}, "method_name": "getName", "method_description": "Returns the name of this thread group.\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": ["the parent of this thread group. The top-level thread group\n          is the only thread group whose parent is null."], "return_type": ["ThreadGroup"]}, "method_name": "getParent", "method_description": "Returns the parent of this thread group.\n \n\n First, if the parent is not null, the\n checkAccess method of the parent thread group is\n called with no arguments; this may result in a security exception.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "interrupt", "method_description": "Interrupts all threads in this thread group.\n \n\n First, the checkAccess method of this thread group is\n called with no arguments; this may result in a security exception.\n \n\n This method then calls the interrupt method on all the\n threads in this thread group and in all of its subgroups.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": ["true if this thread group is a daemon thread group;\n          false otherwise."], "return_type": ["boolean"]}, "method_name": "isDaemon", "method_description": "Tests if this thread group is a daemon thread group. A\n daemon thread group is automatically destroyed when its last\n thread is stopped or its last thread group is destroyed.\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": ["true if this object is destroyed"], "return_type": ["boolean"]}, "method_name": "isDestroyed", "method_description": "Tests if this thread group has been destroyed.\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "list", "method_description": "Prints information about this thread group to the standard\n output. This method is useful only for debugging.\n", "method_declar": ""}, {"params": [{"param_name": ["g"], "param_type": "ThreadGroup", "param_description": " a thread group."}], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": ["true if this thread group is the thread group\n          argument or one of its ancestor thread groups;\n          false otherwise."], "return_type": ["boolean"]}, "method_name": "parentOf", "method_description": "Tests if this thread group is either the thread group\n argument or one of its ancestor thread groups.\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "resume", "method_description": "\n\n\n      This method was deprecated\n      in API level 15.\n    This method is used solely in conjunction with\n      Thread.suspend and ThreadGroup.suspend,\n       both of which have been deprecated, as they are inherently\n       deadlock-prone.  See Thread#suspend for details.\n  \nResumes all threads in this thread group.\n \n\n First, the checkAccess method of this thread group is\n called with no arguments; this may result in a security exception.\n \n\n This method then calls the resume method on all the\n threads in this thread group and in all of its sub groups.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["daemon"], "param_type": "boolean", "param_description": " if true, marks this thread group as\n                      a daemon thread group; otherwise, marks this\n                      thread group as normal."}], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "setDaemon", "method_description": "Changes the daemon status of this thread group.\n \n\n First, the checkAccess method of this thread group is\n called with no arguments; this may result in a security exception.\n \n\n A daemon thread group is automatically destroyed when its last\n thread is stopped or its last thread group is destroyed.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["pri"], "param_type": "int", "param_description": " the new priority of the thread group."}], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "setMaxPriority", "method_description": "Sets the maximum priority of the group. Threads in the thread\n group that already have a higher priority are not affected.\n \n\n First, the checkAccess method of this thread group is\n called with no arguments; this may result in a security exception.\n \n\n If the pri argument is less than\n Thread#MIN_PRIORITY or greater than\n Thread#MAX_PRIORITY, it is clamped to those values.\n \n\n Otherwise, the priority of this ThreadGroup object is set to the\n smaller of the specified pri and the maximum permitted\n priority of the parent of this thread group. (If this thread group\n is the system thread group, which has no parent, then its maximum\n priority is simply set to pri.) Then this method is\n called recursively, with pri as its argument, for\n every thread group that belongs to this thread group.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "stop", "method_description": "\n\n\n      This method was deprecated\n      in API level 15.\n    This method is inherently unsafe.  See\n     Thread#stop for details.\n  \nStops all threads in this thread group.\n \n\n First, the checkAccess method of this thread group is\n called with no arguments; this may result in a security exception.\n \n\n This method then calls the stop method on all the\n threads in this thread group and in all of its subgroups.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "suspend", "method_description": "\n\n\n      This method was deprecated\n      in API level 15.\n    This method is inherently deadlock-prone.  See\n     Thread#suspend for details.\n  \nSuspends all threads in this thread group.\n \n\n First, the checkAccess method of this thread group is\n called with no arguments; this may result in a security exception.\n \n\n This method then calls the suspend method on all the\n threads in this thread group and in all of its subgroups.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": ["a string representation of this thread group."], "return_type": ["String"]}, "method_name": "toString", "method_description": "Returns a string representation of this Thread group.\n", "method_declar": ""}, {"params": [{"param_name": ["t"], "param_type": "Thread", "param_description": " the thread that is about to exit."}, {"param_name": ["e"], "param_type": "Throwable", "param_description": " the uncaught exception."}], "class_name": "ThreadGroup", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "uncaughtException", "method_description": "Called by the Java Virtual Machine when a thread in this\n thread group stops because of an uncaught exception, and the thread\n does not have a specific Thread.UncaughtExceptionHandler\n installed.\n \n\n The uncaughtException method of\n ThreadGroup does the following:\n \n\n Applications can override this method in subclasses of\n ThreadGroup to provide alternative handling of\n uncaught exceptions.\n", "method_declar": ""}], "class_name": "ThreadGroup", "Vars": null}