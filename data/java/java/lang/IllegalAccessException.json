{"package_name": "java.lang", "subclass_list": [], "class_description": "An IllegalAccessException is thrown when an application tries\n to reflectively create an instance (other than an array),\n set or get a field, or invoke a method, but the currently\n executing method does not have access to the definition of\n the specified class, field, method or constructor. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["ReflectiveOperationException"], "Methods": [{"params": [], "class_name": "IllegalAccessException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an IllegalAccessException without a\n detail message.\n", "method_declar": ""}, {"params": [{"param_name": ["s"], "param_type": "String", "param_description": " the detail message."}], "class_name": "IllegalAccessException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an IllegalAccessException with a detail message.\n", "method_declar": ""}], "class_name": "IllegalAccessException", "Vars": null}