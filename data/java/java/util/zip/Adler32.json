{"package_name": "java.util.zip", "subclass_list": [], "class_description": "A class that can be used to compute the Adler-32 checksum of a data\n stream. An Adler-32 checksum is almost as reliable as a CRC-32 but\n can be computed much faster. Passing a null argument to a method in this class will cause\n a NullPointerException to be thrown. ", "class_type": "class", "typealias": [], "interface_list": ["Checksum"], "class_inherit_list": ["Object"], "Methods": [{"params": [], "class_name": "Adler32", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a new Adler32 object.\n", "method_declar": ""}, {"params": [], "class_name": "Adler32", "is_static": false, "return_value": {"return_name": [], "return_description": ["the current checksum value"], "return_type": ["long"]}, "method_name": "getValue", "method_description": "Returns the checksum value.\n", "method_declar": ""}, {"params": [], "class_name": "Adler32", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "reset", "method_description": "Resets the checksum to initial value.\n", "method_declar": ""}, {"params": [{"param_name": ["b"], "param_type": "byte[]", "param_description": " the byte array to update the checksum with"}], "class_name": "Adler32", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "update", "method_description": "Updates the checksum with the specified array of bytes.\n", "method_declar": ""}, {"params": [{"param_name": ["buffer"], "param_type": "ByteBuffer", "param_description": " the ByteBuffer to update the checksum with"}], "class_name": "Adler32", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "update", "method_description": "Updates the checksum with the bytes from the specified buffer.\n\n The checksum is updated using\n buffer.remaining()\n bytes starting at\n buffer.position()\n Upon return, the buffer's position will be updated to its\n limit; its limit will not have been changed.\n", "method_declar": ""}, {"params": [{"param_name": ["b"], "param_type": "byte[]", "param_description": " the byte array to update the checksum with"}, {"param_name": ["off"], "param_type": "int", "param_description": " the start offset of the data"}, {"param_name": ["len"], "param_type": "int", "param_description": " the number of bytes to use for the update"}], "class_name": "Adler32", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "update", "method_description": "Updates the checksum with the specified array of bytes.\n", "method_declar": ""}, {"params": [{"param_name": ["b"], "param_type": "int", "param_description": " the byte to update the checksum with"}], "class_name": "Adler32", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "update", "method_description": "Updates the checksum with the specified byte (the low eight\n bits of the argument b).\n", "method_declar": ""}], "class_name": "Adler32", "Vars": null}