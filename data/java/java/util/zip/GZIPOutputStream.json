{"package_name": "java.util.zip", "subclass_list": [], "class_description": "This class implements a stream filter for writing compressed data in\n the GZIP file format. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["DeflaterOutputStream"], "Methods": [{"params": [{"param_name": ["out"], "param_type": "OutputStream", "param_description": " the output stream"}, {"param_name": ["size"], "param_type": "int", "param_description": " the output buffer size"}], "class_name": "GZIPOutputStream", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a new output stream with the specified buffer size.\n\n \nThe new output stream instance is created as if by invoking\n the 3-argument constructor GZIPOutputStream(out, size, false).\n", "method_declar": ""}, {"params": [{"param_name": ["out"], "param_type": "OutputStream", "param_description": " the output stream"}, {"param_name": ["size"], "param_type": "int", "param_description": " the output buffer size"}, {"param_name": ["syncFlush"], "param_type": "boolean", "param_description": " if true invocation of the inherited\n        DeflaterOutputStream#flush() method of\n        this instance flushes the compressor with flush mode\n        Deflater#SYNC_FLUSH before flushing the output\n        stream, otherwise only flushes the output stream"}], "class_name": "GZIPOutputStream", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a new output stream with the specified buffer size and\n flush mode.\n", "method_declar": ""}, {"params": [{"param_name": ["out"], "param_type": "OutputStream", "param_description": " the output stream"}], "class_name": "GZIPOutputStream", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a new output stream with a default buffer size.\n\n \nThe new output stream instance is created as if by invoking\n the 2-argument constructor GZIPOutputStream(out, false).\n", "method_declar": ""}, {"params": [{"param_name": ["out"], "param_type": "OutputStream", "param_description": " the output stream"}, {"param_name": ["syncFlush"], "param_type": "boolean", "param_description": " if true invocation of the inherited\n        DeflaterOutputStream#flush() method of\n        this instance flushes the compressor with flush mode\n        Deflater#SYNC_FLUSH before flushing the output\n        stream, otherwise only flushes the output stream"}], "class_name": "GZIPOutputStream", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a new output stream with a default buffer size and\n the specified flush mode.\n", "method_declar": ""}, {"params": [], "class_name": "GZIPOutputStream", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "finish", "method_description": "Finishes writing compressed data to the output stream without closing\n the underlying stream. Use this method when applying multiple filters\n in succession to the same output stream.\n", "method_declar": ""}, {"params": [{"param_name": ["buf"], "param_type": "byte[]", "param_description": " the data to be written"}, {"param_name": ["off"], "param_type": "int", "param_description": " the start offset of the data"}, {"param_name": ["len"], "param_type": "int", "param_description": " the length of the data"}], "class_name": "GZIPOutputStream", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "write", "method_description": "Writes array of bytes to the compressed output stream. This method\n will block until all the bytes are written.\n", "method_declar": ""}], "class_name": "GZIPOutputStream", "Vars": null}