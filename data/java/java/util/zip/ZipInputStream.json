{"package_name": "java.util.zip", "subclass_list": ["JarInputStream", "JarInputStream"], "class_description": "This class implements an input stream filter for reading files in the\n ZIP file format. Includes support for both compressed and uncompressed\n entries. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["InflaterInputStream"], "Methods": [{"params": [{"param_name": ["in"], "param_type": "InputStream", "param_description": " the actual input stream"}], "class_name": "ZipInputStream", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a new ZIP input stream.\n\n \nThe UTF-8 charset is used to\n decode the entry names.\n", "method_declar": ""}, {"params": [{"param_name": ["in"], "param_type": "InputStream", "param_description": " the actual input stream"}, {"param_name": ["charset"], "param_type": "Charset", "param_description": " The charset to be\n        used to decode the ZIP entry name (ignored if the\n         language\n        encoding bit of the ZIP entry's general purpose bit\n        flag is set)."}], "class_name": "ZipInputStream", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a new ZIP input stream.\n", "method_declar": ""}, {"params": [], "class_name": "ZipInputStream", "is_static": false, "return_value": {"return_name": [], "return_description": ["1 before EOF and 0 after EOF has reached for current entry."], "return_type": ["int"]}, "method_name": "available", "method_description": "Returns 0 after EOF has reached for the current entry data,\n otherwise always return 1.\n \n\n Programs should not count on this method to return the actual number\n of bytes that could be read without blocking.\n", "method_declar": ""}, {"params": [], "class_name": "ZipInputStream", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "close", "method_description": "Closes this input stream and releases any system resources associated\n with the stream.\n", "method_declar": ""}, {"params": [], "class_name": "ZipInputStream", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "closeEntry", "method_description": "Closes the current ZIP entry and positions the stream for reading the\n next entry.\n", "method_declar": ""}, {"params": [], "class_name": "ZipInputStream", "is_static": false, "return_value": {"return_name": [], "return_description": ["the next ZIP file entry, or null if there are no more entries"], "return_type": ["ZipEntry"]}, "method_name": "getNextEntry", "method_description": "Reads the next ZIP file entry and positions the stream at the\n beginning of the entry data.\n", "method_declar": ""}, {"params": [{"param_name": ["b"], "param_type": "byte[]", "param_description": " the buffer into which the data is read"}, {"param_name": ["off"], "param_type": "int", "param_description": " the start offset in the destination array b"}, {"param_name": ["len"], "param_type": "int", "param_description": " the maximum number of bytes read"}], "class_name": "ZipInputStream", "is_static": false, "return_value": {"return_name": [], "return_description": ["the actual number of bytes read, or -1 if the end of the\n         entry is reached"], "return_type": ["int"]}, "method_name": "read", "method_description": "Reads from the current ZIP entry into an array of bytes.\n If len is not zero, the method\n blocks until some input is available; otherwise, no\n bytes are read and 0 is returned.\n", "method_declar": ""}, {"params": [{"param_name": ["n"], "param_type": "long", "param_description": " the number of bytes to skip"}], "class_name": "ZipInputStream", "is_static": false, "return_value": {"return_name": [], "return_description": ["the actual number of bytes skipped"], "return_type": ["long"]}, "method_name": "skip", "method_description": "Skips specified number of bytes in the current ZIP entry.\n", "method_declar": ""}], "class_name": "ZipInputStream", "Vars": null}