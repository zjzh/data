{"package_name": "java.util", "subclass_list": [], "class_description": "PropertyResourceBundle is a concrete subclass of\n ResourceBundle that manages resources for a locale\n using a set of static strings from a property file. See\n ResourceBundle for more information about resource\n bundles. Unlike other types of resource bundle, you don't subclass\n PropertyResourceBundle.  Instead, you supply properties\n files containing the resource data.  ResourceBundle.getBundle\n will automatically look for the appropriate properties file and create a\n PropertyResourceBundle that refers to it. See\n ResourceBundle#getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader)\n for a complete description of the search and instantiation strategy. The following example shows a member of a resource\n bundle family with the base name \"MyResources\".\n The text defines the bundle \"MyResources_de\",\n the German member of the bundle family.\n This member is based on PropertyResourceBundle, and the text\n therefore is the content of the file \"MyResources_de.properties\"\n (a related example shows\n how you can add bundles to this family that are implemented as subclasses\n of ListResourceBundle).\n The keys in this example are of the form \"s1\" etc. The actual\n keys are entirely up to your choice, so long as they are the same as\n the keys you use in your program to retrieve the objects from the bundle.\n Keys are case-sensitive. The implementation of a PropertyResourceBundle subclass must be\n thread-safe if it's simultaneously used by multiple threads. The default\n implementations of the non-abstract methods in this class are thread-safe. Note: PropertyResourceBundle can be constructed either\n from an InputStream or a Reader, which represents a property file.\n Constructing a PropertyResourceBundle instance from an InputStream requires\n that the input stream be encoded in ISO-8859-1.  In that case, characters\n that cannot be represented in ISO-8859-1 encoding must be represented by Unicode Escapes\n as defined in section 3.3 of\n The Java\u2122 Language Specification\n whereas the other constructor which takes a Reader does not have that limitation. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["ResourceBundle"], "Methods": [{"params": [{"param_name": ["stream"], "param_type": "InputStream", "param_description": " an InputStream that represents a property file\n        to read from."}], "class_name": "PropertyResourceBundle", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a property resource bundle from an InputStream.  The property file read with this constructor\n must be encoded in ISO-8859-1.\n", "method_declar": ""}, {"params": [{"param_name": ["reader"], "param_type": "Reader", "param_description": " a Reader that represents a property file to\n        read from."}], "class_name": "PropertyResourceBundle", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a property resource bundle from a Reader.  Unlike the constructor\n PropertyResourceBundle(InputStream),\n there is no limitation as to the encoding of the input property file.\n", "method_declar": ""}, {"params": [], "class_name": "PropertyResourceBundle", "is_static": false, "return_value": {"return_name": [], "return_description": ["an Enumeration of the keys contained in\n         this ResourceBundle and its parent bundles."], "return_type": ["Enumeration<String>"]}, "method_name": "getKeys", "method_description": "Returns an Enumeration of the keys contained in\n this ResourceBundle and its parent bundles.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["key"], "param_type": "String", "param_description": " the key for the desired object"}], "class_name": "PropertyResourceBundle", "is_static": false, "return_value": {"return_name": [], "return_description": ["the object for the given key, or null"], "return_type": ["Object"]}, "method_name": "handleGetObject", "method_description": "Gets an object for the given key from this resource bundle.\n Returns null if this resource bundle does not contain an\n object for the given key.\n", "method_declar": ""}], "class_name": "PropertyResourceBundle", "Vars": null}