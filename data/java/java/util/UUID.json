{"package_name": "java.util", "subclass_list": [], "class_description": "A class that represents an immutable universally unique identifier (UUID).\n A UUID represents a 128-bit value. There exist different variants of these global identifiers.  The methods\n of this class are for manipulating the Leach-Salz variant, although the\n constructors allow the creation of any variant of UUID (described below). The layout of a variant 2 (Leach-Salz) UUID is as follows:\n\n The most significant long consists of the following unsigned fields: The variant field contains a value which identifies the layout of the\n UUID.  The bit layout described above is valid only for a UUID with a variant value of 2, which indicates the Leach-Salz variant. The version field holds a value that describes the type of this UUID.  There are four different basic types of UUIDs: time-based, DCE\n security, name-based, and randomly generated UUIDs.  These types have a\n version value of 1, 2, 3 and 4, respectively. For more information including algorithms used to create UUIDs,\n see  RFC\u00a04122: A\n Universally Unique IDentifier (UUID) URN Namespace, section 4.2\n \"Algorithms for Creating a Time-Based UUID\". ", "class_type": "class", "typealias": [], "interface_list": ["Serializable", "Comparable<UUID>"], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["mostSigBits"], "param_type": "long", "param_description": " The most significant bits of the UUID"}, {"param_name": ["leastSigBits"], "param_type": "long", "param_description": " The least significant bits of the UUID"}], "class_name": "UUID", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new UUID using the specified data.  mostSigBits is used for the most significant 64 bits of the UUID and leastSigBits becomes the least significant 64 bits of\n the UUID.\n", "method_declar": ""}, {"params": [], "class_name": "UUID", "is_static": false, "return_value": {"return_name": [], "return_description": ["The clock sequence of this UUID"], "return_type": ["int"]}, "method_name": "clockSequence", "method_description": "The clock sequence value associated with this UUID.\n\n \n The 14 bit clock sequence value is constructed from the clock\n sequence field of this UUID.  The clock sequence field is used to\n guarantee temporal uniqueness in a time-based UUID.\n\n \n The clockSequence value is only meaningful in a time-based\n UUID, which has version type 1.  If this UUID is not a time-based UUID\n then this method throws UnsupportedOperationException.\n", "method_declar": ""}, {"params": [{"param_name": ["val"], "param_type": "UUID", "param_description": " UUID to which this UUID is to be compared"}], "class_name": "UUID", "is_static": false, "return_value": {"return_name": [], "return_description": ["-1, 0 or 1 as this UUID is less than, equal to, or\n          greater than val"], "return_type": ["int"]}, "method_name": "compareTo", "method_description": "Compares this UUID with the specified UUID.\n\n \n The first of two UUIDs is greater than the second if the most\n significant field in which the UUIDs differ is greater for the first\n UUID.\n", "method_declar": ""}, {"params": [{"param_name": ["obj"], "param_type": "Object", "param_description": " The object to be compared"}], "class_name": "UUID", "is_static": false, "return_value": {"return_name": [], "return_description": ["true if the objects are the same; false\n          otherwise"], "return_type": ["boolean"]}, "method_name": "equals", "method_description": "Compares this object to the specified object.  The result is true if and only if the argument is not null, is a UUID\n object, has the same variant, and contains the same value, bit for bit,\n as this UUID.\n", "method_declar": ""}, {"params": [{"param_name": ["name"], "param_type": "String", "param_description": " A string that specifies a UUID"}], "class_name": "UUID", "is_static": true, "return_value": {"return_name": [], "return_description": ["A UUID with the specified value"], "return_type": ["UUID"]}, "method_name": "fromString", "method_description": "Creates a UUID from the string standard representation as\n described in the toString() method.\n", "method_declar": ""}, {"params": [], "class_name": "UUID", "is_static": false, "return_value": {"return_name": [], "return_description": ["The least significant 64 bits of this UUID's 128 bit value"], "return_type": ["long"]}, "method_name": "getLeastSignificantBits", "method_description": "Returns the least significant 64 bits of this UUID's 128 bit value.\n", "method_declar": ""}, {"params": [], "class_name": "UUID", "is_static": false, "return_value": {"return_name": [], "return_description": ["The most significant 64 bits of this UUID's 128 bit value"], "return_type": ["long"]}, "method_name": "getMostSignificantBits", "method_description": "Returns the most significant 64 bits of this UUID's 128 bit value.\n", "method_declar": ""}, {"params": [], "class_name": "UUID", "is_static": false, "return_value": {"return_name": [], "return_description": ["A hash code value for this UUID"], "return_type": ["int"]}, "method_name": "hashCode", "method_description": "Returns a hash code for this UUID.\n", "method_declar": ""}, {"params": [{"param_name": ["name"], "param_type": "byte[]", "param_description": " A byte array to be used to construct a UUID"}], "class_name": "UUID", "is_static": true, "return_value": {"return_name": [], "return_description": ["A UUID generated from the specified array"], "return_type": ["UUID"]}, "method_name": "nameUUIDFromBytes", "method_description": "Static factory to retrieve a type 3 (name based) UUID based on\n the specified byte array.\n", "method_declar": ""}, {"params": [], "class_name": "UUID", "is_static": false, "return_value": {"return_name": [], "return_description": ["The node value of this UUID"], "return_type": ["long"]}, "method_name": "node", "method_description": "The node value associated with this UUID.\n\n \n The 48 bit node value is constructed from the node field of this\n UUID.  This field is intended to hold the IEEE 802 address of the machine\n that generated this UUID to guarantee spatial uniqueness.\n\n \n The node value is only meaningful in a time-based UUID, which has\n version type 1.  If this UUID is not a time-based UUID then this method\n throws UnsupportedOperationException.\n", "method_declar": ""}, {"params": [], "class_name": "UUID", "is_static": true, "return_value": {"return_name": [], "return_description": ["A randomly generated UUID"], "return_type": ["UUID"]}, "method_name": "randomUUID", "method_description": "Static factory to retrieve a type 4 (pseudo randomly generated) UUID.\n\n The UUID is generated using a cryptographically strong pseudo\n random number generator.\n", "method_declar": ""}, {"params": [], "class_name": "UUID", "is_static": false, "return_value": {"return_name": [], "return_description": ["The timestamp of this UUID."], "return_type": ["long"]}, "method_name": "timestamp", "method_description": "The timestamp value associated with this UUID.\n\n \n The 60 bit timestamp value is constructed from the time_low,\n time_mid, and time_hi fields of this UUID.  The resulting\n timestamp is measured in 100-nanosecond units since midnight,\n October 15, 1582 UTC.\n\n \n The timestamp value is only meaningful in a time-based UUID, which\n has version type 1.  If this UUID is not a time-based UUID then\n this method throws UnsupportedOperationException.\n", "method_declar": ""}, {"params": [], "class_name": "UUID", "is_static": false, "return_value": {"return_name": [], "return_description": ["A string representation of this UUID"], "return_type": ["String"]}, "method_name": "toString", "method_description": "Returns a String object representing this UUID.\n\n \n The UUID string representation is as described by this BNF:\n \n", "method_declar": ""}, {"params": [], "class_name": "UUID", "is_static": false, "return_value": {"return_name": [], "return_description": ["The variant number of this UUID"], "return_type": ["int"]}, "method_name": "variant", "method_description": "The variant number associated with this UUID.  The variant\n number describes the layout of the UUID.\n\n The variant number has the following meaning:\n \n", "method_declar": ""}, {"params": [], "class_name": "UUID", "is_static": false, "return_value": {"return_name": [], "return_description": ["The version number of this UUID"], "return_type": ["int"]}, "method_name": "version", "method_description": "The version number associated with this UUID.  The version\n number describes how this UUID was generated.\n\n The version number has the following meaning:\n \n", "method_declar": ""}], "class_name": "UUID", "Vars": null}