{"package_name": "java.util", "subclass_list": [], "class_description": "Calendar.Builder is used for creating a Calendar from\n various date-time parameters. There are two ways to set a Calendar to a date-time value. One\n is to set the instant parameter to a millisecond offset from the Epoch. The other is to set individual\n field parameters, such as Calendar#YEAR, to their desired\n values. These two ways can't be mixed. Trying to set both the instant and\n individual fields will cause an IllegalStateException to be\n thrown. However, it is permitted to override previous values of the\n instant or field parameters. If no enough field parameters are given for determining date and/or\n time, calendar specific default values are used when building a\n Calendar. For example, if the Calendar#YEAR value\n isn't given for the Gregorian calendar, 1970 will be used. If there are\n any conflicts among field parameters, the  resolution rules are applied.\n Therefore, the order of field setting matters. In addition to the date-time parameters,\n the locale,\n time zone,\n week definition, and\n leniency mode parameters can be set. Examples The following are sample usages. Sample code assumes that the\n Calendar constants are statically imported. The following code produces a Calendar with date 2012-12-31\n (Gregorian) because Monday is the first day of a week with the  ISO 8601\n compatible week parameters. The following code produces a Japanese Calendar with date\n 1989-01-08 (Gregorian), assuming that the default Calendar#ERA\n is Heisei that started on that day. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [{"params": [], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a Calendar.Builder.\n", "method_declar": ""}, {"params": [], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["a Calendar built with parameters of this Calendar.Builder"], "return_type": ["Calendar"]}, "method_name": "build", "method_description": "Returns a Calendar built from the parameters set by the\n setter methods. The calendar type given by the setCalendarType method or the locale is\n used to determine what Calendar to be created. If no explicit\n calendar type is given, the locale's default calendar is created.\n\n \nIf the calendar type is \"iso8601\", the\n GregorianCalendar#setGregorianChange(Date)\n of a GregorianCalendar is set to Date(Long.MIN_VALUE)\n to be the proleptic Gregorian calendar. Its week definition\n parameters are also set to be compatible\n with the ISO 8601 standard. Note that the\n GregorianCalendar#getCalendarType() method of\n a GregorianCalendar created with \"iso8601\" returns\n \"gregory\".\n\n \nThe default values are used for locale and time zone if these\n parameters haven't been given explicitly.\n\n \nAny out of range field values are either normalized in lenient\n mode or detected as an invalid value in non-lenient mode.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["field"], "param_type": "int", "param_description": " an index to the Calendar fields"}, {"param_name": ["value"], "param_type": "int", "param_description": " the field value"}], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["this Calendar.Builder"], "return_type": ["Calendar.Builder"]}, "method_name": "set", "method_description": "Sets the field parameter to the given value.\n field is an index to the Calendar#fields, such as\n Calendar#DAY_OF_MONTH. Field value validation is\n not performed in this method. Any out of range values are either\n normalized in lenient mode or detected as an invalid value in\n non-lenient mode when building a Calendar.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["type"], "param_type": "String", "param_description": " the calendar type"}], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["this Calendar.Builder"], "return_type": ["Calendar.Builder"]}, "method_name": "setCalendarType", "method_description": "Sets the calendar type parameter to the given type. The\n calendar type given by this method has precedence over any explicit\n or implicit calendar type given by the\n locale.\n\n \nIn addition to the available calendar types returned by the\n Calendar#getAvailableCalendarTypes()\n method, \"gregorian\" and \"iso8601\" as aliases of\n \"gregory\" can be used with this method.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["year"], "param_type": "int", "param_description": " the Calendar#YEAR value"}, {"param_name": ["month"], "param_type": "int", "param_description": " the Calendar#MONTH value\n                   (the month numbering is 0-based)."}, {"param_name": ["dayOfMonth"], "param_type": "int", "param_description": " the Calendar#DAY_OF_MONTH value"}], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["this Calendar.Builder"], "return_type": ["Calendar.Builder"]}, "method_name": "setDate", "method_description": "Sets the date field parameters to the values given by year,\n month, and dayOfMonth. This method is equivalent to\n a call to:\n \n", "method_declar": ""}, {"params": [{"param_name": ["fieldValuePairs"], "param_type": "int...", "param_description": " field-value pairs"}], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["this Calendar.Builder"], "return_type": ["Calendar.Builder"]}, "method_name": "setFields", "method_description": "Sets field parameters to their values given by\n fieldValuePairs that are pairs of a field and its value.\n For example,\n \n", "method_declar": ""}, {"params": [{"param_name": ["instant"], "param_type": "Date", "param_description": " a Date representing a millisecond offset from\n                the Epoch"}], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["this Calendar.Builder"], "return_type": ["Calendar.Builder"]}, "method_name": "setInstant", "method_description": "Sets the instant parameter to the instant value given by a\n Date. This method is equivalent to a call to\n setInstant(instant.getTime()).\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["instant"], "param_type": "long", "param_description": " a millisecond offset from the Epoch"}], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["this Calendar.Builder"], "return_type": ["Calendar.Builder"]}, "method_name": "setInstant", "method_description": "Sets the instant parameter to the given instant value that is\n a millisecond offset from the\n Epoch.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["lenient"], "param_type": "boolean", "param_description": " true for lenient mode;\n                false for non-lenient mode"}], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["this Calendar.Builder"], "return_type": ["Calendar.Builder"]}, "method_name": "setLenient", "method_description": "Sets the lenient mode parameter to the value given by lenient.\n If no lenient parameter is given to this Calendar.Builder,\n lenient mode will be used in the build method.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["locale"], "param_type": "Locale", "param_description": " the Locale"}], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["this Calendar.Builder"], "return_type": ["Calendar.Builder"]}, "method_name": "setLocale", "method_description": "Sets the locale parameter to the given locale. If no locale\n is given to this Calendar.Builder, the Locale#getDefault(Locale.Category)\n for Locale.Category#FORMAT will be used.\n\n \nIf no calendar type is explicitly given by a call to the\n setCalendarType method,\n the Locale value is used to determine what type of\n Calendar to be built.\n\n \nIf no week definition parameters are explicitly given by a call to\n the setWeekDefinition method, the\n Locale's default values are used.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["hourOfDay"], "param_type": "int", "param_description": " the Calendar#HOUR_OF_DAY value\n                  (24-hour clock)"}, {"param_name": ["minute"], "param_type": "int", "param_description": " the Calendar#MINUTE value"}, {"param_name": ["second"], "param_type": "int", "param_description": " the Calendar#SECOND value"}], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["this Calendar.Builder"], "return_type": ["Calendar.Builder"]}, "method_name": "setTimeOfDay", "method_description": "Sets the time of day field parameters to the values given by\n hourOfDay, minute, and second. This method is\n equivalent to a call to:\n \n", "method_declar": ""}, {"params": [{"param_name": ["hourOfDay"], "param_type": "int", "param_description": " the Calendar#HOUR_OF_DAY value\n                  (24-hour clock)"}, {"param_name": ["minute"], "param_type": "int", "param_description": " the Calendar#MINUTE value"}, {"param_name": ["second"], "param_type": "int", "param_description": " the Calendar#SECOND value"}, {"param_name": ["millis"], "param_type": "int", "param_description": " the Calendar#MILLISECOND value"}], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["this Calendar.Builder"], "return_type": ["Calendar.Builder"]}, "method_name": "setTimeOfDay", "method_description": "Sets the time of day field parameters to the values given by\n hourOfDay, minute, second, and\n millis. This method is equivalent to a call to:\n \n", "method_declar": ""}, {"params": [{"param_name": ["zone"], "param_type": "TimeZone", "param_description": " the TimeZone"}], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["this Calendar.Builder"], "return_type": ["Calendar.Builder"]}, "method_name": "setTimeZone", "method_description": "Sets the time zone parameter to the given zone. If no time\n zone parameter is given to this Caledar.Builder, the\n TimeZone#getDefault() will be used in the build\n method.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["weekYear"], "param_type": "int", "param_description": " the week year"}, {"param_name": ["weekOfYear"], "param_type": "int", "param_description": " the week number based on weekYear"}, {"param_name": ["dayOfWeek"], "param_type": "int", "param_description": " the day of week value: one of the constants\n     for the Calendar#DAY_OF_WEEK field:\n     Calendar#SUNDAY, ..., Calendar#SATURDAY."}], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["this Calendar.Builder"], "return_type": ["Calendar.Builder"]}, "method_name": "setWeekDate", "method_description": "Sets the week-based date parameters to the values with the given\n date specifiers - week year, week of year, and day of week.\n\n \nIf the specified calendar doesn't support week dates, the\n build method will throw an IllegalArgumentException.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["firstDayOfWeek"], "param_type": "int", "param_description": " the first day of a week; one of\n                       Calendar#SUNDAY to Calendar#SATURDAY"}, {"param_name": ["minimalDaysInFirstWeek"], "param_type": "int", "param_description": " the minimal number of days in the first\n                               week (1..7)"}], "class_name": "Calendar.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["this Calendar.Builder"], "return_type": ["Calendar.Builder"]}, "method_name": "setWeekDefinition", "method_description": "Sets the week definition parameters to the values given by\n firstDayOfWeek and minimalDaysInFirstWeek that are\n used to determine the first\n week of a year. The parameters given by this method have\n precedence over the default values given by the\n locale.\nSee also:\n", "method_declar": ""}], "class_name": "Calendar.Builder", "Vars": null}