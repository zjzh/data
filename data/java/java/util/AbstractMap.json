{"package_name": "java.util", "subclass_list": ["ConcurrentHashMap", "ConcurrentSkipListMap", "EnumMap", "Enum", "HashMap", "IdentityHashMap", "TreeMap", "WeakHashMap", "ConcurrentHashMap", "ConcurrentSkipListMap", "ConcurrentNavigableMap", "EnumMap", "Enum", "Map", "HashMap", "IdentityHashMap", "TreeMap", "NavigableMap", "WeakHashMap"], "class_description": "This class provides a skeletal implementation of the Map\n interface, to minimize the effort required to implement this interface. To implement an unmodifiable map, the programmer needs only to extend this\n class and provide an implementation for the entrySet method, which\n returns a set-view of the map's mappings.  Typically, the returned set\n will, in turn, be implemented atop AbstractSet.  This set should\n not support the add or remove methods, and its iterator\n should not support the remove method. To implement a modifiable map, the programmer must additionally override\n this class's put method (which otherwise throws an\n UnsupportedOperationException), and the iterator returned by\n entrySet().iterator() must additionally implement its\n remove method. The programmer should generally provide a void (no argument) and map\n constructor, as per the recommendation in the Map interface\n specification. The documentation for each non-abstract method in this class describes its\n implementation in detail.  Each of these methods may be overridden if the\n map being implemented admits a more efficient implementation. This class is a member of the\n \n Java Collections Framework. ", "class_type": "class", "typealias": [], "interface_list": ["Map<K", "\u00a0V>"], "class_inherit_list": ["Object"], "Methods": [], "class_name": "AbstractMap", "Vars": null}