{"package_name": "java.util", "subclass_list": [], "class_description": "StringJoiner is used to construct a sequence of characters separated\n by a delimiter and optionally starting with a supplied prefix\n and ending with a supplied suffix. Prior to adding something to the StringJoiner, its\n sj.toString() method will, by default, return prefix + suffix.\n However, if the setEmptyValue method is called, the emptyValue\n supplied will be returned instead. This can be used, for example, when\n creating a string using set notation to indicate an empty set, i.e.\n \"{}\", where the prefix is \"{\", the\n suffix is \"}\" and nothing has been added to the\n StringJoiner. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["delimiter"], "param_type": "CharSequence", "param_description": " the sequence of characters to be used between each\n         element added to the StringJoiner value"}], "class_name": "StringJoiner", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a StringJoiner with no characters in it, with no\n prefix or suffix, and a copy of the supplied\n delimiter.\n If no characters are added to the StringJoiner and methods\n accessing the value of it are invoked, it will not return a\n prefix or suffix (or properties thereof) in the result,\n unless setEmptyValue has first been called.\n", "method_declar": ""}, {"params": [{"param_name": ["delimiter"], "param_type": "CharSequence", "param_description": " the sequence of characters to be used between each\n         element added to the StringJoiner"}, {"param_name": ["prefix"], "param_type": "CharSequence", "param_description": " the sequence of characters to be used at the beginning"}, {"param_name": ["suffix"], "param_type": "CharSequence", "param_description": " the sequence of characters to be used at the end"}], "class_name": "StringJoiner", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a StringJoiner with no characters in it using copies\n of the supplied prefix, delimiter and suffix.\n If no characters are added to the StringJoiner and methods\n accessing the string value of it are invoked, it will return the\n prefix + suffix (or properties thereof) in the result, unless\n setEmptyValue has first been called.\n", "method_declar": ""}, {"params": [{"param_name": ["newElement"], "param_type": "CharSequence", "param_description": " The element to add"}], "class_name": "StringJoiner", "is_static": false, "return_value": {"return_name": [], "return_description": ["a reference to this StringJoiner"], "return_type": ["StringJoiner"]}, "method_name": "add", "method_description": "Adds a copy of the given CharSequence value as the next\n element of the StringJoiner value. If newElement is\n null, then \"null\" is added.\n", "method_declar": ""}, {"params": [], "class_name": "StringJoiner", "is_static": false, "return_value": {"return_name": [], "return_description": ["the length of the current value of StringJoiner"], "return_type": ["int"]}, "method_name": "length", "method_description": "Returns the length of the String representation\n of this StringJoiner. Note that if\n no add methods have been called, then the length of the String\n representation (either prefix + suffix or emptyValue)\n will be returned. The value should be equivalent to\n toString().length().\n", "method_declar": ""}, {"params": [{"param_name": ["other"], "param_type": "StringJoiner", "param_description": " The StringJoiner whose contents should be merged\n              into this one"}], "class_name": "StringJoiner", "is_static": false, "return_value": {"return_name": [], "return_description": ["This StringJoiner"], "return_type": ["StringJoiner"]}, "method_name": "merge", "method_description": "Adds the contents of the given StringJoiner without prefix and\n suffix as the next element if it is non-empty. If the given StringJoiner is empty, the call has no effect.\n\n \nA StringJoiner is empty if add()\n has never been called, and if merge() has never been called\n with a non-empty StringJoiner argument.\n\n \nIf the other StringJoiner is using a different delimiter,\n then elements from the other StringJoiner are concatenated with\n that delimiter and the result is appended to this StringJoiner\n as a single element.\n", "method_declar": ""}, {"params": [{"param_name": ["emptyValue"], "param_type": "CharSequence", "param_description": " the characters to return as the value of an empty\n         StringJoiner"}], "class_name": "StringJoiner", "is_static": false, "return_value": {"return_name": [], "return_description": ["this StringJoiner itself so the calls may be chained"], "return_type": ["StringJoiner"]}, "method_name": "setEmptyValue", "method_description": "Sets the sequence of characters to be used when determining the string\n representation of this StringJoiner and no elements have been\n added yet, that is, when it is empty.  A copy of the emptyValue\n parameter is made for this purpose. Note that once an add method has been\n called, the StringJoiner is no longer considered empty, even if\n the element(s) added correspond to the empty String.\n", "method_declar": ""}, {"params": [], "class_name": "StringJoiner", "is_static": false, "return_value": {"return_name": [], "return_description": ["the string representation of this StringJoiner"], "return_type": ["String"]}, "method_name": "toString", "method_description": "Returns the current value, consisting of the prefix, the values\n added so far separated by the delimiter, and the suffix,\n unless no elements have been added in which case, the\n prefix + suffix or the emptyValue characters are returned\n", "method_declar": ""}], "class_name": "StringJoiner", "Vars": null}