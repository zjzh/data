{"package_name": "java.util", "subclass_list": [], "class_description": "This class expresses a Language Range defined in\n RFC 4647 Matching of\n Language Tags. A language range is an identifier which is used to\n select language tag(s) meeting specific requirements by using the\n mechanisms described in Locale\n Matching. A list which represents a user's preferences and consists\n of language ranges is called a Language Priority List. There are two types of language ranges: basic and extended. In RFC\n 4647, the syntax of language ranges is expressed in\n ABNF as follows: ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["range"], "param_type": "String", "param_description": " a language range"}], "class_name": "Locale.LanguageRange", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a LanguageRange using the given range.\n Note that no validation is done against the IANA Language Subtag\n Registry at time of construction.\n\n \nThis is equivalent to LanguageRange(range, MAX_WEIGHT).\n", "method_declar": ""}, {"params": [{"param_name": ["range"], "param_type": "String", "param_description": " a language range"}, {"param_name": ["weight"], "param_type": "double", "param_description": " a weight value between MIN_WEIGHT and\n     MAX_WEIGHT"}], "class_name": "Locale.LanguageRange", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a LanguageRange using the given range and\n weight. Note that no validation is done against the IANA\n Language Subtag Registry at time of construction.\n", "method_declar": ""}, {"params": [{"param_name": ["obj"], "param_type": "Object", "param_description": " the object to compare with"}], "class_name": "Locale.LanguageRange", "is_static": false, "return_value": {"return_name": [], "return_description": ["true if this object's range and\n     weight are the same as the obj's; false\n     otherwise."], "return_type": ["boolean"]}, "method_name": "equals", "method_description": "Compares this object to the specified object. The result is true if\n and only if the argument is not null and is a\n LanguageRange object that contains the same range\n and weight values as this object.\n", "method_declar": ""}, {"params": [], "class_name": "Locale.LanguageRange", "is_static": false, "return_value": {"return_name": [], "return_description": ["the language range."], "return_type": ["String"]}, "method_name": "getRange", "method_description": "Returns the language range of this LanguageRange.\n", "method_declar": ""}, {"params": [], "class_name": "Locale.LanguageRange", "is_static": false, "return_value": {"return_name": [], "return_description": ["the weight value."], "return_type": ["double"]}, "method_name": "getWeight", "method_description": "Returns the weight of this LanguageRange.\n", "method_declar": ""}, {"params": [], "class_name": "Locale.LanguageRange", "is_static": false, "return_value": {"return_name": [], "return_description": ["a hash code value for this object."], "return_type": ["int"]}, "method_name": "hashCode", "method_description": "Returns a hash code value for the object.\n", "method_declar": ""}, {"params": [{"param_name": ["priorityList"], "param_type": "List", "param_description": " user's Language Priority List"}, {"param_name": ["map"], "param_type": "Map", "param_description": " a map containing information to customize language ranges"}], "class_name": "Locale.LanguageRange", "is_static": true, "return_value": {"return_name": [], "return_description": ["a new Language Priority List with customization. The list is\n     modifiable."], "return_type": ["List<Locale.LanguageRange>"]}, "method_name": "mapEquivalents", "method_description": "Generates a new customized Language Priority List using the given\n priorityList and map. If the given map is\n empty, this method returns a copy of the given priorityList.\n\n \nIn the map, a key represents a language range whereas a value is\n a list of equivalents of it. '*' cannot be used in the map.\n Each equivalent language range has the same weight value as its\n original language range.\n\n \nFor example, if a user's Language Priority List consists of five\n language ranges (\"zh\", \"zh-CN\", \"en\",\n \"zh-TW\", and \"zh-HK\"), the newly generated Language\n Priority List which is customized using the above map example will\n consists of \"zh\", \"zh-Hans\", \"zh-CN\",\n \"zh-Hans-CN\", \"en\", \"zh-TW\", and\n \"zh-HK\".\n\n \n\"zh-HK\" and \"zh-TW\" aren't converted to\n \"zh-Hans-HK\" nor \"zh-Hans-TW\" even if they are\n included in the Language Priority List. In this example, mapping\n is used to clearly distinguish Simplified Chinese and Traditional\n Chinese.\n\n \nIf the \"zh\"-to-\"zh\" mapping isn't included in the\n map, a simple replacement will be performed and the customized list\n won't include \"zh\" and \"zh-CN\".\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["ranges"], "param_type": "String", "param_description": " a list of comma-separated language ranges or a list of\n     language ranges in the form of the \"Accept-Language\" header\n     defined in RFC\n     2616"}], "class_name": "Locale.LanguageRange", "is_static": true, "return_value": {"return_name": [], "return_description": ["a Language Priority List consisting of language ranges\n     included in the given ranges and their equivalent\n     language ranges if available. The list is modifiable."], "return_type": ["List<Locale.LanguageRange>"]}, "method_name": "parse", "method_description": "Parses the given ranges to generate a Language Priority List.\n\n \nThis method performs a syntactic check for each language range in\n the given ranges but doesn't do validation using the IANA\n Language Subtag Registry.\n\n \nThe ranges to be given can take one of the following\n forms:\n\n \nUnlike a weighted list, language ranges in a prioritized list\n are sorted in the descending order based on its priority. The first\n language range has the highest priority and meets the user's\n preference most.\n\n \nIn either case, language ranges are sorted in descending order in\n the Language Priority List based on priority or weight. If a\n language range appears in the given ranges more than once,\n only the first one is included on the Language Priority List.\n\n \nThe returned list consists of language ranges from the given\n ranges and their equivalents found in the IANA Language\n Subtag Registry. For example, if the given ranges is\n \"Accept-Language: iw,en-us;q=0.7,en;q=0.3\", the elements in\n the list to be returned are:\n\n \n", "method_declar": ""}, {"params": [{"param_name": ["ranges"], "param_type": "String", "param_description": " a list of comma-separated language ranges or a list\n     of language ranges in the form of the \"Accept-Language\" header\n     defined in RFC\n     2616"}, {"param_name": ["map"], "param_type": "Map", "param_description": " a map containing information to customize language ranges"}], "class_name": "Locale.LanguageRange", "is_static": true, "return_value": {"return_name": [], "return_description": ["a Language Priority List with customization. The list is\n     modifiable."], "return_type": ["List<Locale.LanguageRange>"]}, "method_name": "parse", "method_description": "Parses the given ranges to generate a Language Priority\n List, and then customizes the list using the given map.\n This method is equivalent to\n mapEquivalents(parse(ranges), map).\nSee also:\n", "method_declar": ""}], "class_name": "Locale.LanguageRange", "Vars": null}