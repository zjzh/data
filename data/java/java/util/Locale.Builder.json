{"package_name": "java.util", "subclass_list": [], "class_description": "Builder is used to build instances of Locale\n from values configured by the setters.  Unlike the Locale\n constructors, the Builder checks if a value configured by a\n setter satisfies the syntax requirements defined by the Locale\n class.  A Locale object created by a Builder is\n well-formed and can be transformed to a well-formed IETF BCP 47 language tag\n without losing information. Note: The Locale class does not provide any\n syntactic restrictions on variant, while BCP 47 requires each variant\n subtag to be 5 to 8 alphanumerics or a single numeric followed by 3\n alphanumerics.  The method setVariant throws\n IllformedLocaleException for a variant that does not satisfy\n this restriction. If it is necessary to support such a variant, use a\n Locale constructor.  However, keep in mind that a Locale\n object created this way might lose the variant information when\n transformed to a BCP 47 language tag. The following example shows how to create a Locale object\n with the Builder. Builders can be reused; clear() resets all\n fields to their default values. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [{"params": [], "class_name": "Locale.Builder", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an empty Builder. The default value of all\n fields, extensions, and private use information is the\n empty string.\n", "method_declar": ""}, {"params": [{"param_name": ["attribute"], "param_type": "String", "param_description": " the attribute"}], "class_name": "Locale.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["This builder."], "return_type": ["Locale.Builder"]}, "method_name": "addUnicodeLocaleAttribute", "method_description": "Adds a unicode locale attribute, if not already present, otherwise\n has no effect.  The attribute must not be null and must be well-formed or an exception\n is thrown.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "Locale.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["A Locale."], "return_type": ["Locale"]}, "method_name": "build", "method_description": "Returns an instance of Locale created from the fields set\n on this builder.\n\n \nThis applies the conversions listed in Locale#forLanguageTag\n when constructing a Locale. (Grandfathered tags are handled in\n setLanguageTag(String).)\n", "method_declar": ""}, {"params": [], "class_name": "Locale.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["This builder."], "return_type": ["Locale.Builder"]}, "method_name": "clear", "method_description": "Resets the builder to its initial, empty state.\n", "method_declar": ""}, {"params": [], "class_name": "Locale.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["This builder."], "return_type": ["Locale.Builder"]}, "method_name": "clearExtensions", "method_description": "Resets the extensions to their initial, empty state.\n Language, script, region and variant are unchanged.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["attribute"], "param_type": "String", "param_description": " the attribute"}], "class_name": "Locale.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["This builder."], "return_type": ["Locale.Builder"]}, "method_name": "removeUnicodeLocaleAttribute", "method_description": "Removes a unicode locale attribute, if present, otherwise has no\n effect.  The attribute must not be null and must be well-formed or an exception\n is thrown.\n\n \nAttribute comparision for removal is case-insensitive.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["key"], "param_type": "char", "param_description": " the extension key"}, {"param_name": ["value"], "param_type": "String", "param_description": " the extension value"}], "class_name": "Locale.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["This builder."], "return_type": ["Locale.Builder"]}, "method_name": "setExtension", "method_description": "Sets the extension for the given key. If the value is null or the\n empty string, the extension is removed.  Otherwise, the extension\n must be well-formed or an exception\n is thrown.\n\n \nNote: The key Locale#UNICODE_LOCALE_EXTENSION ('u') is used for the Unicode locale extension.\n Setting a value for this key replaces any existing Unicode locale key/type\n pairs with those defined in the extension.\n\n \nNote: The key Locale#PRIVATE_USE_EXTENSION ('x') is used for the private use code. To be\n well-formed, the value for this key needs only to have subtags of one to\n eight alphanumeric characters, not two to eight as in the general case.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["language"], "param_type": "String", "param_description": " the language"}], "class_name": "Locale.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["This builder."], "return_type": ["Locale.Builder"]}, "method_name": "setLanguage", "method_description": "Sets the language.  If language is the empty string or\n null, the language in this Builder is removed.  Otherwise,\n the language must be well-formed\n or an exception is thrown.\n\n \nThe typical language value is a two or three-letter language\n code as defined in ISO639.\n", "method_declar": ""}, {"params": [{"param_name": ["languageTag"], "param_type": "String", "param_description": " the language tag"}], "class_name": "Locale.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["This builder."], "return_type": ["Locale.Builder"]}, "method_name": "setLanguageTag", "method_description": "Resets the Builder to match the provided IETF BCP 47\n language tag.  Discards the existing state.  Null and the\n empty string cause the builder to be reset, like clear().  Grandfathered tags (see Locale#forLanguageTag) are converted to their canonical\n form before being processed.  Otherwise, the language tag\n must be well-formed (see Locale) or an exception is\n thrown (unlike Locale.forLanguageTag, which\n just discards ill-formed and following portions of the\n tag).\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["locale"], "param_type": "Locale", "param_description": " the locale"}], "class_name": "Locale.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["This builder."], "return_type": ["Locale.Builder"]}, "method_name": "setLocale", "method_description": "Resets the Builder to match the provided\n locale.  Existing state is discarded.\n\n \nAll fields of the locale must be well-formed, see Locale.\n\n \nLocales with any ill-formed fields cause\n IllformedLocaleException to be thrown, except for the\n following three cases which are accepted for compatibility\n reasons:\n", "method_declar": ""}, {"params": [{"param_name": ["region"], "param_type": "String", "param_description": " the region"}], "class_name": "Locale.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["This builder."], "return_type": ["Locale.Builder"]}, "method_name": "setRegion", "method_description": "Sets the region.  If region is null or the empty string, the region\n in this Builder is removed.  Otherwise,\n the region must be well-formed or an\n exception is thrown.\n\n \nThe typical region value is a two-letter ISO 3166 code or a\n three-digit UN M.49 area code.\n\n \nThe country value in the Locale created by the\n Builder is always normalized to upper case.\n", "method_declar": ""}, {"params": [{"param_name": ["script"], "param_type": "String", "param_description": " the script"}], "class_name": "Locale.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["This builder."], "return_type": ["Locale.Builder"]}, "method_name": "setScript", "method_description": "Sets the script. If script is null or the empty string,\n the script in this Builder is removed.\n Otherwise, the script must be well-formed or an\n exception is thrown.\n\n \nThe typical script value is a four-letter script code as defined by ISO 15924.\n", "method_declar": ""}, {"params": [{"param_name": ["key"], "param_type": "String", "param_description": " the Unicode locale key"}, {"param_name": ["type"], "param_type": "String", "param_description": " the Unicode locale type"}], "class_name": "Locale.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["This builder."], "return_type": ["Locale.Builder"]}, "method_name": "setUnicodeLocaleKeyword", "method_description": "Sets the Unicode locale keyword type for the given key.  If the type\n is null, the Unicode keyword is removed.  Otherwise, the key must be\n non-null and both key and type must be well-formed or an exception\n is thrown.\n\n \nKeys and types are converted to lower case.\n\n \nNote:Setting the 'u' extension via setExtension(char, String)\n replaces all Unicode locale keywords with those defined in the\n extension.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["variant"], "param_type": "String", "param_description": " the variant"}], "class_name": "Locale.Builder", "is_static": false, "return_value": {"return_name": [], "return_description": ["This builder."], "return_type": ["Locale.Builder"]}, "method_name": "setVariant", "method_description": "Sets the variant.  If variant is null or the empty string, the\n variant in this Builder is removed.  Otherwise, it\n must consist of one or more well-formed\n subtags, or an exception is thrown.\n\n \nNote: This method checks if variant\n satisfies the IETF BCP 47 variant subtag's syntax requirements,\n and normalizes the value to lowercase letters.  However,\n the Locale class does not impose any syntactic\n restriction on variant, and the variant value in\n Locale is case sensitive.  To set such a variant,\n use a Locale constructor.\n", "method_declar": ""}], "class_name": "Locale.Builder", "Vars": null}