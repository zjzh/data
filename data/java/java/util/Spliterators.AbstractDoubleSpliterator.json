{"package_name": "java.util", "subclass_list": [], "class_description": "An abstract Spliterator.OfDouble that implements\n trySplit to permit limited parallelism. To implement a spliterator an extending class need only\n implement Spliterator.OfDouble.tryAdvance(java.util.function.DoubleConsumer)\n tryAdvance}.  The extending class should override\n Spliterator.OfDouble.forEachRemaining(java.util.function.DoubleConsumer) forEach} if\n it can provide a more performant implementation. ", "class_type": "class", "typealias": [], "interface_list": ["Spliterator.OfDouble"], "class_inherit_list": ["Object"], "Methods": [], "class_name": "Spliterators.AbstractDoubleSpliterator", "Vars": null}