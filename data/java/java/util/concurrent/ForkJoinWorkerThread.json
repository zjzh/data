{"package_name": "java.util.concurrent", "subclass_list": [], "class_description": "A thread managed by a ForkJoinPool, which executes\n ForkJoinTasks.\n This class is subclassable solely for the sake of adding\n functionality -- there are no overridable methods dealing with\n scheduling or execution.  However, you can override initialization\n and termination methods surrounding the main task processing loop.\n If you do create such a subclass, you will also need to supply a\n custom ForkJoinPool.ForkJoinWorkerThreadFactory to\n ForkJoinPool#ForkJoinPool in a ForkJoinPool. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Thread"], "Methods": [], "class_name": "ForkJoinWorkerThread", "Vars": null}