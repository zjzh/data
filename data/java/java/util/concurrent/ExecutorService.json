{"package_name": "java.util.concurrent", "subclass_list": ["AbstractExecutorService", "ForkJoinPool", "ScheduledExecutorService", "ScheduledThreadPoolExecutor", "ThreadPoolExecutor", "AbstractExecutorService", "ExecutorService", "ForkJoinPool", "ExecutorService", "ForkJoinTask", "ScheduledExecutorService", "ExecutorService", "ScheduledThreadPoolExecutor", "ThreadPoolExecutor", "ThreadPoolExecutor", "ExecutorService", "Executors"], "class_description": "An Executor that provides methods to manage termination and\n methods that can produce a Future for tracking progress of\n one or more asynchronous tasks. An ExecutorService can be shut down, which will cause\n it to reject new tasks.  Two different methods are provided for\n shutting down an ExecutorService. The shutdown()\n method will allow previously submitted tasks to execute before\n terminating, while the shutdownNow() method prevents waiting\n tasks from starting and attempts to stop currently executing tasks.\n Upon termination, an executor has no tasks actively executing, no\n tasks awaiting execution, and no new tasks can be submitted.  An\n unused ExecutorService should be shut down to allow\n reclamation of its resources. Method submit extends base method Executor#execute(Runnable) by creating and returning a Future\n that can be used to cancel execution and/or wait for completion.\n Methods invokeAny and invokeAll perform the most\n commonly useful forms of bulk execution, executing a collection of\n tasks and then waiting for at least one, or all, to\n complete. (Class ExecutorCompletionService can be used to\n write customized variants of these methods.) The Executors class provides factory methods for the\n executor services provided in this package. Memory consistency effects: Actions in a thread prior to the\n submission of a Runnable or Callable task to an\n ExecutorService\nhappen-before\n any actions taken by that task, which in turn happen-before the\n result is retrieved via Future.get(). ", "class_type": "interface", "typealias": [], "interface_list": ["Executor"], "class_inherit_list": [], "Methods": [], "class_name": "ExecutorService", "Vars": null}