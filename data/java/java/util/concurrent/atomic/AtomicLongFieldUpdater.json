{"package_name": "java.util.concurrent.atomic", "subclass_list": [], "class_description": "A reflection-based utility that enables atomic updates to\n designated volatile long fields of designated classes.\n This class is designed for use in atomic data structures in which\n several fields of the same node are independently subject to atomic\n updates. Note that the guarantees of the compareAndSet\n method in this class are weaker than in other atomic classes.\n Because this class cannot ensure that all uses of the field\n are appropriate for purposes of atomic access, it can\n guarantee atomicity only with respect to other invocations of\n compareAndSet and set on the same updater. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [], "class_name": "AtomicLongFieldUpdater", "Vars": null}