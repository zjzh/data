{"package_name": "java.util.concurrent.locks", "subclass_list": [], "class_description": "Condition implementation for a AbstractQueuedLongSynchronizer serving as the basis of a Lock implementation. Method documentation for this class describes mechanics,\n not behavioral specifications from the point of view of Lock\n and Condition users. Exported versions of this class will in\n general need to be accompanied by documentation describing\n condition semantics that rely on those of the associated\n AbstractQueuedLongSynchronizer. This class is Serializable, but all fields are transient,\n so deserialized conditions have no waiters. ", "class_type": "class", "typealias": [], "interface_list": ["Condition", "Serializable"], "class_inherit_list": ["Object"], "Methods": [{"params": [], "class_name": "AbstractQueuedLongSynchronizer.ConditionObject", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a new ConditionObject instance.\n\n", "method_declar": ""}, {"params": [], "class_name": "AbstractQueuedLongSynchronizer.ConditionObject", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "await", "method_description": "Implements interruptible condition wait.\n \n", "method_declar": ""}, {"params": [{"param_name": ["time"], "param_type": "long", "param_description": " the maximum time to wait"}, {"param_name": ["unit"], "param_type": "TimeUnit", "param_description": " the time unit of the time argument"}], "class_name": "AbstractQueuedLongSynchronizer.ConditionObject", "is_static": false, "return_value": {"return_name": [], "return_description": ["false if the waiting time detectably elapsed\n         before return from the method, else true"], "return_type": ["boolean"]}, "method_name": "await", "method_description": "Implements timed condition wait.\n \n", "method_declar": ""}, {"params": [{"param_name": ["nanosTimeout"], "param_type": "long", "param_description": " the maximum time to wait, in nanoseconds"}], "class_name": "AbstractQueuedLongSynchronizer.ConditionObject", "is_static": false, "return_value": {"return_name": [], "return_description": ["an estimate of the nanosTimeout value minus\n         the time spent waiting upon return from this method.\n         A positive value may be used as the argument to a\n         subsequent call to this method to finish waiting out\n         the desired time.  A value less than or equal to zero\n         indicates that no time remains."], "return_type": ["long"]}, "method_name": "awaitNanos", "method_description": "Implements timed condition wait.\n \n", "method_declar": ""}, {"params": [], "class_name": "AbstractQueuedLongSynchronizer.ConditionObject", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "awaitUninterruptibly", "method_description": "Implements uninterruptible condition wait.\n \n", "method_declar": ""}, {"params": [{"param_name": ["deadline"], "param_type": "Date", "param_description": " the absolute time to wait until"}], "class_name": "AbstractQueuedLongSynchronizer.ConditionObject", "is_static": false, "return_value": {"return_name": [], "return_description": ["false if the deadline has elapsed upon return, else\n         true"], "return_type": ["boolean"]}, "method_name": "awaitUntil", "method_description": "Implements absolute timed condition wait.\n \n", "method_declar": ""}, {"params": [], "class_name": "AbstractQueuedLongSynchronizer.ConditionObject", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "signal", "method_description": "Moves the longest-waiting thread, if one exists, from the\n wait queue for this condition to the wait queue for the\n owning lock.\n", "method_declar": ""}, {"params": [], "class_name": "AbstractQueuedLongSynchronizer.ConditionObject", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "signalAll", "method_description": "Moves all threads from the wait queue for this condition to\n the wait queue for the owning lock.\n", "method_declar": ""}], "class_name": "AbstractQueuedLongSynchronizer.ConditionObject", "Vars": null}