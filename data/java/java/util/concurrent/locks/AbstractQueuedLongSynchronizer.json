{"package_name": "java.util.concurrent.locks", "subclass_list": [], "class_description": "A version of AbstractQueuedSynchronizer in\n which synchronization state is maintained as a long.\n This class has exactly the same structure, properties, and methods\n as AbstractQueuedSynchronizer with the exception\n that all state-related parameters and results are defined\n as long rather than int. This class\n may be useful when creating synchronizers such as\n multilevel locks and barriers that require\n 64 bits of state. See AbstractQueuedSynchronizer for usage\n notes and examples. ", "class_type": "class", "typealias": [], "interface_list": ["Serializable"], "class_inherit_list": ["AbstractOwnableSynchronizer"], "Methods": [], "class_name": "AbstractQueuedLongSynchronizer", "Vars": null}