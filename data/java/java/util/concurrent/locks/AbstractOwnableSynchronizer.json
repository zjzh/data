{"package_name": "java.util.concurrent.locks", "subclass_list": ["AbstractQueuedLongSynchronizer", "AbstractQueuedSynchronizer", "AbstractQueuedLongSynchronizer", "AbstractQueuedSynchronizer", "AbstractQueuedSynchronizer"], "class_description": "A synchronizer that may be exclusively owned by a thread.  This\n class provides a basis for creating locks and related synchronizers\n that may entail a notion of ownership.  The\n AbstractOwnableSynchronizer class itself does not manage or\n use this information. However, subclasses and tools may use\n appropriately maintained values to help control and monitor access\n and provide diagnostics. ", "class_type": "class", "typealias": [], "interface_list": ["Serializable"], "class_inherit_list": ["Object"], "Methods": [], "class_name": "AbstractOwnableSynchronizer", "Vars": null}