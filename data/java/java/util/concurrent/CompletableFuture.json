{"package_name": "java.util.concurrent", "subclass_list": [], "class_description": "A Future that may be explicitly completed (setting its\n value and status), and may be used as a CompletionStage,\n supporting dependent functions and actions that trigger upon its\n completion. When two or more threads attempt to\n complete,\n completeExceptionally, or\n cancel\n a CompletableFuture, only one of them succeeds. In addition to these and related methods for directly\n manipulating status and results, CompletableFuture implements\n interface CompletionStage with the following policies: CompletableFuture also implements Future with the following\n policies: Arguments used to pass a completion result (that is, for\n parameters of type T) for methods accepting them may be\n null, but passing a null value for any other parameter will result\n in a NullPointerException being thrown. ", "class_type": "class", "typealias": [], "interface_list": ["Future", "CompletionStage"], "class_inherit_list": ["Object"], "Methods": [], "class_name": "CompletableFuture", "Vars": null}