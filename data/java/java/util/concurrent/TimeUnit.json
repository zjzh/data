{"package_name": "java.util.concurrent", "subclass_list": [], "class_description": "A TimeUnit represents time durations at a given unit of\n granularity and provides utility methods to convert across units,\n and to perform timing and delay operations in these units.  A\n TimeUnit does not maintain time information, but only\n helps organize and use time representations that may be maintained\n separately across various contexts.  A nanosecond is defined as one\n thousandth of a microsecond, a microsecond as one thousandth of a\n millisecond, a millisecond as one thousandth of a second, a minute\n as sixty seconds, an hour as sixty minutes, and a day as twenty four\n hours. A TimeUnit is mainly used to inform time-based methods\n how a given timing parameter should be interpreted. For example,\n the following code will timeout in 50 milliseconds if the lock is not available: ", "class_type": "enum", "typealias": [], "interface_list": [""], "class_inherit_list": ["Enum<TimeUnit>"], "Methods": [], "class_name": "TimeUnit", "Vars": null}