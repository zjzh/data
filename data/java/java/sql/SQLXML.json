{"package_name": "java.sql", "subclass_list": [], "class_description": "The mapping in the JavaTM programming language for the SQL XML type.\n XML is a built-in type that stores an XML value\n as a column value in a row of a database table.\n By default drivers implement an SQLXML object as\n a logical pointer to the XML data\n rather than the data itself.\n An SQLXML object is valid for the duration of the transaction in which it was created. The SQLXML interface provides methods for accessing the XML value\n as a String, a Reader or Writer, or as a Stream.  The XML value\n may also be accessed through a Source or set as a Result, which\n are used with XML Parser APIs such as DOM, SAX, and StAX, as\n well as with XSLT transforms and XPath evaluations. Methods in the interfaces ResultSet, CallableStatement, and PreparedStatement,\n such as getSQLXML allow a programmer to access an XML value.\n In addition, this interface has methods for updating an XML value. The XML value of the SQLXML instance may be obtained as a BinaryStream using Because databases may use an optimized representation for the XML,\n accessing the value through getSource() and\n setResult() can lead to improved processing performance\n without serializing to a stream representation and parsing the XML. For example, to obtain a DOM Document Node: Incomplete or invalid XML values may cause an SQLException when\n set or the exception may occur when execute() occurs.  All streams\n must be closed before execute() occurs or an SQLException will be thrown. Reading and writing XML values to or from an SQLXML object can happen at most once.\n The conceptual states of readable and not readable determine if one\n of the reading APIs will return a value or throw an exception.\n The conceptual states of writable and not writable determine if one\n of the writing APIs will set a value or throw an exception. The state moves from readable to not readable once free() or any of the\n reading APIs are called: getBinaryStream(), getCharacterStream(), getSource(), and getString().\n Implementations may also change the state to not writable when this occurs. The state moves from writable to not writeable once free() or any of the\n writing APIs are called: setBinaryStream(), setCharacterStream(), setResult(), and setString().\n Implementations may also change the state to not readable when this occurs.  All methods on the SQLXML interface must be fully implemented if the\n JDBC driver supports the data type. ", "class_type": "interface", "typealias": [], "interface_list": [""], "class_inherit_list": [], "Methods": [], "class_name": "SQLXML", "Vars": null}