{"package_name": "java.sql", "subclass_list": ["RowSet", "RowSet"], "class_description": "A table of data representing a database result set, which\n is usually generated by executing a statement that queries the database. A ResultSet object  maintains a cursor pointing\n to its current row of data.  Initially the cursor is positioned\n before the first row. The next method moves the\n cursor to the next row, and because it returns false\n when there are no more rows in the ResultSet object,\n it can be used in a while loop to iterate through\n the result set. A default ResultSet object is not updatable and\n has a cursor that moves forward only.  Thus, you can\n iterate through it only once and only from the first row to the\n last row. It is possible to\n produce ResultSet objects that are scrollable and/or\n updatable.  The following code fragment, in which con\n is a valid Connection object, illustrates how to make\n a result set that is scrollable and insensitive to updates by others, and\n that is updatable. See ResultSet fields for other\n options. For the getter methods, a JDBC driver attempts\n to convert the underlying data to the Java type specified in the\n getter method and returns a suitable Java value.  The JDBC specification\n has a table showing the allowable mappings from SQL types to Java types\n that can be used by the ResultSet getter methods.  Column names used as input to getter methods are case\n insensitive.  When a getter method is called  with\n a column name and several columns have the same name,\n the value of the first matching column will be returned.\n The column name option is\n designed to be used when column names are used in the SQL\n query that generated the result set.\n For columns that are NOT explicitly named in the query, it\n is best to use column numbers. If column names are used, the\n programmer should take care to guarantee that they uniquely refer to\n the intended columns, which can be assured with the SQL AS clause. A set of updater methods were added to this interface\n in the JDBC 2.0 API (JavaTM 2 SDK,\n Standard Edition, version 1.2). The comments regarding parameters\n to the getter methods also apply to parameters to the\n updater methods. The updater methods may be used in two ways: A ResultSet object is automatically closed when the\n Statement object that\n generated it is closed, re-executed, or used\n to retrieve the next result from a sequence of multiple results. The number, types and properties of a ResultSet\n object's columns are provided by the ResultSetMetaData\n object returned by the ResultSet.getMetaData method. ", "class_type": "interface", "typealias": [], "interface_list": ["Wrapper", "AutoCloseable"], "class_inherit_list": [], "Methods": [], "class_name": "ResultSet", "Vars": null}