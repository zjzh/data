{"package_name": "java.sql", "subclass_list": [], "class_description": "The representation (mapping) in the Java programming language of an SQL ROWID\n value. An SQL ROWID is a built-in type, a value of which can be thought of as\n an address  for its identified row in a database table. Whether that address\n is logical or, in any  respects, physical is determined by its originating data\n source. Methods in the interfaces ResultSet, CallableStatement,\n and PreparedStatement, such as getRowId and setRowId\n allow a programmer to access a SQL ROWID  value. The RowId\n interface provides a method\n for representing the value of the ROWID as a byte array or as a\n String. The method getRowIdLifetime in the interface DatabaseMetaData,\n can be used\n to determine if a RowId object remains valid for the duration of the transaction in\n which  the RowId was created, the duration of the session in which\n the RowId was created,\n or, effectively, for as long as its identified row is not deleted. In addition\n to specifying the duration of its valid lifetime outside its originating data\n source, getRowIdLifetime specifies the duration of a ROWID\n value's valid lifetime\n within its originating data source. In this, it differs from a large object,\n because there is no limit on the valid lifetime of a large  object within its\n originating data source. All methods on the RowId interface must be fully implemented if the\n JDBC driver supports the data type. ", "class_type": "interface", "typealias": [], "interface_list": [""], "class_inherit_list": [], "Methods": [], "class_name": "RowId", "Vars": null}