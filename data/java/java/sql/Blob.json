{"package_name": "java.sql", "subclass_list": [], "class_description": "The representation (mapping) in\n the JavaTM programming\n language of an SQL\n BLOB value.  An SQL BLOB is a built-in type\n that stores a Binary Large Object as a column value in a row of\n a database table. By default drivers implement Blob using\n an SQL locator(BLOB), which means that a\n Blob object contains a logical pointer to the\n SQL BLOB data rather than the data itself.\n A Blob object is valid for the duration of the\n transaction in which is was created. Methods in the interfaces ResultSet,\n CallableStatement, and PreparedStatement, such as\n getBlob and setBlob allow a programmer to\n access an SQL BLOB value.\n The Blob interface provides methods for getting the\n length of an SQL BLOB (Binary Large Object) value,\n for materializing a BLOB value on the client, and for\n determining the position of a pattern of bytes within a\n BLOB value. In addition, this interface has methods for updating\n a BLOB value. All methods on the Blob interface must be fully implemented if the\n JDBC driver supports the data type. ", "class_type": "interface", "typealias": [], "interface_list": [""], "class_inherit_list": [], "Methods": [], "class_name": "Blob", "Vars": null}