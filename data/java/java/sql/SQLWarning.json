{"package_name": "java.sql", "subclass_list": ["DataTruncation", "DataTruncation"], "class_description": " An exception that provides information on  database access\n warnings. Warnings are silently chained to the object whose method\n caused it to be reported. Warnings may be retrieved from Connection, Statement,\n and ResultSet objects.  Trying to retrieve a warning on a\n connection after it has been closed will cause an exception to be thrown.\n Similarly, trying to retrieve a warning on a statement after it has been\n closed or on a result set after it has been closed will cause\n an exception to be thrown. Note that closing a statement also\n closes a result set that it might have produced. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["SQLException"], "Methods": [{"params": [{"param_name": ["reason"], "param_type": "String", "param_description": " a description of the warning"}, {"param_name": ["SQLState"], "param_type": "String", "param_description": " an XOPEN or SQL:2003 code identifying the warning"}, {"param_name": ["vendorCode"], "param_type": "int", "param_description": " a database vendor-specific warning code"}], "class_name": "SQLWarning", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a  SQLWarning object\n  with a given reason, SQLState  and\n vendorCode.\n\n The cause is not initialized, and may subsequently be\n initialized by a call to the\n Throwable#initCause(java.lang.Throwable) method.\n \n\n", "method_declar": ""}, {"params": [{"param_name": ["reason"], "param_type": "String", "param_description": " a description of the warning"}, {"param_name": ["SQLState"], "param_type": "String", "param_description": " an XOPEN or SQL:2003 code identifying the warning"}], "class_name": "SQLWarning", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a SQLWarning object\n with a given reason and SQLState.\n\n The cause is not initialized, and may subsequently be\n initialized by a call to the\n Throwable#initCause(java.lang.Throwable) method. The vendor code\n is initialized to 0.\n \n\n", "method_declar": ""}, {"params": [{"param_name": ["reason"], "param_type": "String", "param_description": " a description of the warning"}], "class_name": "SQLWarning", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a SQLWarning object\n with a given reason. The SQLState\n is initialized to null and the vender code is initialized\n to 0.\n\n The cause is not initialized, and may subsequently be\n initialized by a call to the\n Throwable#initCause(java.lang.Throwable) method.\n \n\n", "method_declar": ""}, {"params": [], "class_name": "SQLWarning", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a  SQLWarning object.\n The reason, SQLState are initialized\n to null and the vendor code is initialized to 0.\n\n The cause is not initialized, and may subsequently be\n initialized by a call to the\n Throwable#initCause(java.lang.Throwable) method.\n \n\n", "method_declar": ""}, {"params": [{"param_name": ["cause"], "param_type": "Throwable", "param_description": " the underlying reason for this SQLWarning (which is saved for later retrieval by the getCause() method); may be null indicating\n     the cause is non-existent or unknown."}], "class_name": "SQLWarning", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a SQLWarning object\n with a given  cause.\n The SQLState is initialized\n to null and the vendor code is initialized to 0.\n The reason  is initialized to null if\n cause==null or to cause.toString() if\n cause!=null.\n \n\n", "method_declar": ""}, {"params": [{"param_name": ["reason"], "param_type": "String", "param_description": " a description of the warning"}, {"param_name": ["cause"], "param_type": "Throwable", "param_description": " the underlying reason for this SQLWarning\n (which is saved for later retrieval by the getCause() method);\n may be null indicating the cause is non-existent or unknown."}], "class_name": "SQLWarning", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a SQLWarning object\n with a given\n reason and  cause.\n The SQLState is  initialized to null\n and the vendor code is initialized to 0.\n \n\n", "method_declar": ""}, {"params": [{"param_name": ["reason"], "param_type": "String", "param_description": " a description of the warning"}, {"param_name": ["SQLState"], "param_type": "String", "param_description": " an XOPEN or SQL:2003 code identifying the warning"}, {"param_name": ["cause"], "param_type": "Throwable", "param_description": " the underlying reason for this SQLWarning (which is saved for later retrieval by the getCause() method); may be null indicating\n     the cause is non-existent or unknown."}], "class_name": "SQLWarning", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a SQLWarning object\n with a given\n reason, SQLState and  cause.\n The vendor code is initialized to 0.\n \n\n", "method_declar": ""}, {"params": [{"param_name": ["reason"], "param_type": "String", "param_description": " a description of the warning"}, {"param_name": ["SQLState"], "param_type": "String", "param_description": " an XOPEN or SQL:2003 code identifying the warning"}, {"param_name": ["vendorCode"], "param_type": "int", "param_description": " a database vendor-specific warning code"}, {"param_name": ["cause"], "param_type": "Throwable", "param_description": " the underlying reason for this SQLWarning (which is saved for later retrieval by the getCause() method); may be null indicating\n     the cause is non-existent or unknown."}], "class_name": "SQLWarning", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs aSQLWarning object\n with a given\n reason, SQLState, vendorCode\n and  cause.\n \n\n", "method_declar": ""}, {"params": [], "class_name": "SQLWarning", "is_static": false, "return_value": {"return_name": [], "return_description": ["the next SQLException in the chain; null if none"], "return_type": ["SQLWarning"]}, "method_name": "getNextWarning", "method_description": "Retrieves the warning chained to this SQLWarning object by\n setNextWarning.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["w"], "param_type": "SQLWarning", "param_description": " the new end of the SQLException chain"}], "class_name": "SQLWarning", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "setNextWarning", "method_description": "Adds a SQLWarning object to the end of the chain.\nSee also:\n", "method_declar": ""}], "class_name": "SQLWarning", "Vars": null}