{"package_name": "java.sql", "subclass_list": [], "class_description": "Comprehensive information about the database as a whole. This interface is implemented by driver vendors to let users know the capabilities\n of a Database Management System (DBMS) in combination with\n the driver based on JDBCTM technology\n (\"JDBC driver\") that is used with it.  Different relational DBMSs often support\n different features, implement features in different ways, and use different\n data types.  In addition, a driver may implement a feature on top of what the\n DBMS offers.  Information returned by methods in this interface applies\n to the capabilities of a particular driver and a particular DBMS working\n together. Note that as used in this documentation, the term \"database\" is\n used generically to refer to both the driver and DBMS. A user for this interface is commonly a tool that needs to discover how to\n deal with the underlying DBMS.  This is especially true for applications\n that are intended to be used with more than one DBMS. For example, a tool might use the method\n getTypeInfo to find out what data types can be used in a\n CREATE TABLE statement.  Or a user might call the method\n supportsCorrelatedSubqueries to see if it is possible to use\n a correlated subquery or supportsBatchUpdates to see if it is\n possible to use batch updates. Some DatabaseMetaData methods return lists of information\n in the form of ResultSet objects.\n Regular ResultSet methods, such as\n getString and getInt, can be used\n to retrieve the data from these ResultSet objects.  If\n a given form of metadata is not available, an empty ResultSet\n will be returned. Additional columns beyond the columns defined to be\n returned by the ResultSet object for a given method\n can be defined by the JDBC driver vendor and must be accessed\n by their column label. Some DatabaseMetaData methods take arguments that are\n String patterns.  These arguments all have names such as fooPattern.\n Within a pattern String, \"%\" means match any substring of 0 or more\n characters, and \"_\" means match any one character. Only metadata\n entries matching the search pattern are returned. If a search pattern\n argument is set to null, that argument's criterion will\n be dropped from the search.  ", "class_type": "interface", "typealias": [], "interface_list": ["Wrapper"], "class_inherit_list": [], "Methods": [], "class_name": "DatabaseMetaData", "Vars": null}