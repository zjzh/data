{"package_name": "java.sql", "subclass_list": [], "class_description": " A thin wrapper around a millisecond value that allows\n JDBC to identify this as an SQL DATE value.  A\n milliseconds value represents the number of milliseconds that\n have passed since January 1, 1970 00:00:00.000 GMT. To conform with the definition of SQL DATE, the\n millisecond values wrapped by a java.sql.Date instance\n must be 'normalized' by setting the\n hours, minutes, seconds, and milliseconds to zero in the particular\n time zone with which the instance is associated. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Date"], "Methods": [{"params": [{"param_name": ["year"], "param_type": "int", "param_description": " the year minus 1900; must be 0 to 8099. (Note that\n        8099 is 9999 minus 1900.)"}, {"param_name": ["month"], "param_type": "int", "param_description": " 0 to 11"}, {"param_name": ["day"], "param_type": "int", "param_description": " 1 to 31"}], "class_name": "Date", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "\n\n\n      This constructor is deprecated.\n    instead use the constructor Date(long date)\n\nConstructs a Date object initialized with the given\n year, month, and day.\n \n\n The result is undefined if a given argument is out of bounds.\n", "method_declar": ""}, {"params": [{"param_name": ["date"], "param_type": "long", "param_description": " milliseconds since January 1, 1970, 00:00:00 GMT not\n        to exceed the milliseconds representation for the year 8099.\n        A negative number indicates the number of milliseconds\n        before January 1, 1970, 00:00:00 GMT."}], "class_name": "Date", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a Date object using the given milliseconds\n time value.  If the given milliseconds value contains time\n information, the driver will set the time components to the\n time in the default time zone (the time zone of the Java virtual\n machine running the application) that corresponds to zero GMT.\n", "method_declar": ""}, {"params": [], "class_name": "Date", "is_static": false, "return_value": {"return_name": [], "return_description": ["the hour represented by this date."], "return_type": ["int"]}, "method_name": "getHours", "method_description": "\n\n\n      This method is deprecated.\n    This method is deprecated and should not be used because SQL Date\n values do not have a time component.\n  \nReturns the hour represented by this Date object. The\n returned value is a number (0 through 23)\n representing the hour within the day that contains or begins\n with the instant in time represented by this Date\n object, as interpreted in the local time zone.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "Date", "is_static": false, "return_value": {"return_name": [], "return_description": ["the number of minutes past the hour represented by this date."], "return_type": ["int"]}, "method_name": "getMinutes", "method_description": "\n\n\n      This method is deprecated.\n    This method is deprecated and should not be used because SQL Date\n values do not have a time component.\n  \nReturns the number of minutes past the hour represented by this date,\n as interpreted in the local time zone.\n The value returned is between 0 and 59.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "Date", "is_static": false, "return_value": {"return_name": [], "return_description": ["the number of seconds past the minute represented by this date."], "return_type": ["int"]}, "method_name": "getSeconds", "method_description": "\n\n\n      This method is deprecated.\n    This method is deprecated and should not be used because SQL Date\n values do not have a time component.\n  \nReturns the number of seconds past the minute represented by this date.\n The value returned is between 0 and 61. The\n values 60 and 61 can only occur on those\n Java Virtual Machines that take leap seconds into account.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["i"], "param_type": "int", "param_description": " the hour value."}], "class_name": "Date", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "setHours", "method_description": "\n\n\n      This method is deprecated.\n    This method is deprecated and should not be used because SQL Date\n values do not have a time component.\n  \nSets the hour of this Date object to the specified value.\n This Date object is modified so that it represents a point\n in time within the specified hour of the day, with the year, month,\n date, minute, and second the same as before, as interpreted in the\n local time zone.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["i"], "param_type": "int", "param_description": " the value of the minutes."}], "class_name": "Date", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "setMinutes", "method_description": "\n\n\n      This method is deprecated.\n    This method is deprecated and should not be used because SQL Date\n values do not have a time component.\n  \nSets the minutes of this Date object to the specified value.\n This Date object is modified so that it represents a point\n in time within the specified minute of the hour, with the year, month,\n date, hour, and second the same as before, as interpreted in the\n local time zone.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["i"], "param_type": "int", "param_description": " the seconds value."}], "class_name": "Date", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "setSeconds", "method_description": "\n\n\n      This method is deprecated.\n    This method is deprecated and should not be used because SQL Date\n values do not have a time component.\n  \nSets the seconds of this Date to the specified value.\n This Date object is modified so that it represents a\n point in time within the specified second of the minute, with\n the year, month, date, hour, and minute the same as before, as\n interpreted in the local time zone.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["date"], "param_type": "long", "param_description": " milliseconds since January 1, 1970, 00:00:00 GMT not\n        to exceed the milliseconds representation for the year 8099.\n        A negative number indicates the number of milliseconds\n        before January 1, 1970, 00:00:00 GMT."}], "class_name": "Date", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "setTime", "method_description": "Sets an existing Date object\n using the given milliseconds time value.\n If the given milliseconds value contains time information,\n the driver will set the time components to the\n time in the default time zone (the time zone of the Java virtual\n machine running the application) that corresponds to zero GMT.\n", "method_declar": ""}, {"params": [], "class_name": "Date", "is_static": false, "return_value": {"return_name": [], "return_description": ["a String in yyyy-mm-dd format"], "return_type": ["String"]}, "method_name": "toString", "method_description": "Formats a date in the date escape format yyyy-mm-dd.\n \n\n", "method_declar": ""}, {"params": [{"param_name": ["s"], "param_type": "String", "param_description": " a String object representing a date in\n        in the format \"yyyy-[m]m-[d]d\". The leading zero for mm\n and dd may also be omitted."}], "class_name": "Date", "is_static": true, "return_value": {"return_name": [], "return_description": ["a java.sql.Date object representing the\n         given date"], "return_type": ["Date"]}, "method_name": "valueOf", "method_description": "Converts a string in JDBC date escape format to\n a Date value.\n", "method_declar": ""}], "class_name": "Date", "Vars": null}