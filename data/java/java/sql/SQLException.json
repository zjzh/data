{"package_name": "java.sql", "subclass_list": ["BatchUpdateException", "SQLClientInfoException", "SQLNonTransientException", "SQLRecoverableException", "SQLTransientException", "SQLWarning", "BatchUpdateException", "SQLException", "SQLClientInfoException", "SQLException", "SQLNonTransientException", "SQLException", "SQLRecoverableException", "SQLException", "SQLTransientException", "SQLException", "SQLWarning"], "class_description": " An exception that provides information on a database access\n error or other errors. Each SQLException provides several kinds of information: ", "class_type": "class", "typealias": [], "interface_list": ["Iterable<Throwable>"], "class_inherit_list": ["Exception"], "Methods": [{"params": [{"param_name": ["reason"], "param_type": "String", "param_description": " a description of the exception"}, {"param_name": ["SQLState"], "param_type": "String", "param_description": " an XOPEN or SQL:2003 code identifying the exception"}, {"param_name": ["vendorCode"], "param_type": "int", "param_description": " a database vendor-specific exception code"}], "class_name": "SQLException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a SQLException object with a given\n reason, SQLState  and\n vendorCode.\n\n The cause is not initialized, and may subsequently be\n initialized by a call to the\n Throwable#initCause(java.lang.Throwable) method.\n \n\n", "method_declar": ""}, {"params": [{"param_name": ["reason"], "param_type": "String", "param_description": " a description of the exception"}, {"param_name": ["SQLState"], "param_type": "String", "param_description": " an XOPEN or SQL:2003 code identifying the exception"}], "class_name": "SQLException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a SQLException object with a given\n reason and SQLState.\n\n The cause is not initialized, and may subsequently be\n initialized by a call to the\n Throwable#initCause(java.lang.Throwable) method. The vendor code\n is initialized to 0.\n \n\n", "method_declar": ""}, {"params": [{"param_name": ["reason"], "param_type": "String", "param_description": " a description of the exception"}], "class_name": "SQLException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a SQLException object with a given\n reason. The  SQLState  is initialized to\n null and the vender code is initialized to 0.\n\n The cause is not initialized, and may subsequently be\n initialized by a call to the\n Throwable#initCause(java.lang.Throwable) method.\n \n\n", "method_declar": ""}, {"params": [], "class_name": "SQLException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a SQLException object.\n The reason, SQLState are initialized\n to null and the vendor code is initialized to 0.\n\n The cause is not initialized, and may subsequently be\n initialized by a call to the\n Throwable#initCause(java.lang.Throwable) method.\n \n\n", "method_declar": ""}, {"params": [{"param_name": ["cause"], "param_type": "Throwable", "param_description": " the underlying reason for this SQLException\n (which is saved for later retrieval by the getCause() method);\n may be null indicating the cause is non-existent or unknown."}], "class_name": "SQLException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a SQLException object with a given\n cause.\n The SQLState is initialized\n to null and the vendor code is initialized to 0.\n The reason  is initialized to null if\n cause==null or to cause.toString() if\n cause!=null.\n \n\n", "method_declar": ""}, {"params": [{"param_name": ["reason"], "param_type": "String", "param_description": " a description of the exception."}, {"param_name": ["cause"], "param_type": "Throwable", "param_description": " the underlying reason for this SQLException\n (which is saved for later retrieval by the getCause() method);\n may be null indicating the cause is non-existent or unknown."}], "class_name": "SQLException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a SQLException object with a given\n reason and  cause.\n The SQLState is  initialized to null\n and the vendor code is initialized to 0.\n \n\n", "method_declar": ""}, {"params": [{"param_name": ["reason"], "param_type": "String", "param_description": " a description of the exception."}, {"param_name": ["sqlState"], "param_type": "String", "param_description": " an XOPEN or SQL:2003 code identifying the exception"}, {"param_name": ["cause"], "param_type": "Throwable", "param_description": " the underlying reason for this SQLException\n (which is saved for later retrieval by the\n getCause() method); may be null indicating\n     the cause is non-existent or unknown."}], "class_name": "SQLException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a SQLException object with a given\n reason, SQLState and  cause.\n The vendor code is initialized to 0.\n \n\n", "method_declar": ""}, {"params": [{"param_name": ["reason"], "param_type": "String", "param_description": " a description of the exception"}, {"param_name": ["sqlState"], "param_type": "String", "param_description": " an XOPEN or SQL:2003 code identifying the exception"}, {"param_name": ["vendorCode"], "param_type": "int", "param_description": " a database vendor-specific exception code"}, {"param_name": ["cause"], "param_type": "Throwable", "param_description": " the underlying reason for this SQLException\n (which is saved for later retrieval by the getCause() method);\n may be null indicating the cause is non-existent or unknown."}], "class_name": "SQLException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a SQLException object with a given\n reason, SQLState, vendorCode\n and  cause.\n \n\n", "method_declar": ""}, {"params": [], "class_name": "SQLException", "is_static": false, "return_value": {"return_name": [], "return_description": ["the vendor's error code"], "return_type": ["int"]}, "method_name": "getErrorCode", "method_description": "Retrieves the vendor-specific exception code\n for this SQLException object.\n", "method_declar": ""}, {"params": [], "class_name": "SQLException", "is_static": false, "return_value": {"return_name": [], "return_description": ["the next SQLException object in the chain;\n         null if there are none"], "return_type": ["SQLException"]}, "method_name": "getNextException", "method_description": "Retrieves the exception chained to this\n SQLException object by setNextException(SQLException ex).\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "SQLException", "is_static": false, "return_value": {"return_name": [], "return_description": ["the SQLState value"], "return_type": ["String"]}, "method_name": "getSQLState", "method_description": "Retrieves the SQLState for this SQLException object.\n", "method_declar": ""}, {"params": [], "class_name": "SQLException", "is_static": false, "return_value": {"return_name": [], "return_description": ["an iterator over the chained SQLExceptions and causes in the proper\n order"], "return_type": ["Iterator<Throwable>"]}, "method_name": "iterator", "method_description": "Returns an iterator over the chained SQLExceptions.  The iterator will\n be used to iterate over each SQLException and its underlying cause\n (if any).\n", "method_declar": ""}, {"params": [{"param_name": ["ex"], "param_type": "SQLException", "param_description": " the new exception that will be added to the end of\n            the SQLException chain"}], "class_name": "SQLException", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "setNextException", "method_description": "Adds an SQLException object to the end of the chain.\nSee also:\n", "method_declar": ""}], "class_name": "SQLException", "Vars": null}