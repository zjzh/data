{"package_name": "java.net", "subclass_list": [], "class_description": "This class loader is used to load classes and resources from a search\n path of URLs referring to both JAR files and directories. Any URL that\n ends with a '/' is assumed to refer to a directory. Otherwise, the URL\n is assumed to refer to a JAR file which will be opened as needed. The AccessControlContext of the thread that created the instance of\n URLClassLoader will be used when subsequently loading classes and\n resources. The classes that are loaded are by default granted permission only to\n access the URLs specified when the URLClassLoader was created. ", "class_type": "class", "typealias": [], "interface_list": ["Closeable"], "class_inherit_list": ["SecureClassLoader"], "Methods": [{"params": [{"param_name": ["urls"], "param_type": "URL[]", "param_description": " the URLs from which to load classes and resources"}, {"param_name": ["parent"], "param_type": "ClassLoader", "param_description": " the parent class loader for delegation"}], "class_name": "URLClassLoader", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new URLClassLoader for the given URLs. The URLs will be\n searched in the order specified for classes and resources after first\n searching in the specified parent class loader. Any URL that ends with\n a '/' is assumed to refer to a directory. Otherwise, the URL is assumed\n to refer to a JAR file which will be downloaded and opened as needed.\n\n \nIf there is a security manager, this method first\n calls the security manager's checkCreateClassLoader method\n to ensure creation of a class loader is allowed.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["urls"], "param_type": "URL[]", "param_description": " the URLs from which to load classes and resources"}], "class_name": "URLClassLoader", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new URLClassLoader for the specified URLs using the\n default delegation parent ClassLoader. The URLs will\n be searched in the order specified for classes and resources after\n first searching in the parent class loader. Any URL that ends with\n a '/' is assumed to refer to a directory. Otherwise, the URL is\n assumed to refer to a JAR file which will be downloaded and opened\n as needed.\n\n \nIf there is a security manager, this method first\n calls the security manager's checkCreateClassLoader method\n to ensure creation of a class loader is allowed.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["urls"], "param_type": "URL[]", "param_description": " the URLs from which to load classes and resources"}, {"param_name": ["parent"], "param_type": "ClassLoader", "param_description": " the parent class loader for delegation"}, {"param_name": ["factory"], "param_type": "URLStreamHandlerFactory", "param_description": " the URLStreamHandlerFactory to use when creating URLs"}], "class_name": "URLClassLoader", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new URLClassLoader for the specified URLs, parent\n class loader, and URLStreamHandlerFactory. The parent argument\n will be used as the parent class loader for delegation. The\n factory argument will be used as the stream handler factory to\n obtain protocol handlers when creating new jar URLs.\n\n \nIf there is a security manager, this method first\n calls the security manager's checkCreateClassLoader method\n to ensure creation of a class loader is allowed.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "URLClassLoader", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "close", "method_description": "Closes this URLClassLoader, so that it can no longer be used to load\n new classes or resources that are defined by this loader.\n Classes and resources defined by any of this loader's parents in the\n delegation hierarchy are still accessible. Also, any classes or resources\n that are already loaded, are still accessible.\n \n\n In the case of jar: and file: URLs, it also closes any files\n that were opened by it. If another thread is loading a\n class when the close method is invoked, then the result of\n that load is undefined.\n \n\n The method makes a best effort attempt to close all opened files,\n by catching IOExceptions internally. Unchecked exceptions\n and errors are not caught. Calling close on an already closed\n loader has no effect.\n \n\n", "method_declar": ""}, {"params": [{"param_name": ["name"], "param_type": "String", "param_description": " the name of the resource"}], "class_name": "URLClassLoader", "is_static": false, "return_value": {"return_name": [], "return_description": ["a URL for the resource, or null\n if the resource could not be found, or if the loader is closed."], "return_type": ["URL"]}, "method_name": "findResource", "method_description": "Finds the resource with the specified name on the URL search path.\n", "method_declar": ""}, {"params": [{"param_name": ["name"], "param_type": "String", "param_description": " the resource name"}], "class_name": "URLClassLoader", "is_static": false, "return_value": {"return_name": [], "return_description": ["an Enumeration of URLs\n         If the loader is closed, the Enumeration will be empty."], "return_type": ["Enumeration<URL>"]}, "method_name": "findResources", "method_description": "Returns an Enumeration of URLs representing all of the resources\n on the URL search path having the specified name.\n", "method_declar": ""}, {"params": [{"param_name": ["name"], "param_type": "String", "param_description": " The resource name"}], "class_name": "URLClassLoader", "is_static": false, "return_value": {"return_name": [], "return_description": ["An input stream for reading the resource, or null\n          if the resource could not be found"], "return_type": ["InputStream"]}, "method_name": "getResourceAsStream", "method_description": "Returns an input stream for reading the specified resource.\n If this loader is closed, then any resources opened by this method\n will be closed.\n\n \n The search order is described in the documentation for ClassLoader.getResource(java.lang.String).  \n", "method_declar": ""}, {"params": [], "class_name": "URLClassLoader", "is_static": false, "return_value": {"return_name": [], "return_description": ["the search path of URLs for loading classes and resources."], "return_type": ["URL[]"]}, "method_name": "getURLs", "method_description": "Returns the search path of URLs for loading classes and resources.\n This includes the original list of URLs specified to the constructor,\n along with any URLs subsequently appended by the addURL() method.\n", "method_declar": ""}, {"params": [{"param_name": ["urls"], "param_type": "URL[]", "param_description": " the URLs to search for classes and resources"}, {"param_name": ["parent"], "param_type": "ClassLoader", "param_description": " the parent class loader for delegation"}], "class_name": "URLClassLoader", "is_static": true, "return_value": {"return_name": [], "return_description": ["the resulting class loader"], "return_type": ["URLClassLoader"]}, "method_name": "newInstance", "method_description": "Creates a new instance of URLClassLoader for the specified\n URLs and parent class loader. If a security manager is\n installed, the loadClass method of the URLClassLoader\n returned by this method will invoke the\n SecurityManager.checkPackageAccess method before\n loading the class.\n", "method_declar": ""}, {"params": [{"param_name": ["urls"], "param_type": "URL[]", "param_description": " the URLs to search for classes and resources"}], "class_name": "URLClassLoader", "is_static": true, "return_value": {"return_name": [], "return_description": ["the resulting class loader"], "return_type": ["URLClassLoader"]}, "method_name": "newInstance", "method_description": "Creates a new instance of URLClassLoader for the specified\n URLs and default parent class loader. If a security manager is\n installed, the loadClass method of the URLClassLoader\n returned by this method will invoke the\n SecurityManager.checkPackageAccess before\n loading the class.\n", "method_declar": ""}], "class_name": "URLClassLoader", "Vars": null}