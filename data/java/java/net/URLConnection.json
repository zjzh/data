{"package_name": "java.net", "subclass_list": ["HttpURLConnection", "JarURLConnection", "HttpURLConnection", "JarURLConnection"], "class_description": "The abstract class URLConnection is the superclass\n of all classes that represent a communications link between the\n application and a URL. Instances of this class can be used both to\n read from and to write to the resource referenced by the URL. In\n general, creating a connection to a URL is a multistep process: The setup parameters are modified using the following methods: and the general request properties are modified using the method: Default values for the AllowUserInteraction and\n UseCaches parameters can be set using the methods\n setDefaultAllowUserInteraction and\n setDefaultUseCaches. Each of the above set methods has a corresponding\n get method to retrieve the value of the parameter or\n general request property. The specific parameters and general\n request properties that are applicable are protocol specific. The following methods are used to access the header fields and\n the contents after the connection is made to the remote object: Certain header fields are accessed frequently. The methods: provide convenient access to these fields. The\n getContentType method is used by the\n getContent method to determine the type of the remote\n object; subclasses may find it convenient to override the\n getContentType method. In the common case, all of the pre-connection parameters and\n general request properties can be ignored: the pre-connection\n parameters and request properties default to sensible values. For\n most clients of this interface, there are only two interesting\n methods: getInputStream and getContent,\n which are mirrored in the URL class by convenience methods. More information on the request properties and header fields of\n an http connection can be found at: ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [], "class_name": "URLConnection", "Vars": null}