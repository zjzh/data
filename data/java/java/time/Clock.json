{"package_name": "java.time", "subclass_list": [], "class_description": "A clock providing access to the current instant, date and time using a time-zone. Instances of this class are used to find the current instant, which can be\n interpreted using the stored time-zone to find the current date and time.\n As such, a clock can be used instead of System#currentTimeMillis()\n and TimeZone#getDefault(). Use of a Clock is optional. All key date-time classes also have a\n now() factory method that uses the system clock in the default time zone.\n The primary purpose of this abstraction is to allow alternate clocks to be\n plugged in as and when required. Applications use an object to obtain the\n current time rather than a static method. This can simplify testing. Best practice for applications is to pass a Clock into any method\n that requires the current instant. A dependency injection framework is one\n way to achieve this: The system factory methods provide clocks based on the best available\n system clock This may use System#currentTimeMillis(), or a higher\n resolution clock if one is available. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [], "class_name": "Clock", "Vars": null}