{"package_name": "java.time.chrono", "subclass_list": ["LocalDateTime", "LocalDateTime"], "class_description": "A date-time without a time-zone in an arbitrary chronology, intended\n for advanced globalization use cases. Most applications should declare method signatures, fields and variables\n as LocalDateTime, not this interface. A ChronoLocalDateTime is the abstract representation of a local date-time\n where the Chronology chronology, or calendar system, is pluggable.\n The date-time is defined in terms of fields expressed by TemporalField,\n where most common implementations are defined in ChronoField.\n The chronology defines how the calendar system operates and the meaning of\n the standard fields. Ensure that the discussion in ChronoLocalDate has been read and understood\n before using this interface. ", "class_type": "interface", "typealias": [], "interface_list": ["Temporal", "TemporalAdjuster", "Comparable<ChronoLocalDateTime>"], "class_inherit_list": [], "Methods": [], "class_name": "ChronoLocalDateTime", "Vars": null}