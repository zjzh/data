{"package_name": "java.time", "subclass_list": [], "class_description": "A time-zone offset from Greenwich/UTC, such as +02:00. A time-zone offset is the amount of time that a time-zone differs from Greenwich/UTC.\n This is usually a fixed number of hours and minutes. Different parts of the world have different time-zone offsets.\n The rules for how offsets vary by place and time of year are captured in the\n ZoneId class. For example, Paris is one hour ahead of Greenwich/UTC in winter and two hours\n ahead in summer. The ZoneId instance for Paris will reference two\n ZoneOffset instances - a +01:00 instance for winter,\n and a +02:00 instance for summer. In 2008, time-zone offsets around the world extended from -12:00 to +14:00.\n To prevent any problems with that range being extended, yet still provide\n validation, the range of offsets is restricted to -18:00 to 18:00 inclusive. This class is designed for use with the ISO calendar system.\n The fields of hours, minutes and seconds make assumptions that are valid for the\n standard ISO definitions of those fields. This class may be used with other\n calendar systems providing the definition of the time fields matches those\n of the ISO calendar system. Instances of ZoneOffset must be compared using equals(Object).\n Implementations may choose to cache certain common offsets, however\n applications must not rely on such caching. ", "class_type": "class", "typealias": [], "interface_list": ["TemporalAccessor", "TemporalAdjuster", "Comparable<ZoneOffset>", "Serializable"], "class_inherit_list": ["ZoneId"], "Methods": [], "class_name": "ZoneOffset", "Vars": null}