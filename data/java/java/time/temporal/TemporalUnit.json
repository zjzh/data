{"package_name": "java.time.temporal", "subclass_list": ["ChronoUnit", "ChronoUnit"], "class_description": "A unit of date-time, such as Days or Hours. Measurement of time is built on units, such as years, months, days, hours, minutes and seconds.\n Implementations of this interface represent those units. An instance of this interface represents the unit itself, rather than an amount of the unit.\n See Period for a class that represents an amount in terms of the common units. The most commonly used units are defined in ChronoUnit.\n Further units are supplied in IsoFields.\n Units can also be written by application code by implementing this interface. The unit works using double dispatch. Client code calls methods on a date-time like\n LocalDateTime which check if the unit is a ChronoUnit.\n If it is, then the date-time must handle it.\n Otherwise, the method call is re-dispatched to the matching method in this interface. ", "class_type": "interface", "typealias": [], "interface_list": [""], "class_inherit_list": [], "Methods": [], "class_name": "TemporalUnit", "Vars": null}