{"package_name": "java.time.temporal", "subclass_list": [], "class_description": "Common and useful TemporalAdjusters. Adjusters are a key tool for modifying temporal objects.\n They exist to externalize the process of adjustment, permitting different\n approaches, as per the strategy design pattern.\n Examples might be an adjuster that sets the date avoiding weekends, or one that\n sets the date to the last day of the month. There are two equivalent ways of using a TemporalAdjuster.\n The first is to invoke the method on the interface directly.\n The second is to use Temporal#with(TemporalAdjuster): This class contains a standard set of adjusters, available as static methods.\n These include: ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [], "class_name": "TemporalAdjusters", "Vars": null}