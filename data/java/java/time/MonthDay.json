{"package_name": "java.time", "subclass_list": [], "class_description": "A month-day in the ISO-8601 calendar system, such as --12-03. MonthDay is an immutable date-time object that represents the combination\n of a month and day-of-month. Any field that can be derived from a month and day,\n such as quarter-of-year, can be obtained. This class does not store or represent a year, time or time-zone.\n For example, the value \"December 3rd\" can be stored in a MonthDay. Since a MonthDay does not possess a year, the leap day of\n February 29th is considered valid. This class implements TemporalAccessor rather than Temporal.\n This is because it is not possible to define whether February 29th is valid or not\n without external information, preventing the implementation of plus/minus.\n Related to this, MonthDay only provides access to query and set the fields\n MONTH_OF_YEAR and DAY_OF_MONTH. The ISO-8601 calendar system is the modern civil calendar system used today\n in most of the world. It is equivalent to the proleptic Gregorian calendar\n system, in which today's rules for leap years are applied for all time.\n For most applications written today, the ISO-8601 rules are entirely suitable.\n However, any application that makes use of historical dates, and requires them\n to be accurate will find the ISO-8601 approach unsuitable. ", "class_type": "class", "typealias": [], "interface_list": ["TemporalAccessor", "TemporalAdjuster", "Comparable<MonthDay>", "Serializable"], "class_inherit_list": ["Object"], "Methods": [], "class_name": "MonthDay", "Vars": null}