{"package_name": "java.time", "subclass_list": [], "class_description": "A year in the ISO-8601 calendar system, such as 2007. Year is an immutable date-time object that represents a year.\n Any field that can be derived from a year can be obtained. Note that years in the ISO chronology only align with years in the\n Gregorian-Julian system for modern years. Parts of Russia did not switch to the\n modern Gregorian/ISO rules until 1920.\n As such, historical years must be treated with caution. This class does not store or represent a month, day, time or time-zone.\n For example, the value \"2007\" can be stored in a Year. Years represented by this class follow the ISO-8601 standard and use\n the proleptic numbering system. Year 1 is preceded by year 0, then by year -1. The ISO-8601 calendar system is the modern civil calendar system used today\n in most of the world. It is equivalent to the proleptic Gregorian calendar\n system, in which today's rules for leap years are applied for all time.\n For most applications written today, the ISO-8601 rules are entirely suitable.\n However, any application that makes use of historical dates, and requires them\n to be accurate will find the ISO-8601 approach unsuitable. ", "class_type": "class", "typealias": [], "interface_list": ["Temporal", "TemporalAdjuster", "Comparable<Year>", "Serializable"], "class_inherit_list": ["Object"], "Methods": [], "class_name": "Year", "Vars": null}