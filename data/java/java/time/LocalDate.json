{"package_name": "java.time", "subclass_list": [], "class_description": "A date without a time-zone in the ISO-8601 calendar system,\n such as 2007-12-03. LocalDate is an immutable date-time object that represents a date,\n often viewed as year-month-day. Other date fields, such as day-of-year,\n day-of-week and week-of-year, can also be accessed.\n For example, the value \"2nd October 2007\" can be stored in a LocalDate. This class does not store or represent a time or time-zone.\n Instead, it is a description of the date, as used for birthdays.\n It cannot represent an instant on the time-line without additional information\n such as an offset or time-zone. The ISO-8601 calendar system is the modern civil calendar system used today\n in most of the world. It is equivalent to the proleptic Gregorian calendar\n system, in which today's rules for leap years are applied for all time.\n For most applications written today, the ISO-8601 rules are entirely suitable.\n However, any application that makes use of historical dates, and requires them\n to be accurate will find the ISO-8601 approach unsuitable. ", "class_type": "class", "typealias": [], "interface_list": ["Temporal", "TemporalAdjuster", "ChronoLocalDate", "Serializable"], "class_inherit_list": ["Object"], "Methods": [], "class_name": "LocalDate", "Vars": null}