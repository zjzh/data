{"package_name": "java.time", "subclass_list": [], "class_description": "A date-time with an offset from UTC/Greenwich in the ISO-8601 calendar system,\n such as 2007-12-03T10:15:30+01:00. OffsetDateTime is an immutable representation of a date-time with an offset.\n This class stores all date and time fields, to a precision of nanoseconds,\n as well as the offset from UTC/Greenwich. For example, the value\n \"2nd October 2007 at 13:45.30.123456789 +02:00\" can be stored in an OffsetDateTime. OffsetDateTime, ZonedDateTime and Instant all store an instant\n on the time-line to nanosecond precision.\n Instant is the simplest, simply representing the instant.\n OffsetDateTime adds to the instant the offset from UTC/Greenwich, which allows\n the local date-time to be obtained.\n ZonedDateTime adds full time-zone rules. It is intended that ZonedDateTime or Instant is used to model data\n in simpler applications. This class may be used when modeling date-time concepts in\n more detail, or when communicating to a database or in a network protocol. ", "class_type": "class", "typealias": [], "interface_list": ["Temporal", "TemporalAdjuster", "Comparable<OffsetDateTime>", "Serializable"], "class_inherit_list": ["Object"], "Methods": [], "class_name": "OffsetDateTime", "Vars": null}