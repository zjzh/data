{"package_name": "java.io", "subclass_list": [], "class_description": " This class was deprecated\n      in API level 1.\n    This class does not properly convert characters into bytes.  As\n             of JDK\u00a01.1, the preferred way to create a stream from a\n             string is via the StringReader class. This class allows an application to create an input stream in\n which the bytes read are supplied by the contents of a string.\n Applications can also read bytes from a byte array by using a\n ByteArrayInputStream. Only the low eight bits of each character in the string are used by\n this class. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["InputStream"], "Methods": [{"params": [{"param_name": ["s"], "param_type": "String", "param_description": " the underlying input buffer."}], "class_name": "StringBufferInputStream", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a string input stream to read data from the specified string.\n", "method_declar": ""}, {"params": [], "class_name": "StringBufferInputStream", "is_static": false, "return_value": {"return_name": [], "return_description": ["the value of count\u00a0-\u00a0pos, which is the\n             number of bytes remaining to be read from the input buffer."], "return_type": ["int"]}, "method_name": "available", "method_description": "Returns the number of bytes that can be read from the input\n stream without blocking.\n", "method_declar": ""}, {"params": [], "class_name": "StringBufferInputStream", "is_static": false, "return_value": {"return_name": [], "return_description": ["the next byte of data, or -1 if the end of the\n             stream is reached."], "return_type": ["int"]}, "method_name": "read", "method_description": "Reads the next byte of data from this input stream. The value\n byte is returned as an int in the range\n 0 to 255. If no byte is available\n because the end of the stream has been reached, the value\n -1 is returned.\n \n\n The read method of\n StringBufferInputStream cannot block. It returns the\n low eight bits of the next character in this input stream's buffer.\n", "method_declar": ""}, {"params": [{"param_name": ["b"], "param_type": "byte[]", "param_description": " the buffer into which the data is read."}, {"param_name": ["off"], "param_type": "int", "param_description": " the start offset of the data."}, {"param_name": ["len"], "param_type": "int", "param_description": " the maximum number of bytes read."}], "class_name": "StringBufferInputStream", "is_static": false, "return_value": {"return_name": [], "return_description": ["the total number of bytes read into the buffer, or\n             -1 if there is no more data because the end of\n             the stream has been reached."], "return_type": ["int"]}, "method_name": "read", "method_description": "Reads up to len bytes of data from this input stream\n into an array of bytes.\n \n\n The read method of\n StringBufferInputStream cannot block. It copies the\n low eight bits from the characters in this input stream's buffer into\n the byte array argument.\n", "method_declar": ""}, {"params": [], "class_name": "StringBufferInputStream", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "reset", "method_description": "Resets the input stream to begin reading from the first character\n of this input stream's underlying buffer.\n", "method_declar": ""}, {"params": [{"param_name": ["n"], "param_type": "long", "param_description": " the number of bytes to be skipped."}], "class_name": "StringBufferInputStream", "is_static": false, "return_value": {"return_name": [], "return_description": ["the actual number of bytes skipped."], "return_type": ["long"]}, "method_name": "skip", "method_description": "Skips n bytes of input from this input stream. Fewer\n bytes might be skipped if the end of the input stream is reached.\n", "method_declar": ""}], "class_name": "StringBufferInputStream", "Vars": null}