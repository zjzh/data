{"package_name": "java.io", "subclass_list": [], "class_description": "A character-stream reader that allows characters to be pushed back into the\n stream. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["FilterReader"], "Methods": [{"params": [{"param_name": ["in"], "param_type": "Reader", "param_description": " The reader from which characters will be read"}, {"param_name": ["size"], "param_type": "int", "param_description": " The size of the pushback buffer"}], "class_name": "PushbackReader", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a new pushback reader with a pushback buffer of the given size.\n", "method_declar": ""}, {"params": [{"param_name": ["in"], "param_type": "Reader", "param_description": " The reader from which characters will be read"}], "class_name": "PushbackReader", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a new pushback reader with a one-character pushback buffer.\n", "method_declar": ""}, {"params": [], "class_name": "PushbackReader", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "close", "method_description": "Closes the stream and releases any system resources associated with\n it. Once the stream has been closed, further read(),\n unread(), ready(), or skip() invocations will throw an IOException.\n Closing a previously closed stream has no effect.\n", "method_declar": ""}, {"params": [{"param_name": ["readAheadLimit"], "param_type": "int", "param_description": " Limit on the number of characters that may be\n                         read while still preserving the mark.  After\n                         reading this many characters, attempting to\n                         reset the stream may fail."}], "class_name": "PushbackReader", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "mark", "method_description": "Marks the present position in the stream. The mark\n for class PushbackReader always throws an exception.\n", "method_declar": ""}, {"params": [], "class_name": "PushbackReader", "is_static": false, "return_value": {"return_name": [], "return_description": ["true if and only if this stream supports the mark operation."], "return_type": ["boolean"]}, "method_name": "markSupported", "method_description": "Tells whether this stream supports the mark() operation, which it does\n not.\n", "method_declar": ""}, {"params": [], "class_name": "PushbackReader", "is_static": false, "return_value": {"return_name": [], "return_description": ["The character read, or -1 if the end of the stream has been\n             reached"], "return_type": ["int"]}, "method_name": "read", "method_description": "Reads a single character.\n", "method_declar": ""}, {"params": [{"param_name": ["cbuf"], "param_type": "char[]", "param_description": " Destination buffer"}, {"param_name": ["off"], "param_type": "int", "param_description": " Offset at which to start writing characters"}, {"param_name": ["len"], "param_type": "int", "param_description": " Maximum number of characters to read"}], "class_name": "PushbackReader", "is_static": false, "return_value": {"return_name": [], "return_description": ["The number of characters read, or -1 if the end of the\n             stream has been reached"], "return_type": ["int"]}, "method_name": "read", "method_description": "Reads characters into a portion of an array.\n", "method_declar": ""}, {"params": [], "class_name": "PushbackReader", "is_static": false, "return_value": {"return_name": [], "return_description": ["True if the next read() is guaranteed not to block for input,\n false otherwise.  Note that returning false does not guarantee that the\n next read will block."], "return_type": ["boolean"]}, "method_name": "ready", "method_description": "Tells whether this stream is ready to be read.\n", "method_declar": ""}, {"params": [], "class_name": "PushbackReader", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "reset", "method_description": "Resets the stream. The reset method of\n PushbackReader always throws an exception.\n", "method_declar": ""}, {"params": [{"param_name": ["n"], "param_type": "long", "param_description": " The number of characters to skip"}], "class_name": "PushbackReader", "is_static": false, "return_value": {"return_name": [], "return_description": ["The number of characters actually skipped"], "return_type": ["long"]}, "method_name": "skip", "method_description": "Skips characters.  This method will block until some characters are\n available, an I/O error occurs, or the end of the stream is reached.\n", "method_declar": ""}, {"params": [{"param_name": ["cbuf"], "param_type": "char[]", "param_description": " Character array"}, {"param_name": ["off"], "param_type": "int", "param_description": " Offset of first character to push back"}, {"param_name": ["len"], "param_type": "int", "param_description": " Number of characters to push back"}], "class_name": "PushbackReader", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "unread", "method_description": "Pushes back a portion of an array of characters by copying it to the\n front of the pushback buffer.  After this method returns, the next\n character to be read will have the value cbuf[off], the\n character after that will have the value cbuf[off+1], and\n so forth.\n", "method_declar": ""}, {"params": [{"param_name": ["cbuf"], "param_type": "char[]", "param_description": " Character array to push back"}], "class_name": "PushbackReader", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "unread", "method_description": "Pushes back an array of characters by copying it to the front of the\n pushback buffer.  After this method returns, the next character to be\n read will have the value cbuf[0], the character after that\n will have the value cbuf[1], and so forth.\n", "method_declar": ""}, {"params": [{"param_name": ["c"], "param_type": "int", "param_description": " The int value representing a character to be pushed back"}], "class_name": "PushbackReader", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "unread", "method_description": "Pushes back a single character by copying it to the front of the\n pushback buffer. After this method returns, the next character to be read\n will have the value (char)c.\n", "method_declar": ""}], "class_name": "PushbackReader", "Vars": null}