{"package_name": "java.io", "subclass_list": [], "class_description": "Methods to access the character-based console device, if any, associated\n with the current Java virtual machine. Whether a virtual machine has a console is dependent upon the\n underlying platform and also upon the manner in which the virtual\n machine is invoked.  If the virtual machine is started from an\n interactive command line without redirecting the standard input and\n output streams then its console will exist and will typically be\n connected to the keyboard and display from which the virtual machine\n was launched.  If the virtual machine is started automatically, for\n example by a background job scheduler, then it will typically not\n have a console. If this virtual machine has a console then it is represented by a\n unique instance of this class which can be obtained by invoking the\n System.console() method.  If no console device is\n available then an invocation of that method will return null. Read and write operations are synchronized to guarantee the atomic\n completion of critical operations; therefore invoking methods\n readLine(), readPassword(), format(),\n printf() as well as the read, format and write operations\n on the objects returned by reader() and writer() may\n block in multithreaded scenarios. Invoking close() on the objects returned by the reader()\n and the writer() will not close the underlying stream of those\n objects. The console-read methods return null when the end of the\n console input stream is reached, for example by typing control-D on\n Unix or control-Z on Windows.  Subsequent read operations will succeed\n if additional characters are later entered on the console's input\n device. Unless otherwise specified, passing a null argument to any method\n in this class will cause a NullPointerException to be thrown. Security note:\n If an application needs to read a password or other secure data, it should\n use readPassword() or readPassword(java.lang.String, java.lang.Object) and\n manually zero the returned character array after processing to minimize the\n lifetime of sensitive data in memory. ", "class_type": "class", "typealias": [], "interface_list": ["Flushable"], "class_inherit_list": ["Object"], "Methods": [], "class_name": "Console", "Vars": null}