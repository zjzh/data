{"package_name": "java.io", "subclass_list": ["DataInputStream", "ObjectInput", "ObjectInputStream", "RandomAccessFile", "DataInputStream", "ObjectInput", "ObjectInputStream", "RandomAccessFile"], "class_description": "The DataInput interface provides\n for reading bytes from a binary stream and\n reconstructing from them data in any of\n the Java primitive types. There is also\n a\n facility for reconstructing a String\n from data in\n modified UTF-8\n format. It is generally true of all the reading\n routines in this interface that if end of\n file is reached before the desired number\n of bytes has been read, an EOFException\n (which is a kind of IOException)\n is thrown. If any byte cannot be read for\n any reason other than end of file, an IOException\n other than EOFException is\n thrown. In particular, an IOException\n may be thrown if the input stream has been\n closed. Implementations of the DataInput and DataOutput interfaces represent\n Unicode strings in a format that is a slight modification of UTF-8.\n (For information regarding the standard UTF-8 format, see section\n 3.9 Unicode Encoding Forms of The Unicode Standard, Version\n 4.0).\n Note that in the following table, the most significant bit appears in the\n far left-hand column. The differences between this format and the\n standard UTF-8 format are the following: ", "class_type": "interface", "typealias": [], "interface_list": [""], "class_inherit_list": [], "Methods": [], "class_name": "DataInput", "Vars": null}