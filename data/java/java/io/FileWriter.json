{"package_name": "java.io", "subclass_list": [], "class_description": "Convenience class for writing character files.  The constructors of this\n class assume that the default character encoding and the default byte-buffer\n size are acceptable.  To specify these values yourself, construct an\n OutputStreamWriter on a FileOutputStream. Whether or not a file is available or may be created depends upon the\n underlying platform.  Some platforms, in particular, allow a file to be\n opened for writing by only one FileWriter (or other file-writing\n object) at a time.  In such situations the constructors in this class\n will fail if the file involved is already open. FileWriter is meant for writing streams of characters.\n For writing streams of raw bytes, consider using a\n FileOutputStream. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["OutputStreamWriter"], "Methods": [{"params": [{"param_name": ["fileName"], "param_type": "String", "param_description": " String The system-dependent filename."}], "class_name": "FileWriter", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a FileWriter object given a file name.\n", "method_declar": ""}, {"params": [{"param_name": ["fileName"], "param_type": "String", "param_description": " String The system-dependent filename."}, {"param_name": ["append"], "param_type": "boolean", "param_description": " boolean if true, then data will be written\n                  to the end of the file rather than the beginning."}], "class_name": "FileWriter", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a FileWriter object given a file name with a boolean\n indicating whether or not to append the data written.\n", "method_declar": ""}, {"params": [{"param_name": ["file"], "param_type": "File", "param_description": " a File object to write to."}], "class_name": "FileWriter", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a FileWriter object given a File object.\n", "method_declar": ""}, {"params": [{"param_name": ["file"], "param_type": "File", "param_description": " a File object to write to"}, {"param_name": ["append"], "param_type": "boolean", "param_description": " if true, then bytes will be written\n                      to the end of the file rather than the beginning"}], "class_name": "FileWriter", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a FileWriter object given a File object. If the second\n argument is true, then bytes will be written to the end\n of the file rather than the beginning.\n", "method_declar": ""}, {"params": [{"param_name": ["fd"], "param_type": "FileDescriptor", "param_description": " FileDescriptor object to write to."}], "class_name": "FileWriter", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a FileWriter object associated with a file descriptor.\n", "method_declar": ""}], "class_name": "FileWriter", "Vars": null}