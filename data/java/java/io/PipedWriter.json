{"package_name": "java.io", "subclass_list": [], "class_description": "Piped character-output streams. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Writer"], "Methods": [{"params": [{"param_name": ["snk"], "param_type": "PipedReader", "param_description": " The piped reader to connect to."}], "class_name": "PipedWriter", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a piped writer connected to the specified piped\n reader. Data characters written to this stream will then be\n available as input from snk.\n", "method_declar": ""}, {"params": [], "class_name": "PipedWriter", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a piped writer that is not yet connected to a\n piped reader. It must be connected to a piped reader,\n either by the receiver or the sender, before being used.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "PipedWriter", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "close", "method_description": "Closes this piped output stream and releases any system resources\n associated with this stream. This stream may no longer be used for\n writing characters.\n", "method_declar": ""}, {"params": [{"param_name": ["snk"], "param_type": "PipedReader", "param_description": " the piped reader to connect to."}], "class_name": "PipedWriter", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "connect", "method_description": "Connects this piped writer to a receiver. If this object\n is already connected to some other piped reader, an\n IOException is thrown.\n \n\n If snk is an unconnected piped reader and\n src is an unconnected piped writer, they may\n be connected by either the call:\n \n", "method_declar": ""}, {"params": [], "class_name": "PipedWriter", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "flush", "method_description": "Flushes this output stream and forces any buffered output characters\n to be written out.\n This will notify any readers that characters are waiting in the pipe.\n", "method_declar": ""}, {"params": [{"param_name": ["c"], "param_type": "int", "param_description": " the char to be written."}], "class_name": "PipedWriter", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "write", "method_description": "Writes the specified char to the piped output stream.\n If a thread was reading data characters from the connected piped input\n stream, but the thread is no longer alive, then an\n IOException is thrown.\n \n\n Implements the write method of Writer.\n", "method_declar": ""}, {"params": [{"param_name": ["cbuf"], "param_type": "char[]", "param_description": " the data."}, {"param_name": ["off"], "param_type": "int", "param_description": " the start offset in the data."}, {"param_name": ["len"], "param_type": "int", "param_description": " the number of characters to write."}], "class_name": "PipedWriter", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "write", "method_description": "Writes len characters from the specified character array\n starting at offset off to this piped output stream.\n This method blocks until all the characters are written to the output\n stream.\n If a thread was reading data characters from the connected piped input\n stream, but the thread is no longer alive, then an\n IOException is thrown.\n", "method_declar": ""}], "class_name": "PipedWriter", "Vars": null}