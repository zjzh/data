{"package_name": "java.io", "subclass_list": ["FileWriter", "FileWriter"], "class_description": "An OutputStreamWriter is a bridge from character streams to byte streams:\n Characters written to it are encoded into bytes using a specified charset.  The charset that it uses\n may be specified by name or may be given explicitly, or the platform's\n default charset may be accepted. Each invocation of a write() method causes the encoding converter to be\n invoked on the given character(s).  The resulting bytes are accumulated in a\n buffer before being written to the underlying output stream.  The size of\n this buffer may be specified, but by default it is large enough for most\n purposes.  Note that the characters passed to the write() methods are not\n buffered. For top efficiency, consider wrapping an OutputStreamWriter within a\n BufferedWriter so as to avoid frequent converter invocations.  For example: A surrogate pair is a character represented by a sequence of two\n char values: A high surrogate in the range '\\uD800' to\n '\\uDBFF' followed by a low surrogate in the range '\\uDC00' to\n '\\uDFFF'. A malformed surrogate element is a high surrogate that is not\n followed by a low surrogate or a low surrogate that is not preceded by a\n high surrogate. This class always replaces malformed surrogate elements and unmappable\n character sequences with the charset's default substitution sequence.\n The CharsetEncoder class should be used when more\n control over the encoding process is required. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Writer"], "Methods": [{"params": [{"param_name": ["out"], "param_type": "OutputStream", "param_description": " An OutputStream"}, {"param_name": ["charsetName"], "param_type": "String", "param_description": " The name of a supported\n         charset"}], "class_name": "OutputStreamWriter", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates an OutputStreamWriter that uses the named charset.\n", "method_declar": ""}, {"params": [{"param_name": ["out"], "param_type": "OutputStream", "param_description": " An OutputStream"}], "class_name": "OutputStreamWriter", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates an OutputStreamWriter that uses the default character encoding.\n", "method_declar": ""}, {"params": [{"param_name": ["out"], "param_type": "OutputStream", "param_description": " An OutputStream"}, {"param_name": ["cs"], "param_type": "Charset", "param_description": " A charset"}], "class_name": "OutputStreamWriter", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates an OutputStreamWriter that uses the given charset.\n", "method_declar": ""}, {"params": [{"param_name": ["out"], "param_type": "OutputStream", "param_description": " An OutputStream"}, {"param_name": ["enc"], "param_type": "CharsetEncoder", "param_description": " A charset encoder"}], "class_name": "OutputStreamWriter", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates an OutputStreamWriter that uses the given charset encoder.\n", "method_declar": ""}, {"params": [], "class_name": "OutputStreamWriter", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "close", "method_description": "Closes the stream, flushing it first. Once the stream has been closed,\n further write() or flush() invocations will cause an IOException to be\n thrown. Closing a previously closed stream has no effect.\n", "method_declar": ""}, {"params": [], "class_name": "OutputStreamWriter", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "flush", "method_description": "Flushes the stream.\n", "method_declar": ""}, {"params": [], "class_name": "OutputStreamWriter", "is_static": false, "return_value": {"return_name": [], "return_description": ["The historical name of this encoding, or possibly\n         null if the stream has been closed"], "return_type": ["String"]}, "method_name": "getEncoding", "method_description": "Returns the name of the character encoding being used by this stream.\n\n \n If the encoding has an historical name then that name is returned;\n otherwise the encoding's canonical name is returned.\n\n \n If this instance was created with the OutputStreamWriter(java.io.OutputStream, java.lang.String) constructor then the returned\n name, being unique for the encoding, may differ from the name passed to\n the constructor.  This method may return null if the stream has\n been closed. \nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["c"], "param_type": "int", "param_description": " int specifying a character to be written"}], "class_name": "OutputStreamWriter", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "write", "method_description": "Writes a single character.\n", "method_declar": ""}, {"params": [{"param_name": ["str"], "param_type": "String", "param_description": " A String"}, {"param_name": ["off"], "param_type": "int", "param_description": " Offset from which to start writing characters"}, {"param_name": ["len"], "param_type": "int", "param_description": " Number of characters to write"}], "class_name": "OutputStreamWriter", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "write", "method_description": "Writes a portion of a string.\n", "method_declar": ""}, {"params": [{"param_name": ["cbuf"], "param_type": "char[]", "param_description": " Buffer of characters"}, {"param_name": ["off"], "param_type": "int", "param_description": " Offset from which to start writing characters"}, {"param_name": ["len"], "param_type": "int", "param_description": " Number of characters to write"}], "class_name": "OutputStreamWriter", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "write", "method_description": "Writes a portion of an array of characters.\n", "method_declar": ""}], "class_name": "OutputStreamWriter", "Vars": null}