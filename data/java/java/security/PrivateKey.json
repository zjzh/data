{"package_name": "java.security", "subclass_list": ["DHPrivateKey", "DSAPrivateKey", "ECPrivateKey", "RSAMultiPrimePrivateCrtKey", "RSAPrivateCrtKey", "RSAPrivateKey", "DHPrivateKey", "DSAPrivateKey", "ECPrivateKey", "RSAMultiPrimePrivateCrtKey", "RSAPrivateCrtKey", "RSAPrivateKey"], "class_description": "A private key.\n The purpose of this interface is to group (and provide type safety\n for) all private key interfaces. Note: The specialized private key interfaces extend this interface.\n See, for example, the DSAPrivateKey interface in\n java.security.interfaces. Implementations should override the default destroy and\n isDestroyed methods from the\n Destroyable interface to enable\n sensitive key information to be destroyed, cleared, or in the case\n where such information is immutable, unreferenced.\n Finally, since PrivateKey is Serializable, implementations\n should also override\n ObjectOutputStream.writeObject(java.lang.Object)\n to prevent keys that have been destroyed from being serialized. ", "class_type": "interface", "typealias": [], "interface_list": ["Key", "Destroyable"], "class_inherit_list": [], "Methods": [], "class_name": "PrivateKey", "Vars": null}