{"package_name": "java.security", "subclass_list": [], "class_description": "A transparent stream that updates the associated message digest using\n the bits going through the stream. To complete the message digest computation, call one of the\n digest methods on the associated message\n digest after your calls to one of this digest output stream's\n write methods. It is possible to turn this stream on or off (see\n on). When it is on, a call to one of the\n write methods results in\n an update on the message digest.  But when it is off, the message\n digest is not updated. The default is for the stream to be on. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["FilterOutputStream"], "Methods": [{"params": [{"param_name": ["stream"], "param_type": "OutputStream", "param_description": " the output stream."}, {"param_name": ["digest"], "param_type": "MessageDigest", "param_description": " the message digest to associate with this stream."}], "class_name": "DigestOutputStream", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a digest output stream, using the specified output stream\n and message digest.\n", "method_declar": ""}, {"params": [], "class_name": "DigestOutputStream", "is_static": false, "return_value": {"return_name": [], "return_description": ["the message digest associated with this stream."], "return_type": ["MessageDigest"]}, "method_name": "getMessageDigest", "method_description": "Returns the message digest associated with this stream.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["on"], "param_type": "boolean", "param_description": " true to turn the digest function on, false to turn it\n off."}], "class_name": "DigestOutputStream", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "on", "method_description": "Turns the digest function on or off. The default is on.  When\n it is on, a call to one of the write methods results in an\n update on the message digest.  But when it is off, the message\n digest is not updated.\n", "method_declar": ""}, {"params": [{"param_name": ["digest"], "param_type": "MessageDigest", "param_description": " the message digest to be associated with this stream."}], "class_name": "DigestOutputStream", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "setMessageDigest", "method_description": "Associates the specified message digest with this stream.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "DigestOutputStream", "is_static": false, "return_value": {"return_name": [], "return_description": ["a string representation of the object."], "return_type": ["String"]}, "method_name": "toString", "method_description": "Prints a string representation of this digest output stream and\n its associated message digest object.\n", "method_declar": ""}, {"params": [{"param_name": ["b"], "param_type": "byte[]", "param_description": " the array containing the subarray to be used for updating\n and writing to the output stream."}, {"param_name": ["off"], "param_type": "int", "param_description": " the offset into b of the first byte to\n be updated and written."}, {"param_name": ["len"], "param_type": "int", "param_description": " the number of bytes of data to be updated and written\n from b, starting at offset off."}], "class_name": "DigestOutputStream", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "write", "method_description": "Updates the message digest (if the digest function is on) using\n the specified subarray, and in any case writes the subarray to\n the output stream. That is, if the digest function is on (see\n on), this method calls update\n on the message digest associated with this stream, passing it\n the subarray specifications. This method then writes the subarray\n bytes to the output stream, blocking until the bytes are actually\n written.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["b"], "param_type": "int", "param_description": " the byte to be used for updating and writing to the\n output stream."}], "class_name": "DigestOutputStream", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "write", "method_description": "Updates the message digest (if the digest function is on) using\n the specified byte, and in any case writes the byte\n to the output stream. That is, if the digest function is on\n (see on), this method calls\n update on the message digest associated with this\n stream, passing it the byte b. This method then\n writes the byte to the output stream, blocking until the byte\n is actually written.\nSee also:\n", "method_declar": ""}], "class_name": "DigestOutputStream", "Vars": null}