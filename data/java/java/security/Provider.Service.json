{"package_name": "java.security", "subclass_list": [], "class_description": "The description of a security service. It encapsulates the properties\n of a service and contains a factory method to obtain new implementation\n instances of this service. Each service has a provider that offers the service, a type,\n an algorithm name, and the name of the class that implements the\n service. Optionally, it also includes a list of alternate algorithm\n names for this service (aliases) and attributes, which are a map of\n (name, value) String pairs. This class defines the methods supportsParameter() and newInstance()\n which are used by the Java security framework when it searches for\n suitable services and instantiates them. The valid arguments to those\n methods depend on the type of service. For the service types defined\n within Java SE, see the\n \n Java Cryptography Architecture API Specification & Reference \n for the valid values.\n Note that components outside of Java SE can define additional types of\n services and their behavior. Instances of this class are immutable. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["provider"], "param_type": "Provider", "param_description": " the provider that offers this service"}, {"param_name": ["type"], "param_type": "String", "param_description": " the type of this service"}, {"param_name": ["algorithm"], "param_type": "String", "param_description": " the algorithm name"}, {"param_name": ["className"], "param_type": "String", "param_description": " the name of the class implementing this service"}, {"param_name": ["aliases"], "param_type": "List", "param_description": " List of aliases or null if algorithm has no aliases"}, {"param_name": ["attributes"], "param_type": "Map", "param_description": " Map of attributes or null if this implementation\n                   has no attributes"}], "class_name": "Provider.Service", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Construct a new service.\n", "method_declar": ""}, {"params": [], "class_name": "Provider.Service", "is_static": false, "return_value": {"return_name": [], "return_description": ["the algorithm of this service"], "return_type": ["String"]}, "method_name": "getAlgorithm", "method_description": "Return the name of the algorithm of this service. For example,\n SHA-1.\n", "method_declar": ""}, {"params": [{"param_name": ["name"], "param_type": "String", "param_description": " the name of the requested attribute"}], "class_name": "Provider.Service", "is_static": false, "return_value": {"return_name": [], "return_description": ["the value of the specified attribute or null if the\n         attribute is not present"], "return_type": ["String"]}, "method_name": "getAttribute", "method_description": "Return the value of the specified attribute or null if this\n attribute is not set for this Service.\n", "method_declar": ""}, {"params": [], "class_name": "Provider.Service", "is_static": false, "return_value": {"return_name": [], "return_description": ["the name of the class implementing this service"], "return_type": ["String"]}, "method_name": "getClassName", "method_description": "Return the name of the class implementing this service.\n", "method_declar": ""}, {"params": [], "class_name": "Provider.Service", "is_static": false, "return_value": {"return_name": [], "return_description": ["the Provider of this service"], "return_type": ["Provider"]}, "method_name": "getProvider", "method_description": "Return the Provider of this service.\n", "method_declar": ""}, {"params": [], "class_name": "Provider.Service", "is_static": false, "return_value": {"return_name": [], "return_description": ["the type of this service"], "return_type": ["String"]}, "method_name": "getType", "method_description": "Get the type of this service. For example, MessageDigest.\n", "method_declar": ""}, {"params": [{"param_name": ["constructorParameter"], "param_type": "Object", "param_description": " the value to pass to the constructor,\n or null if this type of service does not use a constructorParameter."}], "class_name": "Provider.Service", "is_static": false, "return_value": {"return_name": [], "return_description": ["a new implementation of this service"], "return_type": ["Object"]}, "method_name": "newInstance", "method_description": "Return a new instance of the implementation described by this\n service. The security provider framework uses this method to\n construct implementations. Applications will typically not need\n to call it.\n\n \nThe default implementation uses reflection to invoke the\n standard constructor for this type of service.\n Security providers can override this method to implement\n instantiation in a different way.\n For details and the values of constructorParameter that are\n valid for the various types of services see the\n \n Java Cryptography Architecture API Specification &\n Reference.\n", "method_declar": ""}, {"params": [{"param_name": ["parameter"], "param_type": "Object", "param_description": " the parameter to test"}], "class_name": "Provider.Service", "is_static": false, "return_value": {"return_name": [], "return_description": ["false if this this service cannot use the specified\n parameter; true if it can possibly use the parameter"], "return_type": ["boolean"]}, "method_name": "supportsParameter", "method_description": "Test whether this Service can use the specified parameter.\n Returns false if this service cannot use the parameter. Returns\n true if this service can use the parameter, if a fast test is\n infeasible, or if the status is unknown.\n\n \nThe security provider framework uses this method with\n some types of services to quickly exclude non-matching\n implementations for consideration.\n Applications will typically not need to call it.\n\n \nFor details and the values of parameter that are valid for the\n various types of services see the top of this class and the\n \n Java Cryptography Architecture API Specification &\n Reference.\n Security providers can override it to implement their own test.\n", "method_declar": ""}, {"params": [], "class_name": "Provider.Service", "is_static": false, "return_value": {"return_name": [], "return_description": ["a String representation of this service."], "return_type": ["String"]}, "method_name": "toString", "method_description": "Return a String representation of this service.\n", "method_declar": ""}], "class_name": "Provider.Service", "Vars": null}