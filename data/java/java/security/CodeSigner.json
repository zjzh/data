{"package_name": "java.security", "subclass_list": [], "class_description": "This class encapsulates information about a code signer.\n It is immutable. ", "class_type": "class", "typealias": [], "interface_list": ["Serializable"], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["signerCertPath"], "param_type": "CertPath", "param_description": " The signer's certificate path.\n                       It must not be null."}, {"param_name": ["timestamp"], "param_type": "Timestamp", "param_description": " A signature timestamp.\n                  If null then no timestamp was generated\n                  for the signature."}], "class_name": "CodeSigner", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a CodeSigner object.\n", "method_declar": ""}, {"params": [{"param_name": ["obj"], "param_type": "Object", "param_description": " the object to test for equality with this object."}], "class_name": "CodeSigner", "is_static": false, "return_value": {"return_name": [], "return_description": ["true if the objects are considered equal, false otherwise."], "return_type": ["boolean"]}, "method_name": "equals", "method_description": "Tests for equality between the specified object and this\n code signer. Two code signers are considered equal if their\n signer certificate paths are equal and if their timestamps are equal,\n if present in both.\n", "method_declar": ""}, {"params": [], "class_name": "CodeSigner", "is_static": false, "return_value": {"return_name": [], "return_description": ["A certificate path."], "return_type": ["CertPath"]}, "method_name": "getSignerCertPath", "method_description": "Returns the signer's certificate path.\n", "method_declar": ""}, {"params": [], "class_name": "CodeSigner", "is_static": false, "return_value": {"return_name": [], "return_description": ["The timestamp or null if none is present."], "return_type": ["Timestamp"]}, "method_name": "getTimestamp", "method_description": "Returns the signature timestamp.\n", "method_declar": ""}, {"params": [], "class_name": "CodeSigner", "is_static": false, "return_value": {"return_name": [], "return_description": ["a hash code value for this code signer."], "return_type": ["int"]}, "method_name": "hashCode", "method_description": "Returns the hash code value for this code signer.\n The hash code is generated using the signer's certificate path and the\n timestamp, if present.\n", "method_declar": ""}, {"params": [], "class_name": "CodeSigner", "is_static": false, "return_value": {"return_name": [], "return_description": ["A string comprising the signer's certificate and a timestamp,\n         if present."], "return_type": ["String"]}, "method_name": "toString", "method_description": "Returns a string describing this code signer.\n", "method_declar": ""}], "class_name": "CodeSigner", "Vars": null}