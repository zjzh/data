{"package_name": "java.security.cert", "subclass_list": [], "class_description": "A class for building certification paths (also known as certificate chains). This class uses a provider-based architecture.\n To create a CertPathBuilder, call\n one of the static getInstance methods, passing in the\n algorithm name of the CertPathBuilder desired and optionally\n the name of the provider desired. Once a CertPathBuilder object has been created, certification\n paths can be constructed by calling the build method and\n passing it an algorithm-specific set of parameters. If successful, the\n result (including the CertPath that was built) is returned\n in an object that implements the CertPathBuilderResult\n interface. The getRevocationChecker() method allows an application to specify\n additional algorithm-specific parameters and options used by the\n CertPathBuilder when checking the revocation status of certificates.\n Here is an example demonstrating how it is used with the PKIX algorithm: Android provides the following CertPathBuilder algorithms: Concurrent Access The static methods of this class are guaranteed to be thread-safe.\n Multiple threads may concurrently invoke the static methods defined in\n this class with no ill effects. However, this is not true for the non-static methods defined by this class.\n Unless otherwise documented by a specific provider, threads that need to\n access a single CertPathBuilder instance concurrently should\n synchronize amongst themselves and provide the necessary locking. Multiple\n threads each manipulating a different CertPathBuilder instance\n need not synchronize. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [], "class_name": "CertPathBuilder", "Vars": null}