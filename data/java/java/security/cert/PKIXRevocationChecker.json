{"package_name": "java.security.cert", "subclass_list": [], "class_description": "A PKIXCertPathChecker for checking the revocation status of\n certificates with the PKIX algorithm. A PKIXRevocationChecker checks the revocation status of\n certificates with the Online Certificate Status Protocol (OCSP) or\n Certificate Revocation Lists (CRLs). OCSP is described in RFC 2560 and\n is a network protocol for determining the status of a certificate. A CRL\n is a time-stamped list identifying revoked certificates, and RFC 5280\n describes an algorithm for determining the revocation status of certificates\n using CRLs. Each PKIXRevocationChecker must be able to check the revocation\n status of certificates with OCSP and CRLs. By default, OCSP is the\n preferred mechanism for checking revocation status, with CRLs as the\n fallback mechanism. However, this preference can be switched to CRLs with\n the Option#PREFER_CRLS option. In addition, the fallback\n mechanism can be disabled with the Option#NO_FALLBACK\n option. A PKIXRevocationChecker is obtained by calling the\n CertPathValidator#getRevocationChecker method\n of a PKIX CertPathValidator. Additional parameters and options\n specific to revocation can be set (by calling the\n setOcspResponder method for instance). The\n PKIXRevocationChecker is added to a PKIXParameters object\n using the PKIXParameters#addCertPathChecker\n or PKIXParameters#setCertPathCheckers method,\n and then the PKIXParameters is passed along with the CertPath\n to be validated to the CertPathValidator#validate method\n of a PKIX CertPathValidator. When supplying a revocation checker in\n this manner, it will be used to check revocation irrespective of the setting\n of the PKIXParameters#isRevocationEnabled flag.\n Similarly, a PKIXRevocationChecker may be added to a\n PKIXBuilderParameters object for use with a PKIX\n CertPathBuilder. Note that when a PKIXRevocationChecker is added to\n PKIXParameters, it clones the PKIXRevocationChecker;\n thus any subsequent modifications to the PKIXRevocationChecker\n have no effect. Any parameter that is not set (or is set to null) will be set to\n the default value for that parameter. Concurrent Access Unless otherwise specified, the methods defined in this class are not\n thread-safe. Multiple threads that need to access a single object\n concurrently should synchronize amongst themselves and provide the\n necessary locking. Multiple threads each manipulating separate objects\n need not synchronize. See RFC 2560: X.509 Internet Public Key Infrastructure Online Certificate Status Protocol -\n OCSP, RFC 5280: Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation\n List (CRL) Profile (Android note: this paragraph was originally in a malformed \"see\" tag below,\n moved here for correct construction of the docs). ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["PKIXCertPathChecker"], "Methods": [], "class_name": "PKIXRevocationChecker", "Vars": null}