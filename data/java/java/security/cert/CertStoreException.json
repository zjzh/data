{"package_name": "java.security.cert", "subclass_list": [], "class_description": "An exception indicating one of a variety of problems retrieving\n certificates and CRLs from a CertStore. A CertStoreException provides support for wrapping\n exceptions. The getCause method returns the throwable,\n if any, that caused this exception to be thrown. Concurrent Access Unless otherwise specified, the methods defined in this class are not\n thread-safe. Multiple threads that need to access a single\n object concurrently should synchronize amongst themselves and\n provide the necessary locking. Multiple threads each manipulating\n separate objects need not synchronize. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["GeneralSecurityException"], "Methods": [{"params": [], "class_name": "CertStoreException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a CertStoreException with null as\n its detail message.\n", "method_declar": ""}, {"params": [{"param_name": ["msg"], "param_type": "String", "param_description": " the detail message"}], "class_name": "CertStoreException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a CertStoreException with the given detail\n message. A detail message is a String that describes this\n particular exception.\n", "method_declar": ""}, {"params": [{"param_name": ["cause"], "param_type": "Throwable", "param_description": " the cause (which is saved for later retrieval by the\n getCause() method). (A null value is\n permitted, and indicates that the cause is nonexistent or unknown.)"}], "class_name": "CertStoreException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a CertStoreException that wraps the specified\n throwable. This allows any exception to be converted into a\n CertStoreException, while retaining information about the\n cause, which may be useful for debugging. The detail message is\n set to (cause==null ? null : cause.toString()) (which\n typically contains the class and detail message of cause).\n", "method_declar": ""}, {"params": [{"param_name": ["msg"], "param_type": "String", "param_description": " the detail message"}, {"param_name": ["cause"], "param_type": "Throwable", "param_description": " the cause (which is saved for later retrieval by the\n getCause() method). (A null value is\n permitted, and indicates that the cause is nonexistent or unknown.)"}], "class_name": "CertStoreException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a CertStoreException with the specified detail\n message and cause.\n", "method_declar": ""}], "class_name": "CertStoreException", "Vars": null}