{"package_name": "java.security.cert", "subclass_list": [], "class_description": "The Service Provider Interface (SPI)\n for the CertStore class. All CertStore\n implementations must include a class (the SPI class) that extends\n this class (CertStoreSpi), provides a constructor with\n a single argument of type CertStoreParameters, and implements\n all of its methods. In general, instances of this class should only be\n accessed through the CertStore class.\n For details, see the Java Cryptography Architecture. Concurrent Access The public methods of all CertStoreSpi objects must be\n thread-safe. That is, multiple threads may concurrently invoke these\n methods on a single CertStoreSpi object (or more than one)\n with no ill effects. This allows a CertPathBuilder to search\n for a CRL while simultaneously searching for further certificates, for\n instance. Simple CertStoreSpi implementations will probably ensure\n thread safety by adding a synchronized keyword to their\n engineGetCertificates and engineGetCRLs methods.\n More sophisticated ones may allow truly concurrent access. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["params"], "param_type": "CertStoreParameters", "param_description": " the initialization parameters (may be null)"}], "class_name": "CertStoreSpi", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "The sole constructor.\n", "method_declar": ""}], "class_name": "CertStoreSpi", "Vars": null}