{"package_name": "java.security.cert", "subclass_list": [], "class_description": "A class for retrieving Certificates and CRLs\n from a repository. This class uses a provider-based architecture.\n To create a CertStore, call one of the static\n getInstance methods, passing in the type of\n CertStore desired, any applicable initialization parameters\n and optionally the name of the provider desired. Once the CertStore has been created, it can be used to\n retrieve Certificates and CRLs by calling its\n getCertificates and\n getCRLs methods. Unlike a KeyStore, which provides access\n to a cache of private keys and trusted certificates, a\n CertStore is designed to provide access to a potentially\n vast repository of untrusted certificates and CRLs. For example, an LDAP\n implementation of CertStore provides access to certificates\n and CRLs stored in one or more directories using the LDAP protocol and the\n schema as defined in the RFC service attribute. Android provides the following CertStore types: Concurrent Access All public methods of CertStore objects must be thread-safe.\n That is, multiple threads may concurrently invoke these methods on a\n single CertStore object (or more than one) with no\n ill effects. This allows a CertPathBuilder to search for a\n CRL while simultaneously searching for further certificates, for instance. The static methods of this class are also guaranteed to be thread-safe.\n Multiple threads may concurrently invoke the static methods defined in\n this class with no ill effects. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [], "class_name": "CertStore", "Vars": null}