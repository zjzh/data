{"package_name": "java.security", "subclass_list": ["AllPermission", "AuthPermission", "BasicPermission", "FilePermission", "LinkPermission", "LoggingPermission", "NetPermission", "Permission", "PrivateCredentialPermission", "PropertyPermission", "ReflectPermission", "RuntimePermission", "SQLPermission", "SSLPermission", "SecurityPermission", "SerializablePermission", "SocketPermission", "UnresolvedPermission", "AllPermission", "AuthPermission", "BasicPermission", "FilePermission", "LinkPermission", "LoggingPermission", "NetPermission", "Permission", "PrivateCredentialPermission", "PropertyPermission", "ReflectPermission", "RuntimePermission", "SQLPermission", "SSLPermission", "SecurityPermission", "SerializablePermission", "SocketPermission", "UnresolvedPermission"], "class_description": " This interface represents a guard, which is an object that is used\n to protect access to another object. This interface contains a single method, checkGuard,\n with a single object argument. checkGuard is\n invoked (by the GuardedObject getObject method)\n to determine whether or not to allow access to the object. ", "class_type": "interface", "typealias": [], "interface_list": [""], "class_inherit_list": [], "Methods": [], "class_name": "Guard", "Vars": null}