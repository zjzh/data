{"package_name": "java.security", "subclass_list": ["IdentityScope", "Signer", "IdentityScope", "Signer"], "class_description": " This class was deprecated\n      in API level 3.\n    This class is no longer used. Its functionality has been\n replaced by java.security.KeyStore, the\n java.security.cert package, and\n java.security.Principal.  This class represents identities: real-world objects such as people,\n companies or organizations whose identities can be authenticated using\n their public keys. Identities may also be more abstract (or concrete)\n constructs, such as daemon threads or smart cards. All Identity objects have a name and a public key. Names are\n immutable. Identities may also be scoped. That is, if an Identity is\n specified to have a particular scope, then the name and public\n key of the Identity are unique within that scope. An Identity also has a set of certificates (all certifying its own\n public key). The Principal names specified in these certificates need\n not be the same, only the key. An Identity can be subclassed, to include postal and email addresses,\n telephone numbers, images of faces and logos, and so on. ", "class_type": "class", "typealias": [], "interface_list": ["Principal", "Serializable"], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["name"], "param_type": "String", "param_description": " the identity name."}, {"param_name": ["scope"], "param_type": "IdentityScope", "param_description": " the scope of the identity."}], "class_name": "Identity", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an identity with the specified name and scope.\n", "method_declar": ""}, {"params": [{"param_name": ["name"], "param_type": "String", "param_description": " the identity name."}], "class_name": "Identity", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an identity with the specified name and no scope.\n", "method_declar": ""}, {"params": [{"param_name": ["certificate"], "param_type": "Certificate", "param_description": " the certificate to be added."}], "class_name": "Identity", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "addCertificate", "method_description": "Adds a certificate for this identity. If the identity has a public\n key, the public key in the certificate must be the same, and if\n the identity does not have a public key, the identity's\n public key is set to be that specified in the certificate.\n\n \nFirst, if there is a security manager, its checkSecurityAccess\n method is called with \"addIdentityCertificate\"\n as its argument to see if it's ok to add a certificate.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "Identity", "is_static": false, "return_value": {"return_name": [], "return_description": ["a copy of all the certificates for this identity."], "return_type": ["Certificate[]"]}, "method_name": "certificates", "method_description": "Returns a copy of all the certificates for this identity.\n", "method_declar": ""}, {"params": [{"param_name": ["identity"], "param_type": "Object", "param_description": " the object to test for equality with this identity."}], "class_name": "Identity", "is_static": false, "return_value": {"return_name": [], "return_description": ["true if the objects are considered equal, false otherwise."], "return_type": ["boolean"]}, "method_name": "equals", "method_description": "Tests for equality between the specified object and this identity.\n This first tests to see if the entities actually refer to the same\n object, in which case it returns true. Next, it checks to see if\n the entities have the same name and the same scope. If they do,\n the method returns true. Otherwise, it calls\n identityEquals, which subclasses should\n override.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "Identity", "is_static": false, "return_value": {"return_name": [], "return_description": ["general information about this identity."], "return_type": ["String"]}, "method_name": "getInfo", "method_description": "Returns general information previously specified for this identity.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "Identity", "is_static": false, "return_value": {"return_name": [], "return_description": ["the name of this identity."], "return_type": ["String"]}, "method_name": "getName", "method_description": "Returns this identity's name.\n", "method_declar": ""}, {"params": [], "class_name": "Identity", "is_static": false, "return_value": {"return_name": [], "return_description": ["the public key for this identity."], "return_type": ["PublicKey"]}, "method_name": "getPublicKey", "method_description": "Returns this identity's public key.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "Identity", "is_static": false, "return_value": {"return_name": [], "return_description": ["the scope of this identity."], "return_type": ["IdentityScope"]}, "method_name": "getScope", "method_description": "Returns this identity's scope.\n", "method_declar": ""}, {"params": [], "class_name": "Identity", "is_static": false, "return_value": {"return_name": [], "return_description": ["a hashcode for this identity."], "return_type": ["int"]}, "method_name": "hashCode", "method_description": "Returns a hashcode for this identity.\n", "method_declar": ""}, {"params": [{"param_name": ["certificate"], "param_type": "Certificate", "param_description": " the certificate to be removed."}], "class_name": "Identity", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "removeCertificate", "method_description": "Removes a certificate from this identity.\n\n \nFirst, if there is a security manager, its checkSecurityAccess\n method is called with \"removeIdentityCertificate\"\n as its argument to see if it's ok to remove a certificate.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["info"], "param_type": "String", "param_description": " the information string."}], "class_name": "Identity", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "setInfo", "method_description": "Specifies a general information string for this identity.\n\n \nFirst, if there is a security manager, its checkSecurityAccess\n method is called with \"setIdentityInfo\"\n as its argument to see if it's ok to specify the information string.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["key"], "param_type": "PublicKey", "param_description": " the public key for this identity."}], "class_name": "Identity", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "setPublicKey", "method_description": "Sets this identity's public key. The old key and all of this\n identity's certificates are removed by this operation.\n\n \nFirst, if there is a security manager, its checkSecurityAccess\n method is called with \"setIdentityPublicKey\"\n as its argument to see if it's ok to set the public key.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "Identity", "is_static": false, "return_value": {"return_name": [], "return_description": ["information about this identity, such as its name and the\n name of its scope (if any)."], "return_type": ["String"]}, "method_name": "toString", "method_description": "Returns a short string describing this identity, telling its\n name and its scope (if any).\n\n \nFirst, if there is a security manager, its checkSecurityAccess\n method is called with \"printIdentity\"\n as its argument to see if it's ok to return the string.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["detailed"], "param_type": "boolean", "param_description": " whether or not to provide detailed information."}], "class_name": "Identity", "is_static": false, "return_value": {"return_name": [], "return_description": ["information about this identity. If detailed\n is true, then this method returns more information than that\n provided by the toString method without any arguments."], "return_type": ["String"]}, "method_name": "toString", "method_description": "Returns a string representation of this identity, with\n optionally more details than that provided by the\n toString method without any arguments.\n\n \nFirst, if there is a security manager, its checkSecurityAccess\n method is called with \"printIdentity\"\n as its argument to see if it's ok to return the string.\nSee also:\n", "method_declar": ""}], "class_name": "Identity", "Vars": null}