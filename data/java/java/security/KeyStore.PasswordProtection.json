{"package_name": "java.security", "subclass_list": [], "class_description": "A password-based implementation of ProtectionParameter. ", "class_type": "class", "typealias": [], "interface_list": ["KeyStore.ProtectionParameter", "Destroyable"], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["password"], "param_type": "char[]", "param_description": " the password, which may be null"}], "class_name": "KeyStore.PasswordProtection", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a password parameter.\n\n \n The specified password is cloned before it is stored\n in the new PasswordProtection object.\n", "method_declar": ""}, {"params": [{"param_name": ["password"], "param_type": "char[]", "param_description": " the password, which may be null"}, {"param_name": ["protectionAlgorithm"], "param_type": "String", "param_description": " the encryption algorithm name, for\n     example, PBEWithHmacSHA256AndAES_256.\n     See the Cipher section in the \n Java Cryptography Architecture Standard Algorithm Name\n Documentation\n     for information about standard encryption algorithm names."}, {"param_name": ["protectionParameters"], "param_type": "AlgorithmParameterSpec", "param_description": " the encryption algorithm parameter\n     specification, which may be null"}], "class_name": "KeyStore.PasswordProtection", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a password parameter and specifies the protection algorithm\n and associated parameters to use when encrypting a keystore entry.\n \n\n The specified password is cloned before it is stored in the\n new PasswordProtection object.\n", "method_declar": ""}, {"params": [], "class_name": "KeyStore.PasswordProtection", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "destroy", "method_description": "Clears the password.\n", "method_declar": ""}, {"params": [], "class_name": "KeyStore.PasswordProtection", "is_static": false, "return_value": {"return_name": [], "return_description": ["the password, which may be null"], "return_type": ["char[]"]}, "method_name": "getPassword", "method_description": "Gets the password.\n\n \nNote that this method returns a reference to the password.\n If a clone of the array is created it is the caller's\n responsibility to zero out the password information\n after it is no longer needed.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "KeyStore.PasswordProtection", "is_static": false, "return_value": {"return_name": [], "return_description": ["the algorithm name, or null if none was set"], "return_type": ["String"]}, "method_name": "getProtectionAlgorithm", "method_description": "Gets the name of the protection algorithm.\n If none was set then the keystore provider will use its default\n protection algorithm. The name of the default protection algorithm\n for a given keystore type is set using the\n 'keystore.<type>.keyProtectionAlgorithm' security property.\n For example, the\n keystore.PKCS12.keyProtectionAlgorithm property stores the\n name of the default key protection algorithm used for PKCS12\n keystores. If the security property is not set, an\n implementation-specific algorithm will be used.\n", "method_declar": ""}, {"params": [], "class_name": "KeyStore.PasswordProtection", "is_static": false, "return_value": {"return_name": [], "return_description": ["the algorithm parameter specification, or null,\n     if none was set"], "return_type": ["AlgorithmParameterSpec"]}, "method_name": "getProtectionParameters", "method_description": "Gets the parameters supplied for the protection algorithm.\n", "method_declar": ""}, {"params": [], "class_name": "KeyStore.PasswordProtection", "is_static": false, "return_value": {"return_name": [], "return_description": ["true if the password has been cleared, false otherwise"], "return_type": ["boolean"]}, "method_name": "isDestroyed", "method_description": "Determines if password has been cleared.\n", "method_declar": ""}], "class_name": "KeyStore.PasswordProtection", "Vars": null}