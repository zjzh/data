{"package_name": "java.security", "subclass_list": [], "class_description": "This class defines the Service Provider Interface (SPI)\n for the Policy class.\n All the abstract methods in this class must be implemented by each\n service provider who wishes to supply a Policy implementation. Subclass implementations of this abstract class must provide\n a public constructor that takes a Policy.Parameters\n object as an input parameter.  This constructor also must throw\n an IllegalArgumentException if it does not understand the\n Policy.Parameters input. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [{"params": [], "class_name": "PolicySpi", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "\n", "method_declar": ""}], "class_name": "PolicySpi", "Vars": null}