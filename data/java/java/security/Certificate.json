{"package_name": "java.security", "subclass_list": [], "class_description": " This interface was deprecated\n      in API level 3.\n    A new certificate handling package is created in the Java platform.\n             This Certificate interface is entirely deprecated and\n             is here to allow for a smooth transition to the new\n             package.  This is an interface of abstract methods for managing a\n variety of identity certificates.\n An identity certificate is a guarantee by a principal that\n a public key is that of another principal.  (A principal represents\n an entity such as an individual user, a group, or a corporation.) In particular, this interface is intended to be a common\n abstraction for constructs that have different formats but\n important common uses.  For example, different types of\n certificates, such as X.509 certificates and PGP certificates,\n share general certificate functionality (the need to encode and\n decode certificates) and some types of information, such as a\n public key, the principal whose key it is, and the guarantor\n guaranteeing that the public key is that of the specified\n principal. So an implementation of X.509 certificates and an\n implementation of PGP certificates can both utilize the Certificate\n interface, even though their formats and additional types and\n amounts of information stored are different. Important: This interface is useful for cataloging and\n grouping objects sharing certain common uses. It does not have any\n semantics of its own. In particular, a Certificate object does not\n make any statement as to the validity of the binding. It is\n the duty of the application implementing this interface to verify\n the certificate and satisfy itself of its validity. ", "class_type": "interface", "typealias": [], "interface_list": [""], "class_inherit_list": [], "Methods": [], "class_name": "Certificate", "Vars": null}