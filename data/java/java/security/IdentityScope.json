{"package_name": "java.security", "subclass_list": [], "class_description": " This class was deprecated\n      in API level 3.\n    This class is no longer used. Its functionality has been\n replaced by java.security.KeyStore, the\n java.security.cert package, and\n java.security.Principal.  This class represents a scope for identities. It is an Identity\n itself, and therefore has a name and can have a scope. It can also\n optionally have a public key and associated certificates. An IdentityScope can contain Identity objects of all kinds, including\n Signers. All types of Identity objects can be retrieved, added, and\n removed using the same methods. Note that it is possible, and in fact\n expected, that different types of identity scopes will\n apply different policies for their various operations on the\n various types of Identities. There is a one-to-one mapping between keys and identities, and\n there can only be one copy of one key per scope. For example, suppose\n Acme Software, Inc is a software publisher known to a user.\n Suppose it is an Identity, that is, it has a public key, and a set of\n associated certificates. It is named in the scope using the name\n \"Acme Software\". No other named Identity in the scope has the same\n public  key. Of course, none has the same name as well. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Identity"], "Methods": [{"params": [{"param_name": ["name"], "param_type": "String", "param_description": " the scope name."}], "class_name": "IdentityScope", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new identity scope with the specified name.\n", "method_declar": ""}, {"params": [{"param_name": ["name"], "param_type": "String", "param_description": " the scope name."}, {"param_name": ["scope"], "param_type": "IdentityScope", "param_description": " the scope for the new identity scope."}], "class_name": "IdentityScope", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a new identity scope with the specified name and scope.\n", "method_declar": ""}, {"params": [{"param_name": ["principal"], "param_type": "Principal", "param_description": " the principal corresponding to the identity\n to be retrieved."}], "class_name": "IdentityScope", "is_static": false, "return_value": {"return_name": [], "return_description": ["the identity whose name is the same as that of the\n principal, or null if there are no identities of the same name\n in this scope."], "return_type": ["Identity"]}, "method_name": "getIdentity", "method_description": "Retrieves the identity whose name is the same as that of the\n specified principal. (Note: Identity implements Principal.)\n", "method_declar": ""}, {"params": [], "class_name": "IdentityScope", "is_static": true, "return_value": {"return_name": [], "return_description": ["the system's identity scope, or null if none has been\n         set."], "return_type": ["IdentityScope"]}, "method_name": "getSystemScope", "method_description": "Returns the system's identity scope.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "IdentityScope", "is_static": false, "return_value": {"return_name": [], "return_description": ["a string representation of this identity scope."], "return_type": ["String"]}, "method_name": "toString", "method_description": "Returns a string representation of this identity scope, including\n its name, its scope name, and the number of identities in this\n identity scope.\n", "method_declar": ""}], "class_name": "IdentityScope", "Vars": null}