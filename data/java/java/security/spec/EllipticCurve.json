{"package_name": "java.security.spec", "subclass_list": [], "class_description": "This immutable class holds the necessary values needed to represent\n an elliptic curve. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["field"], "param_type": "ECField", "param_description": " the finite field that this elliptic curve is over."}, {"param_name": ["a"], "param_type": "BigInteger", "param_description": " the first coefficient of this elliptic curve."}, {"param_name": ["b"], "param_type": "BigInteger", "param_description": " the second coefficient of this elliptic curve."}], "class_name": "EllipticCurve", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates an elliptic curve with the specified elliptic field\n field and the coefficients a and\n b.\n", "method_declar": ""}, {"params": [{"param_name": ["field"], "param_type": "ECField", "param_description": " the finite field that this elliptic curve is over."}, {"param_name": ["a"], "param_type": "BigInteger", "param_description": " the first coefficient of this elliptic curve."}, {"param_name": ["b"], "param_type": "BigInteger", "param_description": " the second coefficient of this elliptic curve."}, {"param_name": ["seed"], "param_type": "byte[]", "param_description": " the bytes used during curve generation for later\n validation. Contents of this array are copied to protect against\n subsequent modification."}], "class_name": "EllipticCurve", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates an elliptic curve with the specified elliptic field\n field, the coefficients a and\n b, and the seed used for curve generation.\n", "method_declar": ""}, {"params": [{"param_name": ["obj"], "param_type": "Object", "param_description": " the object to be compared."}], "class_name": "EllipticCurve", "is_static": false, "return_value": {"return_name": [], "return_description": ["true if obj is an instance of\n EllipticCurve and the field, A, and B match, false otherwise."], "return_type": ["boolean"]}, "method_name": "equals", "method_description": "Compares this elliptic curve for equality with the\n specified object.\n", "method_declar": ""}, {"params": [], "class_name": "EllipticCurve", "is_static": false, "return_value": {"return_name": [], "return_description": ["the first coefficient a."], "return_type": ["BigInteger"]}, "method_name": "getA", "method_description": "Returns the first coefficient a of the\n elliptic curve.\n", "method_declar": ""}, {"params": [], "class_name": "EllipticCurve", "is_static": false, "return_value": {"return_name": [], "return_description": ["the second coefficient b."], "return_type": ["BigInteger"]}, "method_name": "getB", "method_description": "Returns the second coefficient b of the\n elliptic curve.\n", "method_declar": ""}, {"params": [], "class_name": "EllipticCurve", "is_static": false, "return_value": {"return_name": [], "return_description": ["the field field that this curve\n is over."], "return_type": ["ECField"]}, "method_name": "getField", "method_description": "Returns the finite field field that this\n elliptic curve is over.\n", "method_declar": ""}, {"params": [], "class_name": "EllipticCurve", "is_static": false, "return_value": {"return_name": [], "return_description": ["the seeding bytes seed. A new\n array is returned each time this method is called."], "return_type": ["byte[]"]}, "method_name": "getSeed", "method_description": "Returns the seeding bytes seed used\n during curve generation. May be null if not specified.\n", "method_declar": ""}, {"params": [], "class_name": "EllipticCurve", "is_static": false, "return_value": {"return_name": [], "return_description": ["a hash code value computed from the hash codes of the field, A,\n and B, as follows:\n (field.hashCode() << 6) + (a.hashCode() << 4) + (b.hashCode() << 2)"], "return_type": ["int"]}, "method_name": "hashCode", "method_description": "Returns a hash code value for this elliptic curve.\n", "method_declar": ""}], "class_name": "EllipticCurve", "Vars": null}