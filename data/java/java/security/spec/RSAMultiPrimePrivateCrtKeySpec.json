{"package_name": "java.security.spec", "subclass_list": [], "class_description": "This class specifies an RSA multi-prime private key, as defined in the\n PKCS#1 v2.1, using the Chinese Remainder Theorem (CRT) information\n values for efficiency. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["RSAPrivateKeySpec"], "Methods": [{"params": [{"param_name": ["modulus"], "param_type": "BigInteger", "param_description": " the modulus n."}, {"param_name": ["publicExponent"], "param_type": "BigInteger", "param_description": " the public exponent e."}, {"param_name": ["privateExponent"], "param_type": "BigInteger", "param_description": " the private exponent d."}, {"param_name": ["primeP"], "param_type": "BigInteger", "param_description": " the prime factor p of n."}, {"param_name": ["primeQ"], "param_type": "BigInteger", "param_description": " the prime factor q of n."}, {"param_name": ["primeExponentP"], "param_type": "BigInteger", "param_description": " this is d mod (p-1)."}, {"param_name": ["primeExponentQ"], "param_type": "BigInteger", "param_description": " this is d mod (q-1)."}, {"param_name": ["crtCoefficient"], "param_type": "BigInteger", "param_description": " the Chinese Remainder Theorem\n coefficient q-1 mod p."}, {"param_name": ["otherPrimeInfo"], "param_type": "RSAOtherPrimeInfo[]", "param_description": " triplets of the rest of primes, null can be\n specified if there are only two prime factors (p and q)."}], "class_name": "RSAMultiPrimePrivateCrtKeySpec", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a new RSAMultiPrimePrivateCrtKeySpec\n given the modulus, publicExponent, privateExponent,\n primeP, primeQ, primeExponentP, primeExponentQ,\n crtCoefficient, and otherPrimeInfo as defined in PKCS#1 v2.1.\n\n \nNote that the contents of otherPrimeInfo\n are copied to protect against subsequent modification when\n constructing this object.\n", "method_declar": ""}, {"params": [], "class_name": "RSAMultiPrimePrivateCrtKeySpec", "is_static": false, "return_value": {"return_name": [], "return_description": ["the crtCoefficient."], "return_type": ["BigInteger"]}, "method_name": "getCrtCoefficient", "method_description": "Returns the crtCoefficient.\n", "method_declar": ""}, {"params": [], "class_name": "RSAMultiPrimePrivateCrtKeySpec", "is_static": false, "return_value": {"return_name": [], "return_description": ["the otherPrimeInfo. Returns a new array each\n time this method is called."], "return_type": ["RSAOtherPrimeInfo[]"]}, "method_name": "getOtherPrimeInfo", "method_description": "Returns a copy of the otherPrimeInfo or null if there are\n only two prime factors (p and q).\n", "method_declar": ""}, {"params": [], "class_name": "RSAMultiPrimePrivateCrtKeySpec", "is_static": false, "return_value": {"return_name": [], "return_description": ["the primeExponentP."], "return_type": ["BigInteger"]}, "method_name": "getPrimeExponentP", "method_description": "Returns the primeExponentP.\n", "method_declar": ""}, {"params": [], "class_name": "RSAMultiPrimePrivateCrtKeySpec", "is_static": false, "return_value": {"return_name": [], "return_description": ["the primeExponentQ."], "return_type": ["BigInteger"]}, "method_name": "getPrimeExponentQ", "method_description": "Returns the primeExponentQ.\n", "method_declar": ""}, {"params": [], "class_name": "RSAMultiPrimePrivateCrtKeySpec", "is_static": false, "return_value": {"return_name": [], "return_description": ["the primeP."], "return_type": ["BigInteger"]}, "method_name": "getPrimeP", "method_description": "Returns the primeP.\n", "method_declar": ""}, {"params": [], "class_name": "RSAMultiPrimePrivateCrtKeySpec", "is_static": false, "return_value": {"return_name": [], "return_description": ["the primeQ."], "return_type": ["BigInteger"]}, "method_name": "getPrimeQ", "method_description": "Returns the primeQ.\n", "method_declar": ""}, {"params": [], "class_name": "RSAMultiPrimePrivateCrtKeySpec", "is_static": false, "return_value": {"return_name": [], "return_description": ["the public exponent."], "return_type": ["BigInteger"]}, "method_name": "getPublicExponent", "method_description": "Returns the public exponent.\n", "method_declar": ""}], "class_name": "RSAMultiPrimePrivateCrtKeySpec", "Vars": null}