{"package_name": "java.security", "subclass_list": [], "class_description": "Configuration data that specifies the keystores in a keystore domain.\n A keystore domain is a collection of keystores that are presented as a\n single logical keystore. The configuration data is used during\n KeyStore\nKeyStore#load(KeyStore.LoadStoreParameter) and\n KeyStore#store(KeyStore.LoadStoreParameter) operations. The following syntax is supported for configuration data: To ensure that keystore entries are uniquely identified, each\n entry's alias is prefixed by its keystoreName followed\n by the entry name separator and each keystoreName must be\n unique within its domain. Entry name prefixes are omitted when\n storing a keystore. Properties are context-sensitive: properties that apply to\n all the keystores in a domain are located in the domain clause,\n and properties that apply only to a specific keystore are located\n in that keystore's clause.\n Unless otherwise specified, a property in a keystore clause overrides\n a property of the same name in the domain clause. All property names\n are case-insensitive. The following properties are supported: For example, configuration data for a simple keystore domain\n comprising three keystores is shown below: ", "class_type": "class", "typealias": [], "interface_list": ["KeyStore.LoadStoreParameter"], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["configuration"], "param_type": "URI", "param_description": " identifier for the domain configuration data.\n     The name of the target domain should be specified in the\n     java.net.URI fragment component when it is necessary\n     to distinguish between several domain configurations at the\n     same location."}, {"param_name": ["protectionParams"], "param_type": "Map", "param_description": " the map from keystore name to the parameter\n     used to protect keystore data.\n     A java.util.Collections.EMPTY_MAP should be used\n     when protection parameters are not required or when they have\n     been specified by properties in the domain configuration data.\n     It is cloned to prevent subsequent modification."}], "class_name": "DomainLoadStoreParameter", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a DomainLoadStoreParameter for a keystore domain with\n the parameters used to protect keystore data.\n", "method_declar": ""}, {"params": [], "class_name": "DomainLoadStoreParameter", "is_static": false, "return_value": {"return_name": [], "return_description": ["the identifier for the configuration data"], "return_type": ["URI"]}, "method_name": "getConfiguration", "method_description": "Gets the identifier for the domain configuration data.\n", "method_declar": ""}, {"params": [], "class_name": "DomainLoadStoreParameter", "is_static": false, "return_value": {"return_name": [], "return_description": ["always returns null"], "return_type": ["KeyStore.ProtectionParameter"]}, "method_name": "getProtectionParameter", "method_description": "Gets the keystore protection parameters for this domain.\n Keystore domains do not support a protection parameter.\n", "method_declar": ""}, {"params": [], "class_name": "DomainLoadStoreParameter", "is_static": false, "return_value": {"return_name": [], "return_description": ["an unmodifiable map of keystore names to protection\n     parameters"], "return_type": ["Map<String,\u00a0KeyStore.ProtectionParameter>"]}, "method_name": "getProtectionParams", "method_description": "Gets the keystore protection parameters for keystores in this\n domain.\n", "method_declar": ""}], "class_name": "DomainLoadStoreParameter", "Vars": null}