{"package_name": "java.text", "subclass_list": ["RuleBasedCollator", "RuleBasedCollator"], "class_description": "The Collator class performs locale-sensitive\n String comparison. You use this class to build\n searching and sorting routines for natural language text. Collator is an abstract base class. Subclasses\n implement specific collation strategies. One subclass,\n RuleBasedCollator, is currently provided with\n the Java Platform and is applicable to a wide set of languages. Other\n subclasses may be created to handle more specialized needs. Like other locale-sensitive classes, you can use the static\n factory method, getInstance, to obtain the appropriate\n Collator object for a given locale. You will only need\n to look at the subclasses of Collator if you need\n to understand the details of a particular collation strategy or\n if you need to modify that strategy. The following example shows how to compare two strings using\n the Collator for the default locale. You can set a Collator's strength property\n to determine the level of difference considered significant in\n comparisons. Four strengths are provided: PRIMARY,\n SECONDARY, TERTIARY, and IDENTICAL.\n The exact assignment of strengths to language features is\n locale dependant.  For example, in Czech, \"e\" and \"f\" are considered\n primary differences, while \"e\" and \"\u011b\" are secondary differences,\n \"e\" and \"E\" are tertiary differences and \"e\" and \"e\" are identical.\n The following shows how both case and accents could be ignored for\n US English. For comparing Strings exactly once, the compare\n method provides the best performance. When sorting a list of\n Strings however, it is generally necessary to compare each\n String multiple times. In this case, CollationKeys\n provide better performance. The CollationKey class converts\n a String to a series of bits that can be compared bitwise\n against other CollationKeys. A CollationKey is\n created by a Collator object for a given String.\n \nNote: CollationKeys from different\n Collators can not be compared. See the class description\n for CollationKey\n for an example using CollationKeys. ", "class_type": "class", "typealias": [], "interface_list": ["Comparator<Object>", "Cloneable"], "class_inherit_list": ["Object"], "Methods": [], "class_name": "Collator", "Vars": null}