{"package_name": "java.text", "subclass_list": [], "class_description": "An Annotation object is used as a wrapper for a text attribute value if\n the attribute has annotation characteristics. These characteristics are: Wrapping the attribute value into an Annotation object guarantees that\n adjacent text runs don't get merged even if the attribute values are equal,\n and indicates to text containers that the attribute should be discarded if\n the underlying text is modified. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["value"], "param_type": "Object", "param_description": " the value of the attribute"}], "class_name": "Annotation", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an annotation record with the given value, which\n may be null.\n", "method_declar": ""}, {"params": [], "class_name": "Annotation", "is_static": false, "return_value": {"return_name": [], "return_description": ["the value of the attribute"], "return_type": ["Object"]}, "method_name": "getValue", "method_description": "Returns the value of the attribute, which may be null.\n", "method_declar": ""}, {"params": [], "class_name": "Annotation", "is_static": false, "return_value": {"return_name": [], "return_description": ["the String representation of this Annotation"], "return_type": ["String"]}, "method_name": "toString", "method_description": "Returns the String representation of this Annotation.\n", "method_declar": ""}], "class_name": "Annotation", "Vars": null}