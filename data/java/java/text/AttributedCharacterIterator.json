{"package_name": "java.text", "subclass_list": [], "class_description": "An AttributedCharacterIterator allows iteration through both text and\n related attribute information. An attribute is a key/value pair, identified by the key.  No two\n attributes on a given character can have the same key. The values for an attribute are immutable, or must not be mutated\n by clients or storage.  They are always passed by reference, and not\n cloned. A run with respect to an attribute is a maximum text range for\n which: A run with respect to a set of attributes is a maximum text range for\n which this condition is met for each member attribute. When getting a run with no explicit attributes specified (i.e.,\n calling getRunStart() and getRunLimit()), any\n contiguous text segments having the same attributes (the same set\n of attribute/value pairs) are treated as separate runs if the\n attributes have been given to those text segments separately. The returned indexes are limited to the range of the iterator. The returned attribute information is limited to runs that contain\n the current character. Attribute keys are instances of AttributedCharacterIterator.Attribute and its\n subclasses, such as TextAttribute. ", "class_type": "interface", "typealias": [], "interface_list": ["CharacterIterator"], "class_inherit_list": [], "Methods": [], "class_name": "AttributedCharacterIterator", "Vars": null}