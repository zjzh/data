{"package_name": "java.text", "subclass_list": [], "class_description": "An AttributedString holds text and related attribute information. It\n may be used as the actual data storage in some cases where a text\n reader wants to access attributed text through the AttributedCharacterIterator\n interface. An attribute is a key/value pair, identified by the key.  No two\n attributes on a given character can have the same key. The values for an attribute are immutable, or must not be mutated\n by clients or storage.  They are always passed by reference, and not\n cloned. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["text"], "param_type": "String", "param_description": " The text for this attributed string."}], "class_name": "AttributedString", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an AttributedString instance with the given text.\n", "method_declar": ""}, {"params": [{"param_name": ["text"], "param_type": "String", "param_description": " The text for this attributed string."}, {"param_name": ["attributes"], "param_type": "Map", "param_description": " The attributes that apply to the entire string."}], "class_name": "AttributedString", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an AttributedString instance with the given text and attributes.\n", "method_declar": ""}, {"params": [{"param_name": ["text"], "param_type": "AttributedCharacterIterator", "param_description": " The text for this attributed string."}], "class_name": "AttributedString", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an AttributedString instance with the given attributed\n text represented by AttributedCharacterIterator.\n", "method_declar": ""}, {"params": [{"param_name": ["text"], "param_type": "AttributedCharacterIterator", "param_description": " The text for this attributed string."}, {"param_name": ["beginIndex"], "param_type": "int", "param_description": " Index of the first character of the range."}, {"param_name": ["endIndex"], "param_type": "int", "param_description": " Index of the character following the last character\n of the range."}], "class_name": "AttributedString", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an AttributedString instance with the subrange of\n the given attributed text represented by\n AttributedCharacterIterator. If the given range produces an\n empty text, all attributes will be discarded.  Note that any\n attributes wrapped by an Annotation object are discarded for a\n subrange of the original attribute range.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["text"], "param_type": "AttributedCharacterIterator", "param_description": " The text for this attributed string."}, {"param_name": ["beginIndex"], "param_type": "int", "param_description": " Index of the first character of the range."}, {"param_name": ["endIndex"], "param_type": "int", "param_description": " Index of the character following the last character\n of the range."}, {"param_name": ["attributes"], "param_type": "Attribute[]", "param_description": " Specifies attributes to be extracted\n from the text. If null is specified, all available attributes will\n be used."}], "class_name": "AttributedString", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an AttributedString instance with the subrange of\n the given attributed text represented by\n AttributedCharacterIterator.  Only attributes that match the\n given attributes will be incorporated into the instance. If the\n given range produces an empty text, all attributes will be\n discarded. Note that any attributes wrapped by an Annotation\n object are discarded for a subrange of the original attribute\n range.\nSee also:\n", "method_declar": ""}, {"params": [{"param_name": ["attribute"], "param_type": "AttributedCharacterIterator.Attribute", "param_description": " the attribute key"}, {"param_name": ["value"], "param_type": "Object", "param_description": " the value of the attribute; may be null"}], "class_name": "AttributedString", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "addAttribute", "method_description": "Adds an attribute to the entire string.\n", "method_declar": ""}, {"params": [{"param_name": ["attribute"], "param_type": "AttributedCharacterIterator.Attribute", "param_description": " the attribute key"}, {"param_name": ["value"], "param_type": "Object", "param_description": " The value of the attribute. May be null."}, {"param_name": ["beginIndex"], "param_type": "int", "param_description": " Index of the first character of the range."}, {"param_name": ["endIndex"], "param_type": "int", "param_description": " Index of the character following the last character of the range."}], "class_name": "AttributedString", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "addAttribute", "method_description": "Adds an attribute to a subrange of the string.\n", "method_declar": ""}, {"params": [{"param_name": ["attributes"], "param_type": "Map", "param_description": " The attributes to be added to the string."}, {"param_name": ["beginIndex"], "param_type": "int", "param_description": " Index of the first character of the range."}, {"param_name": ["endIndex"], "param_type": "int", "param_description": " Index of the character following the last\n character of the range."}], "class_name": "AttributedString", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "addAttributes", "method_description": "Adds a set of attributes to a subrange of the string.\n", "method_declar": ""}, {"params": [], "class_name": "AttributedString", "is_static": false, "return_value": {"return_name": [], "return_description": ["An iterator providing access to the text and its attributes."], "return_type": ["AttributedCharacterIterator"]}, "method_name": "getIterator", "method_description": "Creates an AttributedCharacterIterator instance that provides access to the entire contents of\n this string.\n", "method_declar": ""}, {"params": [{"param_name": ["attributes"], "param_type": "Attribute[]", "param_description": " a list of attributes that the client is interested in"}], "class_name": "AttributedString", "is_static": false, "return_value": {"return_name": [], "return_description": ["an iterator providing access to the entire text and its selected attributes"], "return_type": ["AttributedCharacterIterator"]}, "method_name": "getIterator", "method_description": "Creates an AttributedCharacterIterator instance that provides access to\n selected contents of this string.\n Information about attributes not listed in attributes that the\n implementor may have need not be made accessible through the iterator.\n If the list is null, all available attribute information should be made\n accessible.\n", "method_declar": ""}, {"params": [{"param_name": ["attributes"], "param_type": "Attribute[]", "param_description": " a list of attributes that the client is interested in"}, {"param_name": ["beginIndex"], "param_type": "int", "param_description": " the index of the first character"}, {"param_name": ["endIndex"], "param_type": "int", "param_description": " the index of the character following the last character"}], "class_name": "AttributedString", "is_static": false, "return_value": {"return_name": [], "return_description": ["an iterator providing access to the text and its attributes"], "return_type": ["AttributedCharacterIterator"]}, "method_name": "getIterator", "method_description": "Creates an AttributedCharacterIterator instance that provides access to\n selected contents of this string.\n Information about attributes not listed in attributes that the\n implementor may have need not be made accessible through the iterator.\n If the list is null, all available attribute information should be made\n accessible.\n", "method_declar": ""}], "class_name": "AttributedString", "Vars": null}