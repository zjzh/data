{"package_name": "javax.crypto", "subclass_list": [], "class_description": "This class represents a factory for secret keys. Key factories are used to convert keys (opaque\n cryptographic keys of type Key) into key specifications\n (transparent representations of the underlying key material), and vice\n versa.\n Secret key factories operate only on secret (symmetric) keys. Key factories are bi-directional, i.e., they allow to build an opaque\n key object from a given key specification (key material), or to retrieve\n the underlying key material of a key object in a suitable format. Application developers should refer to their provider's documentation\n to find out which key specifications are supported by the\n generateSecret and\n getKeySpec\n methods.\n For example, the DES secret-key factory supplied by the \"SunJCE\" provider\n supports DESKeySpec as a transparent representation of DES\n keys, and that provider's secret-key factory for Triple DES keys supports\n DESedeKeySpec as a transparent representation of Triple DES\n keys. Android provides the following SecretKeyFactory algorithms: ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [], "class_name": "SecretKeyFactory", "Vars": null}