{"package_name": "javax.crypto.spec", "subclass_list": [], "class_description": "This class specifies the set of parameters used with the Diffie-Hellman\n algorithm, as specified in PKCS #3: Diffie-Hellman Key-Agreement\n Standard. A central authority generates parameters and gives them to the two\n entities seeking to generate a secret key. The parameters are a prime\n p, a base g, and optionally the length\n in bits of the private value, l. It is possible that more than one instance of parameters may be\n generated by a given central authority, and that there may be more than\n one central authority. Indeed, each individual may be its own central\n authority, with different entities having different parameters. Note that this class does not perform any validation on specified\n parameters. Thus, the specified values are returned directly even\n if they are null. ", "class_type": "class", "typealias": [], "interface_list": ["AlgorithmParameterSpec"], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["p"], "param_type": "BigInteger", "param_description": " the prime modulus"}, {"param_name": ["g"], "param_type": "BigInteger", "param_description": " the base generator"}], "class_name": "DHParameterSpec", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a parameter set for Diffie-Hellman, using a prime modulus\n p and a base generator g.\n", "method_declar": ""}, {"params": [{"param_name": ["p"], "param_type": "BigInteger", "param_description": " the prime modulus"}, {"param_name": ["g"], "param_type": "BigInteger", "param_description": " the base generator"}, {"param_name": ["l"], "param_type": "int", "param_description": " the size in bits of the random exponent (private value)"}], "class_name": "DHParameterSpec", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a parameter set for Diffie-Hellman, using a prime modulus\n p, a base generator g,\n and the size in bits, l, of the random exponent\n (private value).\n", "method_declar": ""}, {"params": [], "class_name": "DHParameterSpec", "is_static": false, "return_value": {"return_name": [], "return_description": ["the base generator g"], "return_type": ["BigInteger"]}, "method_name": "getG", "method_description": "Returns the base generator g.\n", "method_declar": ""}, {"params": [], "class_name": "DHParameterSpec", "is_static": false, "return_value": {"return_name": [], "return_description": ["the size in bits, l, of the random exponent\n (private value), or 0 if this size has not been set"], "return_type": ["int"]}, "method_name": "getL", "method_description": "Returns the size in bits, l, of the random exponent\n (private value).\n", "method_declar": ""}, {"params": [], "class_name": "DHParameterSpec", "is_static": false, "return_value": {"return_name": [], "return_description": ["the prime modulus p"], "return_type": ["BigInteger"]}, "method_name": "getP", "method_description": "Returns the prime modulus p.\n", "method_declar": ""}], "class_name": "DHParameterSpec", "Vars": null}