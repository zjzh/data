{"package_name": "javax.crypto.spec", "subclass_list": [], "class_description": "This class specifies a DES key. ", "class_type": "class", "typealias": [], "interface_list": ["KeySpec"], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["key"], "param_type": "byte[]", "param_description": " the buffer with the DES key material. The first 8 bytes\n of the buffer are copied to protect against subsequent modification."}], "class_name": "DESKeySpec", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a DESKeySpec object using the first 8 bytes in\n key as the key material for the DES key.\n\n \n The bytes that constitute the DES key are those between\n key[0] and key[7] inclusive.\n", "method_declar": ""}, {"params": [{"param_name": ["key"], "param_type": "byte[]", "param_description": " the buffer with the DES key material. The first 8 bytes\n of the buffer beginning at offset inclusive are copied\n to protect against subsequent modification."}, {"param_name": ["offset"], "param_type": "int", "param_description": " the offset in key, where the DES key\n material starts."}], "class_name": "DESKeySpec", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a DESKeySpec object using the first 8 bytes in\n key, beginning at offset inclusive,\n as the key material for the DES key.\n\n \n The bytes that constitute the DES key are those between\n key[offset] and key[offset+7] inclusive.\n", "method_declar": ""}, {"params": [], "class_name": "DESKeySpec", "is_static": false, "return_value": {"return_name": [], "return_description": ["the DES key material. Returns a new array\n each time this method is called."], "return_type": ["byte[]"]}, "method_name": "getKey", "method_description": "Returns the DES key material.\n", "method_declar": ""}, {"params": [{"param_name": ["key"], "param_type": "byte[]", "param_description": " the buffer with the DES key material."}, {"param_name": ["offset"], "param_type": "int", "param_description": " the offset in key, where the DES key\n material starts."}], "class_name": "DESKeySpec", "is_static": true, "return_value": {"return_name": [], "return_description": ["true if the given DES key material is parity-adjusted, false\n otherwise."], "return_type": ["boolean"]}, "method_name": "isParityAdjusted", "method_description": "Checks if the given DES key material, starting at offset\n inclusive, is parity-adjusted.\n", "method_declar": ""}, {"params": [{"param_name": ["key"], "param_type": "byte[]", "param_description": " the buffer with the DES key material."}, {"param_name": ["offset"], "param_type": "int", "param_description": " the offset in key, where the DES key\n material starts."}], "class_name": "DESKeySpec", "is_static": true, "return_value": {"return_name": [], "return_description": ["true if the given DES key material is weak or semi-weak, false\n otherwise."], "return_type": ["boolean"]}, "method_name": "isWeak", "method_description": "Checks if the given DES key material is weak or semi-weak.\n", "method_declar": ""}], "class_name": "DESKeySpec", "Vars": null}