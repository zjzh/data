{"package_name": "javax.crypto", "subclass_list": [], "class_description": "This class defines the Service Provider Interface (SPI)\n for the KeyAgreement class.\n All the abstract methods in this class must be implemented by each\n cryptographic service provider who wishes to supply the implementation\n of a particular key agreement algorithm. The keys involved in establishing a shared secret are created by one\n of the\n key generators (KeyPairGenerator or\n KeyGenerator), a KeyFactory, or as a result from\n an intermediate phase of the key agreement protocol\n (engineDoPhase). For each of the correspondents in the key exchange,\n engineDoPhase\n needs to be called. For example, if the key exchange is with one other\n party, engineDoPhase needs to be called once, with the\n lastPhase flag set to true.\n If the key exchange is\n with two other parties, engineDoPhase needs to be called twice,\n the first time setting the lastPhase flag to\n false, and the second time setting it to true.\n There may be any number of parties involved in a key exchange. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [{"params": [], "class_name": "KeyAgreementSpi", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "\n", "method_declar": ""}], "class_name": "KeyAgreementSpi", "Vars": null}