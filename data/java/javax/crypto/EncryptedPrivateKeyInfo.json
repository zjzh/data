{"package_name": "javax.crypto", "subclass_list": [], "class_description": "This class implements the EncryptedPrivateKeyInfo type\n as defined in PKCS #8. Its ASN.1 definition is as follows: ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [{"params": [{"param_name": ["encoded"], "param_type": "byte[]", "param_description": " the ASN.1 encoding of this object. The contents of\n the array are copied to protect against subsequent modification."}], "class_name": "EncryptedPrivateKeyInfo", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs (i.e., parses) an EncryptedPrivateKeyInfo from\n its ASN.1 encoding.\n", "method_declar": ""}, {"params": [{"param_name": ["algName"], "param_type": "String", "param_description": " encryption algorithm name. See Appendix A in the\n \n Java Cryptography Architecture Reference Guide\n for information about standard Cipher algorithm names."}, {"param_name": ["encryptedData"], "param_type": "byte[]", "param_description": " encrypted data. The contents of\n encrypedData are copied to protect against subsequent\n modification when constructing this object."}], "class_name": "EncryptedPrivateKeyInfo", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an EncryptedPrivateKeyInfo from the\n encryption algorithm name and the encrypted data.\n\n \nNote: This constructor will use null as the value of the\n algorithm parameters. If the encryption algorithm has\n parameters whose value is not null, a different constructor,\n e.g. EncryptedPrivateKeyInfo(AlgorithmParameters, byte[]),\n should be used.\n", "method_declar": ""}, {"params": [{"param_name": ["algParams"], "param_type": "AlgorithmParameters", "param_description": " the algorithm parameters for the encryption\n algorithm. algParams.getEncoded() should return\n the ASN.1 encoded bytes of the parameters field\n of the AlgorithmIdentifer component of the\n EncryptedPrivateKeyInfo type."}, {"param_name": ["encryptedData"], "param_type": "byte[]", "param_description": " encrypted data. The contents of\n encrypedData are copied to protect against\n subsequent modification when constructing this object."}], "class_name": "EncryptedPrivateKeyInfo", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs an EncryptedPrivateKeyInfo from the\n encryption algorithm parameters and the encrypted data.\n", "method_declar": ""}, {"params": [], "class_name": "EncryptedPrivateKeyInfo", "is_static": false, "return_value": {"return_name": [], "return_description": ["the encryption algorithm name."], "return_type": ["String"]}, "method_name": "getAlgName", "method_description": "Returns the encryption algorithm.\n \nNote: Standard name is returned instead of the specified one\n in the constructor when such mapping is available.\n See Appendix A in the\n \n Java Cryptography Architecture Reference Guide\n for information about standard Cipher algorithm names.\n", "method_declar": ""}, {"params": [], "class_name": "EncryptedPrivateKeyInfo", "is_static": false, "return_value": {"return_name": [], "return_description": ["the algorithm parameters."], "return_type": ["AlgorithmParameters"]}, "method_name": "getAlgParameters", "method_description": "Returns the algorithm parameters used by the encryption algorithm.\n", "method_declar": ""}, {"params": [], "class_name": "EncryptedPrivateKeyInfo", "is_static": false, "return_value": {"return_name": [], "return_description": ["the ASN.1 encoding. Returns a new array\n each time this method is called."], "return_type": ["byte[]"]}, "method_name": "getEncoded", "method_description": "Returns the ASN.1 encoding of this object.\n", "method_declar": ""}, {"params": [], "class_name": "EncryptedPrivateKeyInfo", "is_static": false, "return_value": {"return_name": [], "return_description": ["the encrypted data. Returns a new array\n each time this method is called."], "return_type": ["byte[]"]}, "method_name": "getEncryptedData", "method_description": "Returns the encrypted data.\n", "method_declar": ""}, {"params": [{"param_name": ["decryptKey"], "param_type": "Key", "param_description": " key used for decrypting the encrypted data."}], "class_name": "EncryptedPrivateKeyInfo", "is_static": false, "return_value": {"return_name": [], "return_description": ["the PKCS8EncodedKeySpec object."], "return_type": ["PKCS8EncodedKeySpec"]}, "method_name": "getKeySpec", "method_description": "Extract the enclosed PKCS8EncodedKeySpec object from the\n encrypted data and return it.\n", "method_declar": ""}, {"params": [{"param_name": ["decryptKey"], "param_type": "Key", "param_description": " key used for decrypting the encrypted data."}, {"param_name": ["provider"], "param_type": "Provider", "param_description": " the name of provider whose Cipher implementation\n will be used."}], "class_name": "EncryptedPrivateKeyInfo", "is_static": false, "return_value": {"return_name": [], "return_description": ["the PKCS8EncodedKeySpec object."], "return_type": ["PKCS8EncodedKeySpec"]}, "method_name": "getKeySpec", "method_description": "Extract the enclosed PKCS8EncodedKeySpec object from the\n encrypted data and return it.\n", "method_declar": ""}, {"params": [{"param_name": ["decryptKey"], "param_type": "Key", "param_description": " key used for decrypting the encrypted data."}, {"param_name": ["providerName"], "param_type": "String", "param_description": " the name of provider whose Cipher\n implementation will be used."}], "class_name": "EncryptedPrivateKeyInfo", "is_static": false, "return_value": {"return_name": [], "return_description": ["the PKCS8EncodedKeySpec object."], "return_type": ["PKCS8EncodedKeySpec"]}, "method_name": "getKeySpec", "method_description": "Extract the enclosed PKCS8EncodedKeySpec object from the\n encrypted data and return it.\n", "method_declar": ""}, {"params": [{"param_name": ["cipher"], "param_type": "Cipher", "param_description": " the initialized cipher object which will be\n used for decrypting the encrypted data."}], "class_name": "EncryptedPrivateKeyInfo", "is_static": false, "return_value": {"return_name": [], "return_description": ["the PKCS8EncodedKeySpec object."], "return_type": ["PKCS8EncodedKeySpec"]}, "method_name": "getKeySpec", "method_description": "Extract the enclosed PKCS8EncodedKeySpec object from the\n encrypted data and return it.\n Note: In order to successfully retrieve the enclosed\n PKCS8EncodedKeySpec object, cipher needs\n to be initialized to either Cipher.DECRYPT_MODE or\n Cipher.UNWRAP_MODE, with the same key and parameters used\n for generating the encrypted data.\n", "method_declar": ""}], "class_name": "EncryptedPrivateKeyInfo", "Vars": null}