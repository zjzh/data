{"package_name": "javax.xml.xpath", "subclass_list": ["XPathExpressionException", "XPathFactoryConfigurationException", "XPathExpressionException", "XPathFactoryConfigurationException"], "class_description": "XPathException represents a generic XPath exception. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Exception"], "Methods": [{"params": [{"param_name": ["message"], "param_type": "String", "param_description": " The detail message."}], "class_name": "XPathException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "\nConstructs a new XPathException with the specified detail message.\nThe cause is not initialized.\nIf message is null, then a NullPointerException is thrown.\n", "method_declar": ""}, {"params": [{"param_name": ["cause"], "param_type": "Throwable", "param_description": " The cause."}], "class_name": "XPathException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "\nConstructs a new XPathException with the specified cause.\nIf cause is null, then a NullPointerException is thrown.\n", "method_declar": ""}, {"params": [], "class_name": "XPathException", "is_static": false, "return_value": {"return_name": [], "return_description": ["the cause of this throwable or null if the\n          cause is nonexistent or unknown."], "return_type": ["Throwable"]}, "method_name": "getCause", "method_description": "Returns the cause of this throwable or null if the\n cause is nonexistent or unknown.  (The cause is the throwable that\n caused this throwable to get thrown.)\n\n \nThis implementation returns the cause that was supplied via one of\n the constructors requiring a Throwable, or that was set after\n creation with the initCause(java.lang.Throwable) method.  While it is\n typically unnecessary to override this method, a subclass can override\n it to return a cause set by some other means.  This is appropriate for\n a \"legacy chained throwable\" that predates the addition of chained\n exceptions to Throwable.  Note that it is not\n necessary to override any of the PrintStackTrace methods,\n all of which invoke the getCause method to determine the\n cause of a throwable.\n", "method_declar": ""}, {"params": [], "class_name": "XPathException", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "printStackTrace", "method_description": "Prints this throwable and its backtrace to the\n standard error stream. This method prints a stack trace for this\n Throwable object on the error output stream that is\n the value of the field System.err. The first line of\n output contains the result of the toString() method for\n this object.  Remaining lines represent data previously recorded by\n the method fillInStackTrace(). The format of this\n information depends on the implementation, but the following\n example may be regarded as typical:\n \nAn exception can have both a cause and one or more suppressed\n exceptions:\n \n", "method_declar": ""}, {"params": [{"param_name": ["s"], "param_type": "PrintWriter", "param_description": " PrintWriter to use for output"}], "class_name": "XPathException", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "printStackTrace", "method_description": "Prints this throwable and its backtrace to the specified\n print writer.\n", "method_declar": ""}, {"params": [{"param_name": ["s"], "param_type": "PrintStream", "param_description": " PrintStream to use for output"}], "class_name": "XPathException", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "printStackTrace", "method_description": "Prints this throwable and its backtrace to the specified print stream.\n", "method_declar": ""}], "class_name": "XPathException", "Vars": null}