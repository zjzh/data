{"package_name": "javax.xml.transform", "subclass_list": ["TransformerConfigurationException", "TransformerConfigurationException"], "class_description": "This class specifies an exceptional condition that occurred\n during the transformation process. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Exception"], "Methods": [{"params": [{"param_name": ["message"], "param_type": "String", "param_description": " The error or warning message."}], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Create a new TransformerException.\n", "method_declar": ""}, {"params": [{"param_name": ["e"], "param_type": "Throwable", "param_description": " The exception to be wrapped."}], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Create a new TransformerException wrapping an existing exception.\n", "method_declar": ""}, {"params": [{"param_name": ["message"], "param_type": "String", "param_description": " The error or warning message, or null to\n                use the message from the embedded exception."}, {"param_name": ["e"], "param_type": "Throwable", "param_description": " Any exception"}], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Wrap an existing exception in a TransformerException.\n\n \nThis is used for throwing processor exceptions before\n the processing has started.\n", "method_declar": ""}, {"params": [{"param_name": ["message"], "param_type": "String", "param_description": " The error or warning message."}, {"param_name": ["locator"], "param_type": "SourceLocator", "param_description": " The locator object for the error or warning."}], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Create a new TransformerException from a message and a Locator.\n\n \nThis constructor is especially useful when an application is\n creating its own exception from within a DocumentHandler\n callback.\n", "method_declar": ""}, {"params": [{"param_name": ["message"], "param_type": "String", "param_description": " The error or warning message, or null to\n                use the message from the embedded exception."}, {"param_name": ["locator"], "param_type": "SourceLocator", "param_description": " The locator object for the error or warning."}, {"param_name": ["e"], "param_type": "Throwable", "param_description": " Any exception"}], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Wrap an existing exception in a TransformerException.\n", "method_declar": ""}, {"params": [], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": [], "return_description": ["the cause of this throwable or null if the\n          cause is nonexistent or unknown."], "return_type": ["Throwable"]}, "method_name": "getCause", "method_description": "Returns the cause of this throwable or null if the\n cause is nonexistent or unknown.  (The cause is the throwable that\n caused this throwable to get thrown.)\n", "method_declar": ""}, {"params": [], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": [], "return_description": ["An Throwable object, or null."], "return_type": ["Throwable"]}, "method_name": "getException", "method_description": "This method retrieves an exception that this exception wraps.\nSee also:\n", "method_declar": ""}, {"params": [], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": [], "return_description": ["A string with location info, or null\n if there is no location information."], "return_type": ["String"]}, "method_name": "getLocationAsString", "method_description": "Get the location information as a string.\n", "method_declar": ""}, {"params": [], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": [], "return_description": ["A SourceLocator object, or null if none was specified."], "return_type": ["SourceLocator"]}, "method_name": "getLocator", "method_description": "Method getLocator retrieves an instance of a SourceLocator\n object that specifies where an error occurred.\n", "method_declar": ""}, {"params": [], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": [], "return_description": ["A String representing the error message with\n         location information appended."], "return_type": ["String"]}, "method_name": "getMessageAndLocation", "method_description": "Get the error message with location information\n appended.\n", "method_declar": ""}, {"params": [{"param_name": ["cause"], "param_type": "Throwable", "param_description": " the cause (which is saved for later retrieval by the\n         getCause() method).  (A null value is\n         permitted, and indicates that the cause is nonexistent or\n         unknown.)"}], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": [], "return_description": ["a reference to this Throwable instance."], "return_type": ["Throwable"]}, "method_name": "initCause", "method_description": "Initializes the cause of this throwable to the specified value.\n (The cause is the throwable that caused this throwable to get thrown.)\n\n \nThis method can be called at most once.  It is generally called from\n within the constructor, or immediately after creating the\n throwable.  If this throwable was created\n with TransformerException(java.lang.Throwable) or\n TransformerException(java.lang.String, java.lang.Throwable), this method cannot be called\n even once.\n", "method_declar": ""}, {"params": [], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "printStackTrace", "method_description": "Print the the trace of methods from where the error\n originated.  This will trace all nested exception\n objects, as well as this object.\n", "method_declar": ""}, {"params": [{"param_name": ["s"], "param_type": "PrintWriter", "param_description": " The writer where the dump will be sent to."}], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "printStackTrace", "method_description": "Print the the trace of methods from where the error\n originated.  This will trace all nested exception\n objects, as well as this object.\n", "method_declar": ""}, {"params": [{"param_name": ["s"], "param_type": "PrintStream", "param_description": " The stream where the dump will be sent to."}], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "printStackTrace", "method_description": "Print the the trace of methods from where the error\n originated.  This will trace all nested exception\n objects, as well as this object.\n", "method_declar": ""}, {"params": [{"param_name": ["location"], "param_type": "SourceLocator", "param_description": " A SourceLocator object, or null to clear the location."}], "class_name": "TransformerException", "is_static": false, "return_value": {"return_name": [], "return_description": [""], "return_type": []}, "method_name": "setLocator", "method_description": "Method setLocator sets an instance of a SourceLocator\n object that specifies where an error occurred.\n", "method_declar": ""}], "class_name": "TransformerException", "Vars": null}