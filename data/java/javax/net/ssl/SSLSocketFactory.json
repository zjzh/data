{"package_name": "javax.net.ssl", "subclass_list": ["SSLCertificateSocketFactory", "SSLCertificateSocketFactory", "SSLSocketFactory", "SSLSocketFactory#getDefault()", "SSLContext.getSocketFactory()", "SSLParameters.setEndpointIdentificationAlgorithm(String)", "SSLParameters.setApplicationProtocols(String[])", "SSLParameters.setServerNames(java.util.List)"], "class_description": "SSLSocketFactorys create SSLSockets. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["SocketFactory"], "Methods": [{"params": [], "class_name": "SSLSocketFactory", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructor is used only by subclasses.\n", "method_declar": ""}, {"params": [], "class_name": "SSLSocketFactory", "is_static": true, "return_value": {"return_name": [], "return_description": ["the default SocketFactory"], "return_type": ["SocketFactory"]}, "method_name": "getDefault", "method_description": "Returns the default SSL socket factory.\n\n \nThe first time this method is called, the security property\n \"ssl.SocketFactory.provider\" is examined. If it is non-null, a class by\n that name is loaded and instantiated. If that is successful and the\n object is an instance of SSLSocketFactory, it is made the default SSL\n socket factory.\n\n \nOtherwise, this method returns\n SSLContext.getDefault().getSocketFactory(). If that\n call fails, an inoperative factory is returned.\nSee also:\n", "method_declar": ""}], "class_name": "SSLSocketFactory", "Vars": null}