{"package_name": "javax.sql", "subclass_list": [], "class_description": "A StatementEvent is sent to all StatementEventListeners which were\n registered with a PooledConnection. This occurs when the driver determines that a\n PreparedStatement that is associated with the PooledConnection has been closed or the driver determines\n is invalid.  ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["EventObject"], "Methods": [{"params": [{"param_name": ["con"], "param_type": "PooledConnection", "param_description": " The PooledConnection that the closed or invalid\n PreparedStatementis associated with."}, {"param_name": ["statement"], "param_type": "PreparedStatement", "param_description": " The PreparedStatement that is bieng closed or is invalid\n "}], "class_name": "StatementEvent", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a StatementEvent with the specified PooledConnection and\n PreparedStatement.  The SQLException contained in the event defaults to\n null.\n \n\n\n", "method_declar": ""}, {"params": [{"param_name": ["con"], "param_type": "PooledConnection", "param_description": " The PooledConnection that the closed or invalid PreparedStatement\n is associated with."}, {"param_name": ["statement"], "param_type": "PreparedStatement", "param_description": " The PreparedStatement that is being closed or is invalid"}, {"param_name": ["exception"], "param_type": "SQLException", "param_description": " The SQLException the driver is about to throw to\n                                              the application"}], "class_name": "StatementEvent", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Constructs a StatementEvent with the specified PooledConnection,\n PreparedStatement and SQLException\n\n\n\n", "method_declar": ""}, {"params": [], "class_name": "StatementEvent", "is_static": false, "return_value": {"return_name": [], "return_description": ["The SQLException the driver is about to throw"], "return_type": ["SQLException"]}, "method_name": "getSQLException", "method_description": "Returns the SQLException the driver is about to throw\n \n\n\n", "method_declar": ""}, {"params": [], "class_name": "StatementEvent", "is_static": false, "return_value": {"return_name": [], "return_description": ["The PreparedStatement that is being closed or is invalid"], "return_type": ["PreparedStatement"]}, "method_name": "getStatement", "method_description": "Returns the PreparedStatement that is being closed or is invalid\n \n\n\n", "method_declar": ""}], "class_name": "StatementEvent", "Vars": null}