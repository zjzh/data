{"package_name": "javax.sql", "subclass_list": [], "class_description": "An object that registers to be notified of events that occur on PreparedStatements\n that are in the Statement pool. The JDBC 3.0 specification added the maxStatements\n ConnectionPooledDataSource property to provide a standard mechanism for\n enabling the pooling of PreparedStatements\n and to specify the size of the statement\n pool.  However, there was no way for a driver to notify an external\n statement pool when a PreparedStatement becomes invalid.  For some databases, a\n statement becomes invalid if a DDL operation is performed that affects the\n table.  For example an application may create a temporary table to do some work\n on the table and then destroy it.  It may later recreate the same table when\n it is needed again.  Some databases will invalidate any prepared statements\n that reference the temporary table when the table is dropped. Similar to the methods defined in the ConnectionEventListener interface,\n the driver will call the StatementEventListener.statementErrorOccurred\n method prior to throwing any exceptions when it detects a statement is invalid.\n The driver will also call the StatementEventListener.statementClosed\n method when a PreparedStatement is closed. Methods which allow a component to register a StatementEventListener with a\n PooledConnection have been added to the PooledConnection interface.  ", "class_type": "interface", "typealias": [], "interface_list": ["EventListener"], "class_inherit_list": [], "Methods": [], "class_name": "StatementEventListener", "Vars": null}