{"package_name": "javax.security.cert", "subclass_list": [], "class_description": "Abstract class for X.509 v1 certificates. This provides a standard\n way to access all the version 1 attributes of an X.509 certificate.\n Attributes that are specific to X.509 v2 or v3 are not available\n through this interface. Future API evolution will provide full access to\n complete X.509 v3 attributes. The basic X.509 format was defined by\n ISO/IEC and ANSI X9 and is described below in ASN.1: These certificates are widely used to support authentication and\n other functionality in Internet security systems. Common applications\n include Privacy Enhanced Mail (PEM), Transport Layer Security (SSL),\n code signing for trusted software distribution, and Secure Electronic\n Transactions (SET). These certificates are managed and vouched for by Certificate\n Authorities (CAs). CAs are services which create certificates by\n placing data in the X.509 standard format and then digitally signing\n that data. CAs act as trusted third parties, making introductions\n between principals who have no direct knowledge of each other.\n CA certificates are either signed by themselves, or by some other\n CA such as a \"root\" CA. The ASN.1 definition of tbsCertificate is: Here is sample code to instantiate an X.509 certificate: In either case, the code that instantiates an X.509 certificate\n consults the value of the cert.provider.x509v1 security property\n to locate the actual implementation or instantiates a default implementation. The cert.provider.x509v1 property is set to a default\n implementation for X.509 such as: The value of this cert.provider.x509v1 property has to be\n changed to instantiate another implementation. If this security\n property is not set, a default implementation will be used.\n Currently, due to possible security restrictions on access to\n Security properties, this value is looked up and cached at class\n initialization time and will fallback on a default implementation if\n the Security property is not accessible. Note: The classes in the package javax.security.cert\n exist for compatibility with earlier versions of the\n Java Secure Sockets Extension (JSSE). New applications should instead\n use the standard Java SE certificate classes located in\n java.security.cert. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Certificate"], "Methods": [{"params": [], "class_name": "X509Certificate", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "\n", "method_declar": ""}, {"params": [{"param_name": ["certData"], "param_type": "byte[]", "param_description": " a byte array containing the DER-encoded\n        certificate."}], "class_name": "X509Certificate", "is_static": true, "return_value": {"return_name": [], "return_description": ["an X509Certificate object initialized with the data\n         from certData."], "return_type": ["X509Certificate"]}, "method_name": "getInstance", "method_description": "Instantiates an X509Certificate object, and initializes it with\n the specified byte array.\n The implementation (X509Certificate is an abstract class) is\n provided by the class specified as the value of the\n cert.provider.x509v1 security property.\n\n \nNote: All X509Certificate\n subclasses must provide a constructor of the form:\n \n", "method_declar": ""}, {"params": [{"param_name": ["inStream"], "param_type": "InputStream", "param_description": " an input stream with the data to be read to\n        initialize the certificate."}], "class_name": "X509Certificate", "is_static": true, "return_value": {"return_name": [], "return_description": ["an X509Certificate object initialized with the data\n         from the input stream."], "return_type": ["X509Certificate"]}, "method_name": "getInstance", "method_description": "Instantiates an X509Certificate object, and initializes it with\n the data read from the input stream inStream.\n The implementation (X509Certificate is an abstract class) is\n provided by the class specified as the value of the\n cert.provider.x509v1 security property.\n\n \nNote: Only one DER-encoded\n certificate is expected to be in the input stream.\n Also, all X509Certificate\n subclasses must provide a constructor of the form:\n \n", "method_declar": ""}], "class_name": "X509Certificate", "Vars": null}