{"package_name": "javax.security.cert", "subclass_list": ["X509Certificate", "X509Certificate"], "class_description": " Abstract class for managing a variety of identity certificates.\n An identity certificate is a guarantee by a principal that\n a public key is that of another principal.  (A principal represents\n an entity such as an individual user, a group, or a corporation.) This class is an abstraction for certificates that have different\n formats but important common uses.  For example, different types of\n certificates, such as X.509 and PGP, share general certificate\n functionality (like encoding and verifying) and\n some types of information (like a public key). X.509, PGP, and SDSI certificates can all be implemented by\n subclassing the Certificate class, even though they contain different\n sets of information, and they store and retrieve the information in\n different ways. Note: The classes in the package javax.security.cert\n exist for compatibility with earlier versions of the\n Java Secure Sockets Extension (JSSE). New applications should instead\n use the standard Java SE certificate classes located in\n java.security.cert. ", "class_type": "class", "typealias": [], "interface_list": [""], "class_inherit_list": ["Object"], "Methods": [{"params": [], "class_name": "Certificate", "is_static": false, "return_value": {"return_name": "", "return_description": [], "return_type": []}, "method_name": "init", "method_description": "\n", "method_declar": ""}, {"params": [{"param_name": ["other"], "param_type": "Object", "param_description": " the object to test for equality with this certificate."}], "class_name": "Certificate", "is_static": false, "return_value": {"return_name": [], "return_description": ["true if the encoded forms of the two certificates\n         match, false otherwise."], "return_type": ["boolean"]}, "method_name": "equals", "method_description": "Compares this certificate for equality with the specified\n object. If the other object is an\n instanceof Certificate, then\n its encoded form is retrieved and compared with the\n encoded form of this certificate.\n", "method_declar": ""}, {"params": [], "class_name": "Certificate", "is_static": false, "return_value": {"return_name": [], "return_description": ["the hashcode value."], "return_type": ["int"]}, "method_name": "hashCode", "method_description": "Returns a hashcode value for this certificate from its\n encoded form.\n", "method_declar": ""}], "class_name": "Certificate", "Vars": null}