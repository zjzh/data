{"package_name": "foundation", "subclass_list": [], "class_description": "", "class_type": "protocol", "typealias": [], "interface_list": [], "class_inherit_list": ["NSObjectProtocol"], "Methods": [{"params": [{"param_name": ["unarchiver"], "param_type": "NSKeyedUnarchiver", "param_description": "An unarchiver for which the receiver is the delegate."}, {"param_name": ["cannotDecodeObjectOfClassName", "name"], "param_type": "String", "param_description": "The name of the class of an object unarchiver is trying to decode."}, {"param_name": ["originalClasses", "classNames"], "param_type": "[String]", "param_description": "An array describing the class hierarchy of the encoded object, where the first element is the class name string of the encoded object, the second element is the class name of its immediate superclass, and so on."}], "class_name": "NSKeyedUnarchiverDelegate", "is_static": false, "return_value": {"return_name": [""], "return_description": ["The class unarchiver should use in place of the class named name."], "return_type": ["AnyClas"]}, "method_name": "unarchiver", "method_description": "Informs the delegate that the class with a given name is not available during decoding.", "method_declar": "optional func unarchiver(_ unarchiver: NSKeyedUnarchiver, cannotDecodeObjectOfClassName name: String, originalClasses classNames: [String]) -> AnyClass?"}, {"params": [{"param_name": ["unarchiver"], "param_type": "NSKeyedUnarchiver", "param_description": "An unarchiver for which the receiver is the delegate."}, {"param_name": ["didDecode", "object"], "param_type": "Any", "param_description": "The object that has been decoded. object may be nil."}], "class_name": "NSKeyedUnarchiverDelegate", "is_static": false, "return_value": {"return_name": [""], "return_description": ["The object to use in place of object. The delegate can either return object or return a different object to replace the decoded one. In apps using ARC, the delegate should only return nil if object itself is nil. In apps not using ARC, the delegate can return nil to indicate that the decoded value is unchanged\u2014that is, object will be decoded."], "return_type": ["An"]}, "method_name": "unarchiver", "method_description": "Informs the delegate that a given object has been decoded.", "method_declar": "optional func unarchiver(_ unarchiver: NSKeyedUnarchiver, didDecode object: Any?) -> Any?"}, {"params": [{"param_name": ["unarchiver"], "param_type": "NSKeyedUnarchiver", "param_description": "An unarchiver for which the receiver is the delegate."}, {"param_name": ["willReplace", "object"], "param_type": "Any", "param_description": "An object in the archive."}, {"param_name": ["with", "newObject"], "param_type": "Any", "param_description": "The object with which unarchiver will replace object."}], "class_name": "NSKeyedUnarchiverDelegate", "is_static": false, "return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_name": "unarchiver", "method_description": "Informs the delegate that one object is being substituted for another.", "method_declar": "optional func unarchiver(_ unarchiver: NSKeyedUnarchiver, willReplace object: Any, with newObject: Any)"}, {"params": [{"param_name": ["unarchiver"], "param_type": "NSKeyedUnarchiver", "param_description": "An unarchiver for which the receiver is the delegate."}], "class_name": "NSKeyedUnarchiverDelegate", "is_static": false, "return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_name": "unarchiverDidFinish", "method_description": "Notifies the delegate that decoding has finished.", "method_declar": "optional func unarchiverDidFinish(_ unarchiver: NSKeyedUnarchiver)"}, {"params": [{"param_name": ["unarchiver"], "param_type": "NSKeyedUnarchiver", "param_description": "An unarchiver for which the receiver is the delegate."}], "class_name": "NSKeyedUnarchiverDelegate", "is_static": false, "return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_name": "unarchiverWillFinish", "method_description": "Notifies the delegate that decoding is about to finish.", "method_declar": "optional func unarchiverWillFinish(_ unarchiver: NSKeyedUnarchiver)"}], "class_name": "NSKeyedUnarchiverDelegate", "Vars": []}