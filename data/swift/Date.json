{"class_description": "A Date value encapsulate a single point in time, independent of any particular calendrical system or time zone. Date values represent a time interval relative to an absolute reference date.\nThe Date structure provides methods for comparing dates, calculating the time interval between two dates, and creating a new date from a time interval relative to another date. Use date values in conjunction with DateFormatter instances to create localized representations of dates and times and with Calendar instances to perform calendar arithmetic.\nDate bridges to the NSDate class. You can use these interchangeably in code that interacts with Objective-C APIs.\n", "Methods": [{"method_description": "Returns a Boolean that is true if the left hand date is earlier in time than the right hand date.", "method_name": "func", "params": [{"param_type": "Date", "param_description": "", "param_name": ["lhs"]}, {"param_type": "Date", "param_description": "", "param_name": ["rhs"]}], "class_name": "Date", "method_declar": "static func < (lhs: Date, rhs: Date) -> Bool", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "is_static": true}, {"method_description": "Returns a Boolean that is true if the two date values represent the same point in time.", "method_name": "==", "params": [{"param_type": "Date", "param_description": "", "param_name": ["lhs"]}, {"param_type": "Date", "param_description": "", "param_name": ["rhs"]}], "class_name": "Date", "method_declar": "static func == (lhs: Date, rhs: Date) -> Bool", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "is_static": true}, {"method_description": "Returns a Boolean that is true if the left hand date is earlier in time than the right hand date.", "method_name": "func", "params": [{"param_type": "Date", "param_description": "", "param_name": ["lhs"]}, {"param_type": "Date", "param_description": "", "param_name": ["rhs"]}], "class_name": "Date", "method_declar": "static func < (lhs: Date, rhs: Date) -> Bool", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "is_static": true}, {"method_description": "Returns a Boolean that is true if the two date values represent the same point in time.", "method_name": "==", "params": [{"param_type": "Date", "param_description": "", "param_name": ["lhs"]}, {"param_type": "Date", "param_description": "", "param_name": ["rhs"]}], "class_name": "Date", "method_declar": "static func == (lhs: Date, rhs: Date) -> Bool", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "is_static": true}], "class_inherit_list": [], "class_name": "Date", "typealias": [], "Vars": [], "class_type": "struct", "interface_list": ["CKRecordValueProtocol", "Comparable", "CustomDebugStringConvertible", "CustomPlaygroundQuickLookable", "CustomReflectable", "CustomStringConvertible", "Equatable", "ReferenceConvertible"], "package_name": "foundation", "subclass_list": []}