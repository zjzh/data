{"class_description": "The FileWrapper class provides access to the attributes and contents of file system nodes. A file system node is a file, directory, or symbolic link. Instances of this class are known as file wrappers.\nNote\nStarting in macOS 10.7, FileWrapper moved from Application Kit to Foundation. As a result of this the icon, and setIcon: methods have moved to a new category of FileWrapper that remains in Application Kit. \nFile wrappers represent a file system node as an object that can be displayed as an image (and possibly edited in place), saved to the file system, or transmitted to another application. \nThere are three types of file wrappers:\nRegular-file file wrapper: Represents a regular file.\nDirectory file wrapper: Represents a directory.\nSymbolic-link file wrapper: Represents a symbolic link.\nA file wrapper has these attributes:\nFilename. Name of the file system node the file wrapper represents.\nfile-system attributes. See FileManager for information on the contents of the attributes dictionary. \nRegular-file contents. Applicable only to regular-file file wrappers.\nFile wrappers. Applicable only to directory file wrappers.\nDestination node. Applicable only to symbolic-link file wrappers.\n", "Methods": [{"method_description": "Initializes a file wrapper instance whose kind is determined by the type of file-system node located by the URL.", "method_name": "init", "params": [{"param_type": "URL", "param_description": "URL of the file-system node the file wrapper is to represent.", "param_name": ["url"]}, {"param_type": "FileWrapper.ReadingOptions = []", "param_description": "Option flags for reading the node located at url. See FileWrapper.ReadingOptions for possible values.", "param_name": ["options"]}], "class_name": "FileWrapper", "method_declar": "init(url: URL, options: FileWrapper.ReadingOptions = []) throws", "return_value": {"return_description": ["File wrapper for the file-system node at url. May be a directory, file, or symbolic link, depending on what is located at the URL. Returns false (0) if reading is not successful. "], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Initializes a file wrapper instance whose kind is determined by the type of file-system node located by the URL.", "method_name": "init", "params": [{"param_type": "URL", "param_description": "URL of the file-system node the file wrapper is to represent.", "param_name": ["url"]}, {"param_type": "FileWrapper.ReadingOptions = []", "param_description": "Option flags for reading the node located at url. See FileWrapper.ReadingOptions for possible values.", "param_name": ["options"]}], "class_name": "FileWrapper", "method_declar": "init(url: URL, options: FileWrapper.ReadingOptions = []) throws", "return_value": {"return_description": ["File wrapper for the file-system node at url. May be a directory, file, or symbolic link, depending on what is located at the URL. Returns false (0) if reading is not successful. "], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": ["NSObject"], "class_name": "FileWrapper", "typealias": [], "Vars": [], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSSecureCoding"], "package_name": "foundation", "subclass_list": []}