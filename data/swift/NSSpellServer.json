{"class_description": "A service provider is an application that declares its availability in a standard way, so that any other applications that wish to use it can do so. If you build a spelling checker that makes use of the NSSpellServer class and list it as an available service, then users of any application that makes use of NSSpellChecker or includes a Services menu will see your spelling checker as one of the available dictionaries.\n", "Methods": [{"method_description": "Notifies the receiver of a language your spelling checker can check.", "method_name": "registerLanguage", "params": [{"param_type": "String", "param_description": "A string specifying the English name of a language on Apple\u2019s list of languages.", "param_name": ["language"]}, {"param_type": "String", "param_description": "A string that identifies the vendor (to distinguish your spelling checker from those that others may offer for the same language).", "param_name": ["byVendor", "vendor"]}], "class_name": "NSSpellServer", "method_declar": "func registerLanguage(_ language: String?, byVendor vendor: String?) -> Bool", "return_value": {"return_description": ["Returns true if the language is registered, false if for some reason it can\u2019t be registered."], "return_name": [""], "return_type": ["Boo"]}, "is_static": false}, {"method_description": "Causes the receiver to start listening for spell-checking requests.", "method_name": "run", "params": [], "class_name": "NSSpellServer", "method_declar": "func run()", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Indicates whether a given word is in the user\u2019s list of learned words or the document\u2019s list of words to ignore.", "method_name": "isWord", "params": [{"param_type": "String", "param_description": "The word to compare with those in the user dictionaries.", "param_name": ["inUserDictionaries", "word"]}, {"param_type": "Bool", "param_description": "Specifies whether the comparison is case sensitive.", "param_name": ["caseSensitive", "flag"]}], "class_name": "NSSpellServer", "method_declar": "func isWord(inUserDictionaries word: String, caseSensitive flag: Bool) -> Bool", "return_value": {"return_description": ["A Boolean value indicating whether the word is in the user dictionaries. If true, the word is acceptable to the user."], "return_name": [""], "return_type": ["Boo"]}, "is_static": false}], "class_inherit_list": ["NSObject"], "class_name": "NSSpellServer", "typealias": [], "Vars": [{"var_description": "Returns the receiver\u2019s delegate.", "var_type": "NSSpellServerDelegate", "is_static": false, "var_name": "delegate"}, {"var_description": "The value for the NSGrammarRange dictionary key should be an NSValue containing an NSRange, a subrange of the sentence range used as the return value, whose location should be an offset from the beginning of the sentence--so, for example, an NSGrammarRange for the first four characters of the overall sentence range should be {0, 4}. If the NSGrammarRange key is not present in the dictionary it is assumed to be equal to the overall sentence range.", "var_type": "String", "is_static": false, "var_name": "NSGrammarRange"}, {"var_description": "The value for the NSGrammarUserDescription dictionary key should be an NSString containing descriptive text about that range, to be presented directly to the user; it is intended that the user description should provide enough information to allow the user to correct the problem. It is recommended that NSGrammarUserDescription be supplied in all cases, however, NSGrammarUserDescription or NSGrammarCorrections must be supplied in order for correction guidance to be presented to the user.", "var_type": "String", "is_static": false, "var_name": "NSGrammarUserDescription"}, {"var_description": "The value for the NSGrammarCorrections key should be an NSArray of NSStrings representing potential substitutions to correct the problem, but it is expected that this may not be available in all cases. NSGrammarUserDescription or NSGrammarCorrections must be supplied in order for correction guidance to be presented to the user.", "var_type": "String", "is_static": false, "var_name": "NSGrammarCorrections"}], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable"], "package_name": "foundation", "subclass_list": []}