{"class_description": "The pointer array class is modeled after NSArray, but can also hold nil values. You can insert or remove nil values which contribute to the array's count.\nA pointer array can be initialized to maintain strong or weak references to objects, or according to any of the memory or personality options defined by NSPointerFunctions.Options.\nThe NSCopying and NSCoding protocols are applicable only when a pointer array is initialized to maintain strong or weak references to objects.\nWhen enumerating a pointer array with NSFastEnumeration using for...in, the loop will yield any nil values present in the array. See Fast Enumeration Makes It Easy to Enumerate a Collection in Programming with Objective-C for more information.\nNSPointerArray is not suitable for subclassing.\n", "Methods": [{"method_description": "Initializes the receiver to use the given options.", "method_name": "init", "params": [{"param_type": "NSPointerFunctions.Options = []", "param_description": "The pointer functions options for the new instance.", "param_name": ["options"]}], "class_name": "NSPointerArray", "method_declar": "init(options: NSPointerFunctions.Options = [])", "return_value": {"return_description": ["The receiver, initialized to use the given options."], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Initializes the receiver to use the given functions.", "method_name": "init", "params": [{"param_type": "NSPointerFunctions", "param_description": "The pointer functions for the new instance.", "param_name": ["pointerFunctions", "functions"]}], "class_name": "NSPointerArray", "method_declar": "init(pointerFunctions functions: NSPointerFunctions)", "return_value": {"return_description": ["The receiver, initialized to use the given functions."], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Returns a new pointer array that maintains strong references to its elements.", "method_name": "strongObjects", "params": [], "class_name": "NSPointerArray", "method_declar": "class func strongObjects() -> NSPointerArray", "return_value": {"return_description": ["A new pointer array that maintains strong references to its elements."], "return_name": [""], "return_type": ["NSPointerArra"]}, "is_static": false}, {"method_description": "Returns a new pointer array that maintains weak references to its elements.", "method_name": "weakObjects", "params": [], "class_name": "NSPointerArray", "method_declar": "class func weakObjects() -> NSPointerArray", "return_value": {"return_description": ["A new pointer array that maintains weak references to its elements."], "return_name": [""], "return_type": ["NSPointerArra"]}, "is_static": false}, {"method_description": "Returns the pointer at a given index.", "method_name": "pointer", "params": [{"param_type": "Int", "param_description": "The index of an element in the receiver. This value must be less than the count of the receiver.", "param_name": ["at", "index"]}], "class_name": "NSPointerArray", "method_declar": "func pointer(at index: Int) -> UnsafeMutableRawPointer?", "return_value": {"return_description": ["The pointer at index."], "return_name": [""], "return_type": ["UnsafeMutableRawPointe"]}, "is_static": false}, {"method_description": "Adds a given pointer to the receiver.", "method_name": "addPointer", "params": [{"param_type": "UnsafeMutableRawPointer", "param_description": "The pointer to add. This value may be NULL.", "param_name": ["pointer"]}], "class_name": "NSPointerArray", "method_declar": "func addPointer(_ pointer: UnsafeMutableRawPointer?)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Removes the pointer at a given index.", "method_name": "removePointer", "params": [{"param_type": "Int", "param_description": "The index of an element in the receiver. This value must be less than the count of the receiver.", "param_name": ["at", "index"]}], "class_name": "NSPointerArray", "method_declar": "func removePointer(at index: Int)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Inserts a pointer at a given index.", "method_name": "insertPointer", "params": [{"param_type": "UnsafeMutableRawPointer", "param_description": "The pointer to add.", "param_name": ["item"]}, {"param_type": "Int", "param_description": "The index of an element in the receiver. This value must be less than the count of the receiver.", "param_name": ["at", "index"]}], "class_name": "NSPointerArray", "method_declar": "func insertPointer(_ item: UnsafeMutableRawPointer?, at index: Int)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Replaces the pointer at a given index.", "method_name": "replacePointer", "params": [{"param_type": "Int", "param_description": "The index of an element in the receiver. This value must be less than the count of the receiver.", "param_name": ["at", "index"]}, {"param_type": "UnsafeMutableRawPointer", "param_description": "The item with which to replace the element at index. This value may be NULL.", "param_name": ["withPointer", "item"]}], "class_name": "NSPointerArray", "method_declar": "func replacePointer(at index: Int, withPointer item: UnsafeMutableRawPointer?)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Removes NULL values from the receiver.", "method_name": "compact", "params": [], "class_name": "NSPointerArray", "method_declar": "func compact()", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": ["NSObject"], "class_name": "NSPointerArray", "typealias": [], "Vars": [{"var_description": "The number of elements in the receiver.", "var_type": "Int", "is_static": false, "var_name": "count"}, {"var_description": "All the objects in the receiver.", "var_type": "[Any]", "is_static": false, "var_name": "allObjects"}, {"var_description": "The functions in use by the receiver.", "var_type": "NSPointerFunctions", "is_static": false, "var_name": "pointerFunctions"}], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying", "NSFastEnumeration", "NSSecureCoding"], "package_name": "foundation", "subclass_list": []}