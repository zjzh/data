{"subclass_list": [], "typealias": [], "class_inherit_list": [], "Methods": [{"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Initializes the class before it receives its first message.", "is_static": false, "method_name": "initialize", "class_name": "NSObject", "method_declar": "class func initialize()", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invoked whenever a class or category is added to the Objective-C runtime; implement this method to perform class-specific behavior upon loading.", "is_static": false, "method_name": "load", "class_name": "NSObject", "method_declar": "class func load()", "params": []}, {"return_value": {"return_name": [], "return_description": ["An initialized object, or nil if an object could not be created for some reason that would not result in an exception."], "return_type": []}, "method_description": "Implemented by subclasses to initialize a new object (the receiver) immediately after memory for it has been allocated.", "is_static": false, "method_name": "init", "class_name": "NSObject", "method_declar": "init()", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The object returned by the NSCopying protocol method copy(with:),."], "return_type": ["An"]}, "method_description": "Returns the object returned by copy(with:).", "is_static": false, "method_name": "copy", "class_name": "NSObject", "method_declar": "func copy() -> Any", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The object returned by the NSMutableCopying protocol method mutableCopy(with:), where the zone is nil."], "return_type": ["An"]}, "method_description": "Returns the object returned by mutableCopy(with:) where the zone is nil.", "is_static": false, "method_name": "mutableCopy", "class_name": "NSObject", "method_declar": "func mutableCopy() -> Any", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The class object for the receiver\u2019s superclass."], "return_type": ["AnyClas"]}, "method_description": "Returns the class object for the receiver\u2019s superclass.", "is_static": false, "method_name": "superclass", "class_name": "NSObject", "method_declar": "class func superclass() -> AnyClass?", "params": []}, {"return_value": {"return_name": [""], "return_description": ["true if the receiving class is a subclass of\u2014or identical to\u2014aClass, otherwise false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether the receiving class is a subclass of, or identical to, a given class.", "is_static": false, "method_name": "isSubclass", "class_name": "NSObject", "method_declar": "class func isSubclass(of aClass: AnyClass) -> Bool", "params": [{"param_type": "AnyClass", "param_description": "A class object.", "param_name": ["of", "aClass"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if instances of the receiver are capable of responding to aSelector messages, otherwise false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether instances of the receiver are capable of responding to a given selector.", "is_static": false, "method_name": "instancesRespond", "class_name": "NSObject", "method_declar": "class func instancesRespond(to aSelector: Selector!) -> Bool", "params": [{"param_type": "Selector!", "param_description": "A Selector.", "param_name": ["to", "aSelector"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the receiver conforms to aProtocol, otherwise false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether the receiver conforms to a given protocol.", "is_static": false, "method_name": "conforms", "class_name": "NSObject", "method_declar": "class func conforms(to protocol: Protocol) -> Bool", "params": [{"param_type": "Protocol", "param_description": "", "param_name": ["to", "protocol"]}]}, {"return_value": {"return_name": [""], "return_description": ["The address of the receiver\u2019s implementation of the aSelector."], "return_type": ["IMP"]}, "method_description": "Locates and returns the address of the receiver\u2019s implementation of a method so it can be called as a function.", "is_static": false, "method_name": "method", "class_name": "NSObject", "method_declar": "func method(for aSelector: Selector!) -> IMP!", "params": [{"param_type": "Selector!", "param_description": "A Selector that identifies the method for which to return the implementation address. The selector must be a valid and non-NULL. If in doubt, use the responds(to:) method to check before passing the selector to method(for:).", "param_name": ["for", "aSelector"]}]}, {"return_value": {"return_name": [""], "return_description": ["The address of the implementation of the aSelector instance method."], "return_type": ["IMP"]}, "method_description": "Locates and returns the address of the implementation of the instance method identified by a given selector.", "is_static": false, "method_name": "instanceMethod", "class_name": "NSObject", "method_declar": "class func instanceMethod(for aSelector: Selector!) -> IMP!", "params": [{"param_type": "Selector!", "param_description": "A Selector that identifies the method for which to return the implementation address. The selector must be non-NULL and valid for the receiver. If in doubt, use the responds(to:) method to check before passing the selector to method(for:).", "param_name": ["for", "aSelector"]}]}, {"return_value": {"return_name": [""], "return_description": ["A string that represents the contents of the receiving class."], "return_type": ["Strin"]}, "method_description": "Returns a string that represents the contents of the receiving class.", "is_static": false, "method_name": "description", "class_name": "NSObject", "method_declar": "class func description() -> String", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invokes a method of the receiver on the current thread using the default mode after a delay.", "is_static": false, "method_name": "perform", "class_name": "NSObject", "method_declar": "func perform(_ aSelector: Selector, with anArgument: Any?, afterDelay delay: TimeInterval)", "params": [{"param_type": "Selector", "param_description": "A Selector that identifies the method to invoke. The method should not have a significant return value and should take a single argument of type id, or no arguments.", "param_name": ["aSelector"]}, {"param_type": "Any", "param_description": "The argument to pass to the method when it is invoked. Pass nil if the method does not take an argument. ", "param_name": ["with", "anArgument"]}, {"param_type": "TimeInterval", "param_description": "The minimum time before which the message is sent. Specifying a delay of 0 does not necessarily cause the selector to be performed immediately. The selector is still queued on the thread\u2019s run loop and performed as soon as possible.", "param_name": ["afterDelay", "delay"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invokes a method of the receiver on the current thread using the specified modes after a delay.", "is_static": false, "method_name": "perform", "class_name": "NSObject", "method_declar": "func perform(_ aSelector: Selector, with anArgument: Any?, afterDelay delay: TimeInterval, inModes modes: [RunLoop.Mode])", "params": [{"param_type": "Selector", "param_description": "A Selector that identifies the method to invoke. The method should not have a significant return value and should take a single argument of type id, or no arguments.", "param_name": ["aSelector"]}, {"param_type": "Any", "param_description": "The argument to pass to the method when it is invoked. Pass nil if the method does not take an argument. ", "param_name": ["with", "anArgument"]}, {"param_type": "TimeInterval", "param_description": "The minimum time before which the message is sent. Specifying a delay of 0 does not necessarily cause the selector to be performed immediately. The selector is still queued on the thread\u2019s run loop and performed as soon as possible.", "param_name": ["afterDelay", "delay"]}, {"param_type": "[RunLoop.Mode]", "param_description": "An array of strings that identify the modes to associate with the timer that performs the selector. This array must contain at least one string. If you specify nil or an empty array for this parameter, this method returns without performing the specified selector. For information about run loop modes, see Run Loops in Threading Programming Guide.", "param_name": ["inModes", "modes"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invokes a method of the receiver on the main thread using the default mode.", "is_static": false, "method_name": "performSelector", "class_name": "NSObject", "method_declar": "func performSelector(onMainThread aSelector: Selector, with arg: Any?, waitUntilDone wait: Bool)", "params": [{"param_type": "Selector", "param_description": "A Selector that identifies the method to invoke. The method should not have a significant return value and should take a single argument of type id, or no arguments.", "param_name": ["onMainThread", "aSelector"]}, {"param_type": "Any", "param_description": "The argument to pass to the method when it is invoked. Pass nil if the method does not take an argument.", "param_name": ["with", "arg"]}, {"param_type": "Bool", "param_description": "A Boolean that specifies whether the current thread blocks until after the specified selector is performed on the receiver on the main thread. Specify true to block this thread; otherwise, specify false to have this method return immediately.If the current thread is also the main thread, and you specify true for this parameter, the message is delivered and processed immediately. ", "param_name": ["waitUntilDone", "wait"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invokes a method of the receiver on the main thread using the specified modes.", "is_static": false, "method_name": "performSelector", "class_name": "NSObject", "method_declar": "func performSelector(onMainThread aSelector: Selector, with arg: Any?, waitUntilDone wait: Bool, modes array: [String]?)", "params": [{"param_type": "Selector", "param_description": "A Selector that identifies the method to invoke. The method should not have a significant return value and should take a single argument of type id, or no arguments.", "param_name": ["onMainThread", "aSelector"]}, {"param_type": "Any", "param_description": "The argument to pass to the method when it is invoked. Pass nil if the method does not take an argument.", "param_name": ["with", "arg"]}, {"param_type": "Bool", "param_description": "A Boolean that specifies whether the current thread blocks until after the specified selector is performed on the receiver on the main thread. Specify true to block this thread; otherwise, specify false to have this method return immediately.If the current thread is also the main thread, and you pass true, the message is performed immediately, otherwise the perform is queued to run the next time through the run loop.", "param_name": ["waitUntilDone", "wait"]}, {"param_type": "[String]", "param_description": "An array of strings that identifies the modes in which it is permissible to perform the specified selector. This array must contain at least one string. If you specify nil or an empty array for this parameter, this method returns without performing the specified selector. For information about run loop modes, see Run Loops in Threading Programming Guide.", "param_name": ["modes", "array"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invokes a method of the receiver on the specified thread using the default mode.", "is_static": false, "method_name": "perform", "class_name": "NSObject", "method_declar": "func perform(_ aSelector: Selector, on thr: Thread, with arg: Any?, waitUntilDone wait: Bool)", "params": [{"param_type": "Selector", "param_description": "A Selector that identifies the method to invoke. The method should not have a significant return value and should take a single argument of type id, or no arguments.", "param_name": ["aSelector"]}, {"param_type": "Thread", "param_description": "", "param_name": ["on", "thr"]}, {"param_type": "Any", "param_description": "The argument to pass to the method when it is invoked. Pass nil if the method does not take an argument.", "param_name": ["with", "arg"]}, {"param_type": "Bool", "param_description": "A Boolean that specifies whether the current thread blocks until after the specified selector is performed on the receiver on the specified thread. Specify true to block this thread; otherwise, specify false to have this method return immediately.If the current thread and target thread are the same, and you specify true for this parameter, the selector is performed immediately on the current thread. If you specify false, this method queues the message on the thread\u2019s run loop and returns, just like it does for other threads. The current thread must then dequeue and process the message when it has an opportunity to do so.", "param_name": ["waitUntilDone", "wait"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invokes a method of the receiver on the specified thread using the specified modes.", "is_static": false, "method_name": "perform", "class_name": "NSObject", "method_declar": "func perform(_ aSelector: Selector, on thr: Thread, with arg: Any?, waitUntilDone wait: Bool, modes array: [String]?)", "params": [{"param_type": "Selector", "param_description": "A Selector that identifies the method to invoke. It should not have a significant return value and should take a single argument of type id, or no arguments.", "param_name": ["aSelector"]}, {"param_type": "Thread", "param_description": "", "param_name": ["on", "thr"]}, {"param_type": "Any", "param_description": "The argument to pass to the method when it is invoked. Pass nil if the method does not take an argument.", "param_name": ["with", "arg"]}, {"param_type": "Bool", "param_description": "A Boolean that specifies whether the current thread blocks until after the specified selector is performed on the receiver on the specified thread. Specify true to block this thread; otherwise, specify false to have this method return immediately.If the current thread and target thread are the same, and you specify true for this parameter, the selector is performed immediately. If you specify false, this method queues the message and returns immediately, regardless of whether the threads are the same or different.", "param_name": ["waitUntilDone", "wait"]}, {"param_type": "[String]", "param_description": "An array of strings that identifies the modes in which it is permissible to perform the specified selector. This array must contain at least one string. If you specify nil or an empty array for this parameter, this method returns without performing the specified selector. For information about run loop modes, see Run Loops in Threading Programming Guide.", "param_name": ["modes", "array"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invokes a method of the receiver on a new background thread.", "is_static": false, "method_name": "performSelector", "class_name": "NSObject", "method_declar": "func performSelector(inBackground aSelector: Selector, with arg: Any?)", "params": [{"param_type": "Selector", "param_description": "A Selector that identifies the method to invoke. The method should not have a significant return value and should take a single argument of type id, or no arguments.", "param_name": ["inBackground", "aSelector"]}, {"param_type": "Any", "param_description": "The argument to pass to the method when it is invoked. Pass nil if the method does not take an argument.", "param_name": ["with", "arg"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Cancels perform requests previously registered with the perform(_:with:afterDelay:) instance method.", "is_static": false, "method_name": "cancelPreviousPerformRequests", "class_name": "NSObject", "method_declar": "class func cancelPreviousPerformRequests(withTarget aTarget: Any)", "params": [{"param_type": "Any", "param_description": "The target for requests previously registered with the perform(_:with:afterDelay:) instance method.", "param_name": ["withTarget", "aTarget"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Cancels perform requests previously registered with perform(_:with:afterDelay:).", "is_static": false, "method_name": "cancelPreviousPerformRequests", "class_name": "NSObject", "method_declar": "class func cancelPreviousPerformRequests(withTarget aTarget: Any, selector aSelector: Selector, object anArgument: Any?)", "params": [{"param_type": "Any", "param_description": "The target for requests previously registered with the perform(_:with:afterDelay:) instance method", "param_name": ["withTarget", "aTarget"]}, {"param_type": "Selector", "param_description": "The Selector for requests previously registered with the perform(_:with:afterDelay:) instance method.", "param_name": ["selector", "aSelector"]}, {"param_type": "Any", "param_description": "The argument for requests previously registered with the perform(_:with:afterDelay:) instance method. Argument equality is determined using isEqual(_:), so the value need not be the same object that was passed originally. Pass nil to match a request for nil that was originally passed as the argument.", "param_name": ["object", "anArgument"]}]}, {"return_value": {"return_name": [""], "return_description": ["The object to which unrecognized messages should first be directed."], "return_type": ["An"]}, "method_description": "Returns the object to which unrecognized messages should first be directed.", "is_static": false, "method_name": "forwardingTarget", "class_name": "NSObject", "method_declar": "func forwardingTarget(for aSelector: Selector!) -> Any?", "params": [{"param_type": "Selector!", "param_description": "A Selector for a method that the receiver does not implement.", "param_name": ["for", "aSelector"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the method was found and added to the receiver, otherwise false."], "return_type": ["Boo"]}, "method_description": "Dynamically provides an implementation for a given selector for a class method.", "is_static": false, "method_name": "resolveClassMethod", "class_name": "NSObject", "method_declar": "class func resolveClassMethod(_ sel: Selector!) -> Bool", "params": [{"param_type": "Selector!", "param_description": "", "param_name": ["sel"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the method was found and added to the receiver, otherwise false."], "return_type": ["Boo"]}, "method_description": "Dynamically provides an implementation for a given selector for an instance method.", "is_static": false, "method_name": "resolveInstanceMethod", "class_name": "NSObject", "method_declar": "class func resolveInstanceMethod(_ sel: Selector!) -> Bool", "params": [{"param_type": "Selector!", "param_description": "", "param_name": ["sel"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Handles messages the receiver doesn\u2019t recognize.", "is_static": false, "method_name": "doesNotRecognizeSelector", "class_name": "NSObject", "method_declar": "func doesNotRecognizeSelector(_ aSelector: Selector!)", "params": [{"param_type": "Selector!", "param_description": "A Selector that identifies a method not implemented or recognized by the receiver.", "param_name": ["aSelector"]}]}, {"return_value": {"return_name": [""], "return_description": ["The receiver, or another object to take the place of the object that was decoded and subsequently received this message."], "return_type": ["An"]}, "method_description": "Overridden by subclasses to substitute another object in place of the object that was decoded and subsequently received this message.", "is_static": false, "method_name": "awakeAfter", "class_name": "NSObject", "method_declar": "func awakeAfter(using aDecoder: NSCoder) -> Any?", "params": [{"param_type": "NSCoder", "param_description": "The decoder used to decode the receiver.", "param_name": ["using", "aDecoder"]}]}, {"return_value": {"return_name": [""], "return_description": ["An array of string objects that specify the names of classes in preferred order for unarchiving"], "return_type": ["[String"]}, "method_description": "Overridden to return the names of classes that can be used to decode objects if their class is unavailable.", "is_static": false, "method_name": "classFallbacksForKeyedArchiver", "class_name": "NSObject", "method_declar": "class func classFallbacksForKeyedArchiver() -> [String]", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The class to substitute for the receiver during keyed unarchiving."], "return_type": ["AnyClas"]}, "method_description": "Overridden by subclasses to substitute a new class during keyed unarchiving.", "is_static": false, "method_name": "classForKeyedUnarchiver", "class_name": "NSObject", "method_declar": "class func classForKeyedUnarchiver() -> AnyClass", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The object to substitute for the receiver during archiving."], "return_type": ["An"]}, "method_description": "Overridden by subclasses to substitute another object for itself during archiving.", "is_static": false, "method_name": "replacementObject", "class_name": "NSObject", "method_declar": "func replacementObject(for archiver: NSArchiver) -> Any?", "params": [{"param_type": "NSArchiver", "param_description": "", "param_name": ["for", "archiver"]}]}, {"return_value": {"return_name": [""], "return_description": ["The object encode instead of the receiver (if different)."], "return_type": ["An"]}, "method_description": "Overridden by subclasses to substitute another object for itself during encoding.", "is_static": false, "method_name": "replacementObject", "class_name": "NSObject", "method_declar": "func replacementObject(for aCoder: NSCoder) -> Any?", "params": [{"param_type": "NSCoder", "param_description": "The coder encoding the receiver.", "param_name": ["for", "aCoder"]}]}, {"return_value": {"return_name": [""], "return_description": ["The object encode instead of the receiver (if different). "], "return_type": ["An"]}, "method_description": "Overridden by subclasses to substitute another object for itself during keyed archiving.", "is_static": false, "method_name": "replacementObject", "class_name": "NSObject", "method_declar": "func replacementObject(for archiver: NSKeyedArchiver) -> Any?", "params": [{"param_type": "NSKeyedArchiver", "param_description": "A keyed archiver creating an archive.", "param_name": ["for", "archiver"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sets the receiver's version number.", "is_static": false, "method_name": "setVersion", "class_name": "NSObject", "method_declar": "class func setVersion(_ aVersion: Int)", "params": [{"param_type": "Int", "param_description": "The version number for the receiver.", "param_name": ["aVersion"]}]}, {"return_value": {"return_name": [""], "return_description": ["The version number assigned to the class."], "return_type": ["In"]}, "method_description": "Returns the version number assigned to the class.", "is_static": false, "method_name": "version", "class_name": "NSObject", "method_declar": "class func version() -> Int", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The name of the relationship that is the inverse of the receiver's relationship named relationshipKey."], "return_type": ["Strin"]}, "method_description": "For a given key that defines the name of the relationship from the receiver\u2019s class to another class, returns the name of the relationship from the other class to the receiver\u2019s class.", "is_static": false, "method_name": "inverse", "class_name": "NSObject", "method_declar": "func inverse(forRelationshipKey relationshipKey: String) -> String?", "params": [{"param_type": "String", "param_description": "The name of the relationship from the receiver\u2019s class to another class.", "param_name": ["forRelationshipKey", "relationshipKey"]}]}, {"return_value": {"return_name": [""], "return_description": ["The copied object or objects. Returns nil if an error occurs."], "return_type": ["An"]}, "method_description": "Creates and returns one or more scripting objects to be inserted into the specified relationship by copying the passed-in value and setting the properties in the copied object or objects.", "is_static": false, "method_name": "copyScriptingValue", "class_name": "NSObject", "method_declar": "func copyScriptingValue(_ value: Any, forKey key: String, withProperties properties: [String : Any]) -> Any?", "params": [{"param_type": "Any", "param_description": "An object or objects to be copied. The type must match the type of the property identified by key. (See also the Discussion section.)For example, if the property is a to-many relationship, value will always be an array of objects to be copied, and this method must therefore return an array of objects.", "param_name": ["value"]}, {"param_type": "String", "param_description": "A key that identifies the relationship into which to insert the copied object or objects.", "param_name": ["forKey", "key"]}, {"param_type": "[String", "param_description": "The properties to be set in the copied object or objects.  Derived from the \"with properties\" parameter of a duplicate command. (See also the Discussion section.)", "param_name": ["withProperties", "properties"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[String"]}]}, {"return_value": {"return_name": [""], "return_description": ["The new object. Returns nil if an error occurs."], "return_type": ["An"]}, "method_description": "Creates and returns an instance of a scriptable\u00a0class, setting its contents and\u00a0properties, for insertion into the relationship identified by the key.", "is_static": false, "method_name": "newScriptingObject", "class_name": "NSObject", "method_declar": "func newScriptingObject(of objectClass: AnyClass, forValueForKey key: String, withContentsValue contentsValue: Any?, properties: [String : Any]) -> Any?", "params": [{"param_type": "AnyClass", "param_description": "", "param_name": ["of", "objectClass"]}, {"param_type": "String", "param_description": "A key that identifies the relationship into which the new\u00a0class object will be inserted.", "param_name": ["forValueForKey", "key"]}, {"param_type": "Any", "param_description": "Specifies the contents of the\u00a0object to be created. This may be nil. (See also the Discussion section.)", "param_name": ["withContentsValue", "contentsValue"]}, {"param_type": "[String", "param_description": "The properties to be set in the new object. (See also the Discussion section.)", "param_name": ["properties"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[String"]}]}, {"return_value": {"return_name": [""], "return_description": ["The specified object or objects in the receiving container."], "return_type": ["An"]}, "method_description": "Given an object specifier, returns the specified object or objects in the receiving container.", "is_static": false, "method_name": "scriptingValue", "class_name": "NSObject", "method_declar": "func scriptingValue(for objectSpecifier: NSScriptObjectSpecifier) -> Any?", "params": [{"param_type": "NSScriptObjectSpecifier", "param_description": "An object specifier to be evaluated.", "param_name": ["for", "objectSpecifier"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "The garbage collector invokes this method on the receiver before disposing of the memory it uses.DeprecatedGarbage collection is deprecated in OS\u00a0X\u00a0v10.8; instead, you should use Automatic Reference Counting\u2014see Transitioning to ARC Release Notes.", "is_static": false, "method_name": "finalize", "class_name": "NSObject", "method_declar": "func finalize()", "params": []}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Boo"]}, "method_description": "", "is_static": false, "method_name": "acceptsPreviewPanelControl", "class_name": "NSObject", "method_declar": "func acceptsPreviewPanelControl(_ panel: QLPreviewPanel!) -> Bool", "params": [{"param_type": "QLPreviewPanel!", "param_description": "", "param_name": ["panel"]}]}, {"return_value": {"return_name": [""], "return_description": ["The description of the specified action, in a localized string."], "return_type": ["Strin"]}, "method_description": "Returns a localized description of the specified action.DeprecatedThis method is deprecated. Use the new method-based API instead. For more information, see Accessibility Programming Guide for OS X or NSAccessibilityProtocol.", "is_static": false, "method_name": "accessibilityActionDescription", "class_name": "NSObject", "method_declar": "func accessibilityActionDescription(_ action: NSAccessibility.Action) -> String?", "params": [{"param_type": "NSAccessibility.Action", "param_description": "The action attribute.", "param_name": ["action"]}]}, {"return_value": {"return_name": [""], "return_description": ["An array of action names."], "return_type": ["[NSAccessibility.Action"]}, "method_description": "Returns an array of action names supported by the accessibility element.DeprecatedUse of this method is discouraged. Use the new method-based API instead. For more information, see Accessibility Programming Guide for OS X or NSAccessibilityProtocol.", "is_static": false, "method_name": "accessibilityActionNames", "class_name": "NSObject", "method_declar": "func accessibilityActionNames() -> [NSAccessibility.Action]", "params": []}, {"return_value": {"return_name": [""], "return_description": ["true if the element was activated or false if it was not."], "return_type": ["Boo"]}, "method_description": "Tells the element to activate itself and report the success or failure of the operation.", "is_static": false, "method_name": "accessibilityActivate", "class_name": "NSObject", "method_declar": "func accessibilityActivate() -> Bool", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The number of items in the specified array attribute."], "return_type": ["In"]}, "method_description": "Returns the count of the specified accessibility array attribute.DeprecatedUse of this method is discouraged. Use the new method-based API instead. For more information, see Accessibility Programming Guide for OS X or NSAccessibilityProtocol.", "is_static": false, "method_name": "accessibilityArrayAttributeCount", "class_name": "NSObject", "method_declar": "func accessibilityArrayAttributeCount(_ attribute: NSAccessibility.Attribute) -> Int", "params": [{"param_type": "NSAccessibility.Attribute", "param_description": "The accessibility array attribute.", "param_name": ["attribute"]}]}, {"return_value": {"return_name": [""], "return_description": ["An array of values within the specified index and count."], "return_type": ["[Any"]}, "method_description": "Returns a subarray of values of an accessibility array attribute.DeprecatedUse of this method is discouraged. Use the new method-based API instead. For more information, see Accessibility Programming Guide for OS X or NSAccessibilityProtocol.", "is_static": false, "method_name": "accessibilityArrayAttributeValues", "class_name": "NSObject", "method_declar": "func accessibilityArrayAttributeValues(_ attribute: NSAccessibility.Attribute, index: Int, maxCount: Int) -> [Any]", "params": [{"param_type": "NSAccessibility.Attribute", "param_description": "The accessibility array attribute.", "param_name": ["attribute"]}, {"param_type": "Int", "param_description": "The starting index.", "param_name": ["index"]}, {"param_type": "Int", "param_description": "The maximum desired number of items requested.", "param_name": ["maxCount"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Set<UIAccessibility.AssistiveTechnologyIdentifier"]}, "method_description": "", "is_static": false, "method_name": "accessibilityAssistiveTechnologyFocusedIdentifiers", "class_name": "NSObject", "method_declar": "func accessibilityAssistiveTechnologyFocusedIdentifiers() -> Set<UIAccessibility.AssistiveTechnologyIdentifier>?", "params": []}, {"return_value": {"return_name": [""], "return_description": ["An array containing the attributes supported by the receiver."], "return_type": ["[NSAccessibility.Attribute"]}, "method_description": "Returns an array of attribute names supported by the receiver.DeprecatedThis method is deprecated. Use the new method-based API instead. For more information, see Accessibility Programming Guide for OS X or NSAccessibilityProtocol.", "is_static": false, "method_name": "accessibilityAttributeNames", "class_name": "NSObject", "method_declar": "func accessibilityAttributeNames() -> [NSAccessibility.Attribute]", "params": []}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["An"]}, "method_description": "Returns the value of the specified attribute in the receiver.DeprecatedThis method is deprecated. Use the new method-based API instead. For more information, see Accessibility Programming Guide for OS X or NSAccessibilityProtocol.", "is_static": false, "method_name": "accessibilityAttributeValue", "class_name": "NSObject", "method_declar": "func accessibilityAttributeValue(_ attribute: NSAccessibility.Attribute) -> Any?", "params": [{"param_type": "NSAccessibility.Attribute", "param_description": "The name of the attribute. See Constants for lists of attribute names.", "param_name": ["attribute"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["An"]}, "method_description": "Returns the value of the receiver's parameterized attribute corresponding to the specified attribute name and parameter.DeprecatedThis method is deprecated. Use the new method-based API instead. For more information, see Accessibility Programming Guide for OS X or NSAccessibilityProtocol.", "is_static": false, "method_name": "accessibilityAttributeValue", "class_name": "NSObject", "method_declar": "func accessibilityAttributeValue(_ attribute: NSAccessibility.ParameterizedAttribute, forParameter parameter: Any?) -> Any?", "params": [{"param_type": "NSAccessibility.ParameterizedAttribute", "param_description": "The name of the attribute. See Constants for lists of attribute names.", "param_name": ["attribute"]}, {"param_type": "Any", "param_description": "The parameter.", "param_name": ["forParameter", "parameter"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Tells the accessibility element to decrement the value of its content.", "is_static": false, "method_name": "accessibilityDecrement", "class_name": "NSObject", "method_declar": "func accessibilityDecrement()", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The accessibility element at the specified index, or nil if none exists."], "return_type": ["An"]}, "method_description": "Returns the accessibility element at the specified index.", "is_static": false, "method_name": "accessibilityElement", "class_name": "NSObject", "method_declar": "func accessibilityElement(at index: Int) -> Any?", "params": [{"param_type": "Int", "param_description": "The index of the accessibility element.", "param_name": ["at", "index"]}]}, {"return_value": {"return_name": [""], "return_description": ["The number of accessibility elements in the container. By default, this method returns 0. "], "return_type": ["In"]}, "method_description": "Returns the number of accessibility elements in the container.", "is_static": false, "method_name": "accessibilityElementCount", "class_name": "NSObject", "method_declar": "func accessibilityElementCount() -> Int", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent after an assistive technology has set its virtual focus on the accessibility element.", "is_static": false, "method_name": "accessibilityElementDidBecomeFocused", "class_name": "NSObject", "method_declar": "func accessibilityElementDidBecomeFocused()", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent after an assistive technology has removed its virtual focus from an accessibility element.", "is_static": false, "method_name": "accessibilityElementDidLoseFocus", "class_name": "NSObject", "method_declar": "func accessibilityElementDidLoseFocus()", "params": []}, {"return_value": {"return_name": [""], "return_description": ["true if an assistive technology is virtually focused on the element; otherwise, false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value indicating whether an assistive technology is focused on the accessibility element.", "is_static": false, "method_name": "accessibilityElementIsFocused", "class_name": "NSObject", "method_declar": "func accessibilityElementIsFocused() -> Bool", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The deepest accessibility element in the accessibility hierarchy that contains the specified point."], "return_type": ["An"]}, "method_description": "Returns the deepest descendant of the accessibility hierarchy that contains the specified point.", "is_static": false, "method_name": "accessibilityHitTest", "class_name": "NSObject", "method_declar": "func accessibilityHitTest(_ point: NSPoint) -> Any?", "params": [{"param_type": "NSPoint", "param_description": "The point being hit-tested, in lower-left relative screen coordinates.", "param_name": ["point"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Tells the accessibility element to increment the value of its content.", "is_static": false, "method_name": "accessibilityIncrement", "class_name": "NSObject", "method_declar": "func accessibilityIncrement()", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The index of the accessibility child object in the parent. Returns NSNotFound if the child does not exist."], "return_type": ["In"]}, "method_description": "Returns the index of the specified accessibility child in the parent.DeprecatedUse of this method is discouraged. Use the new method-based API instead. For more information, see Accessibility Programming Guide for OS X or NSAccessibilityProtocol.", "is_static": false, "method_name": "accessibilityIndex", "class_name": "NSObject", "method_declar": "func accessibilityIndex(ofChild child: Any) -> Int", "params": [{"param_type": "Any", "param_description": "The accessibility child of an object.", "param_name": ["ofChild", "child"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the specified attribute can be set; otherwise, false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether the value for the specified attribute in the receiver can be set.DeprecatedThis method is deprecated. Use the new method-based API instead. For more information, see Accessibility Programming Guide for OS X or NSAccessibilityProtocol.", "is_static": false, "method_name": "accessibilityIsAttributeSettable", "class_name": "NSObject", "method_declar": "func accessibilityIsAttributeSettable(_ attribute: NSAccessibility.Attribute) -> Bool", "params": [{"param_type": "NSAccessibility.Attribute", "param_description": "The name of the attribute. See Constants for lists of attribute names.", "param_name": ["attribute"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the receiver should be ignored; otherwise, false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value indicating whether the receiver should be ignored in the parent-child accessibility hierarchy.DeprecatedThis method is deprecated. Use accessibilityElement instead. For more information, see Accessibility Programming Guide for OS X or NSAccessibilityProtocol.", "is_static": false, "method_name": "accessibilityIsIgnored", "class_name": "NSObject", "method_declar": "func accessibilityIsIgnored() -> Bool", "params": []}, {"return_value": {"return_name": [""], "return_description": ["An array of parameterized attributes in the receiver."], "return_type": ["[NSAccessibility.ParameterizedAttribute"]}, "method_description": "Returns a list of parameterized attribute names supported by the receiver.DeprecatedThis method is deprecated. Use the new method-based API instead. For more information, see Accessibility Programming Guide for OS X or NSAccessibilityProtocol.", "is_static": false, "method_name": "accessibilityParameterizedAttributeNames", "class_name": "NSObject", "method_declar": "func accessibilityParameterizedAttributeNames() -> [NSAccessibility.ParameterizedAttribute]", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Performs the action associated with the specified action.DeprecatedThis method is deprecated. Use the new method-based API instead. For more information, see Accessibility Programming Guide for OS X or NSAccessibilityProtocol.", "is_static": false, "method_name": "accessibilityPerformAction", "class_name": "NSObject", "method_declar": "func accessibilityPerformAction(_ action: NSAccessibility.Action)", "params": [{"param_type": "NSAccessibility.Action", "param_description": "The action to perform.", "param_name": ["action"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the modal view is successfully dismissed; otherwise, false. By default, this method returns false."], "return_type": ["Boo"]}, "method_description": "Dismisses a modal view and returns the success or failure of the action.", "is_static": false, "method_name": "accessibilityPerformEscape", "class_name": "NSObject", "method_declar": "func accessibilityPerformEscape() -> Bool", "params": []}, {"return_value": {"return_name": [""], "return_description": ["true if the magic tap action succeeds; otherwise, false. By default, this method returns false."], "return_type": ["Boo"]}, "method_description": "Performs a salient action.", "is_static": false, "method_name": "accessibilityPerformMagicTap", "class_name": "NSObject", "method_declar": "func accessibilityPerformMagicTap() -> Bool", "params": []}, {"return_value": {"return_name": [""], "return_description": ["true if the scrolling action succeeds; otherwise, false. By default, this method returns false."], "return_type": ["Boo"]}, "method_description": "Scrolls screen content in an application-specific way and returns the success or failure of the action.", "is_static": false, "method_name": "accessibilityScroll", "class_name": "NSObject", "method_declar": "func accessibilityScroll(_ direction: UIAccessibilityScrollDirection) -> Bool", "params": [{"param_type": "UIAccessibilityScrollDirection", "param_description": "A constant that specifies the direction of the scrolling action. See UIAccessibilityScrollDirection for descriptions of valid constants.", "param_name": ["direction"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the override was successful; otherwise, false."], "return_type": ["Boo"]}, "method_description": "Overrides the specified attribute in the receiver or adds it if it does not exist, and sets its value to the specified value.DeprecatedThis method is deprecated. Use the new method-based API instead. For more information, see Accessibility Programming Guide for OS X or NSAccessibilityProtocol.", "is_static": false, "method_name": "accessibilitySetOverrideValue", "class_name": "NSObject", "method_declar": "func accessibilitySetOverrideValue(_ value: Any?, forAttribute attribute: NSAccessibility.Attribute) -> Bool", "params": [{"param_type": "Any", "param_description": "The attribute value to be set. ", "param_name": ["value"]}, {"param_type": "NSAccessibility.Attribute", "param_description": "The name of the attribute. See Constants for lists of attribute names.", "param_name": ["forAttribute", "attribute"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sets the value of the specified attribute in the receiver to the specified value.DeprecatedThis method is deprecated. Use the new method-based API instead. For more information, see Accessibility Programming Guide for OS X or NSAccessibilityProtocol.", "is_static": false, "method_name": "accessibilitySetValue", "class_name": "NSObject", "method_declar": "func accessibilitySetValue(_ value: Any?, forAttribute attribute: NSAccessibility.Attribute)", "params": [{"param_type": "Any", "param_description": "The attribute value to be set.", "param_name": ["value"]}, {"param_type": "NSAccessibility.Attribute", "param_description": "The name of the attribute. See Constants for lists of attribute names.", "param_name": ["forAttribute", "attribute"]}]}, {"return_value": {"return_name": [""], "return_description": ["The property that the action applies to."], "return_type": ["String"]}, "method_description": "Sent to the delegate to request the property the action applies to.", "is_static": false, "method_name": "actionProperty", "class_name": "NSObject", "method_declar": "func actionProperty() -> String!", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Registers the observer object to receive KVO notifications for the key path relative to the object receiving this message.", "is_static": false, "method_name": "addObserver", "class_name": "NSObject", "method_declar": "func addObserver(_ observer: NSObject, forKeyPath keyPath: String, options: NSKeyValueObservingOptions = [], context: UnsafeMutableRawPointer?)", "params": [{"param_type": "NSObject", "param_description": "The object to register for KVO notifications. The observer must implement the key-value observing method observeValue(forKeyPath:of:change:context:).", "param_name": ["observer"]}, {"param_type": "String", "param_description": "The key path, relative to the object receiving this message, of the property to observe. This value must not be nil.", "param_name": ["forKeyPath", "keyPath"]}, {"param_type": "NSKeyValueObservingOptions", "param_description": "A combination of the NSKeyValueObservingOptions values that specifies what is included in observation notifications. For possible values, see NSKeyValueObservingOptions.", "param_name": ["options"]}, {"param_type": "UnsafeMutableRawPointer", "param_description": "Arbitrary data that is passed to observer in observeValue(forKeyPath:of:change:context:).", "param_name": ["context"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the error recovery was completed successfully, false otherwise."], "return_type": ["Boo"]}, "method_description": "Implemented to attempt a recovery from an error noted in an application-modal dialog.", "is_static": false, "method_name": "attemptRecovery", "class_name": "NSObject", "method_declar": "func attemptRecovery(fromError error: Error, optionIndex recoveryOptionIndex: Int) -> Bool", "params": [{"param_type": "Error", "param_description": "An NSError object that describes the error, including error recovery options.", "param_name": ["fromError", "error"]}, {"param_type": "Int", "param_description": "The index of the user selected recovery option in error's localized recovery array.", "param_name": ["optionIndex", "recoveryOptionIndex"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Implemented to attempt a recovery from an error noted in a document-modal sheet.", "is_static": false, "method_name": "attemptRecovery", "class_name": "NSObject", "method_declar": "func attemptRecovery(fromError error: Error, optionIndex recoveryOptionIndex: Int, delegate: Any?, didRecoverSelector: Selector?, contextInfo: UnsafeMutableRawPointer?)", "params": [{"param_type": "Error", "param_description": "An NSError object that describes the error, including error recovery options.", "param_name": ["fromError", "error"]}, {"param_type": "Int", "param_description": "The index of the user selected recovery option in error\u2019s localized recovery array.", "param_name": ["optionIndex", "recoveryOptionIndex"]}, {"param_type": "Any", "param_description": "An object that is the modal delegate.", "param_name": ["delegate"]}, {"param_type": "Selector", "param_description": "A selector identifying the method implemented by the modal delegate.", "param_name": ["didRecoverSelector"]}, {"param_type": "UnsafeMutableRawPointer", "param_description": "Arbitrary data associated with the attempt at error recovery, to be passed to delegate in didRecoverSelector.", "param_name": ["contextInfo"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent to the delegate to indicate the authorization object has been created or changed. If you have saved a copy of the authorization object for your own purposes, you should discard it and call authorization for a new authorization object.", "is_static": false, "method_name": "authorizationViewCreatedAuthorization", "class_name": "NSObject", "method_declar": "func authorizationViewCreatedAuthorization(_ view: SFAuthorizationView!)", "params": [{"param_type": "SFAuthorizationView!", "param_description": "", "param_name": ["view"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent to the delegate to indicate the user was authorized and the authorization view was changed to unlocked.", "is_static": false, "method_name": "authorizationViewDidAuthorize", "class_name": "NSObject", "method_declar": "func authorizationViewDidAuthorize(_ view: SFAuthorizationView!)", "params": [{"param_type": "SFAuthorizationView!", "param_description": "", "param_name": ["view"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent to the delegate to indicate the user was deauthorized and the authorization view was changed to locked.", "is_static": false, "method_name": "authorizationViewDidDeauthorize", "class_name": "NSObject", "method_declar": "func authorizationViewDidDeauthorize(_ view: SFAuthorizationView!)", "params": [{"param_type": "SFAuthorizationView!", "param_description": "", "param_name": ["view"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent to the delegate to indicate that the view\u2019s visibility has changed.", "is_static": false, "method_name": "authorizationViewDidHide", "class_name": "NSObject", "method_declar": "func authorizationViewDidHide(_ view: SFAuthorizationView!)", "params": [{"param_type": "SFAuthorizationView!", "param_description": "", "param_name": ["view"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent to the delegate to indicate that deauthorization is about to occur.", "is_static": false, "method_name": "authorizationViewReleasedAuthorization", "class_name": "NSObject", "method_declar": "func authorizationViewReleasedAuthorization(_ view: SFAuthorizationView!)", "params": [{"param_type": "SFAuthorizationView!", "param_description": "", "param_name": ["view"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Int"]}, "method_description": "Sent to the delegate when a user clicks the open lock icon.", "is_static": false, "method_name": "authorizationViewShouldDeauthorize", "class_name": "NSObject", "method_declar": "func authorizationViewShouldDeauthorize(_ view: SFAuthorizationView!) -> Int8", "params": [{"param_type": "SFAuthorizationView!", "param_description": "", "param_name": ["view"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Prepares the receiver for service after it has been loaded from an Interface Builder archive, or nib file.", "is_static": false, "method_name": "awakeFromNib", "class_name": "NSObject", "method_declar": "func awakeFromNib()", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "beginPreviewPanelControl", "class_name": "NSObject", "method_declar": "func beginPreviewPanelControl(_ panel: QLPreviewPanel!)", "params": [{"param_type": "QLPreviewPanel!", "param_description": "", "param_name": ["panel"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Establishes a binding between a given property of the receiver and the property of a given object specified by a given key path.", "is_static": false, "method_name": "bind", "class_name": "NSObject", "method_declar": "func bind(_ binding: NSBindingName, to observable: Any, withKeyPath keyPath: String, options: [NSBindingOption : Any]? = nil)", "params": [{"param_type": "NSBindingName", "param_description": "The key path for a property of the receiver previously exposed using the exposeBinding(_:) method.", "param_name": ["binding"]}, {"param_type": "Any", "param_description": "", "param_name": ["to", "observable"]}, {"param_type": "String", "param_description": "A key path to a property reachable from observableController. The elements in the path must be key-value observing compliant (see Key-Value Observing Programming Guide).", "param_name": ["withKeyPath", "keyPath"]}, {"param_type": "[NSBindingOption", "param_description": "A dictionary containing options for the binding, such as placeholder objects or an NSValueTransformer identifier as described in Constants. This value is optional\u2014pass nil to specify no options.", "param_name": ["options"]}, {"param_type": "Any] = nil", "param_description": "", "param_name": ["[NSBindingOption"]}]}, {"return_value": {"return_name": [""], "return_description": ["An array of candidates. The returned array should be an autoreleased object."], "return_type": ["[Any]"]}, "method_description": "Returns an array of candidates.", "is_static": false, "method_name": "candidates", "class_name": "NSObject", "method_declar": "func candidates(_ sender: Any!) -> [Any]!", "params": [{"param_type": "Any!", "param_description": "The client object requesting the candidates.", "param_name": ["sender"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Int"]}, "method_description": "Implements custom help behavior for the modal panel.", "is_static": false, "method_name": "certificatePanelShowHelp", "class_name": "NSObject", "method_declar": "func certificatePanelShowHelp(_ sender: SFCertificatePanel!) -> Int8", "params": [{"param_type": "SFCertificatePanel!", "param_description": "The certificate panel for which to implement custom help.", "param_name": ["sender"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Int"]}, "method_description": "Implements custom help behavior for the modal panel.", "is_static": false, "method_name": "chooseIdentityPanelShowHelp", "class_name": "NSObject", "method_declar": "func chooseIdentityPanelShowHelp(_ sender: SFChooseIdentityPanel!) -> Int8", "params": [{"param_type": "SFChooseIdentityPanel!", "param_description": "The choose identity panel for which to implement custom help.", "param_name": ["sender"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["An"]}, "method_description": "Uses type info from the class description and NSScriptCoercionHandler to attempt to convert value for key to the proper type, if necessary.", "is_static": false, "method_name": "coerceValue", "class_name": "NSObject", "method_declar": "func coerceValue(_ value: Any?, forKey key: String) -> Any?", "params": [{"param_type": "Any", "param_description": "", "param_name": ["value"]}, {"param_type": "String", "param_description": "", "param_name": ["forKey", "key"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Informs the controller that the composition should be committed.", "is_static": false, "method_name": "commitComposition", "class_name": "NSObject", "method_declar": "func commitComposition(_ sender: Any!)", "params": [{"param_type": "Any!", "param_description": "The client object requesting the input method to commit the composition.", "param_name": ["sender"]}]}, {"return_value": {"return_name": [""], "return_description": ["The current composed string, which can be an NSString or NSAttributedString object. The returned object should be an autoreleased object."], "return_type": ["Any"]}, "method_description": "Return the current composed string.", "is_static": false, "method_name": "composedString", "class_name": "NSObject", "method_declar": "func composedString(_ sender: Any!) -> Any!", "params": [{"param_type": "Any!", "param_description": "The client object requesting the string.", "param_name": ["sender"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Called after an input parameter in the composition parameter view has been edited.", "is_static": false, "method_name": "compositionParameterView", "class_name": "NSObject", "method_declar": "func compositionParameterView(_ parameterView: QCCompositionParameterView!, didChangeParameterWithKey portKey: String!)", "params": [{"param_type": "QCCompositionParameterView!", "param_description": "The composition parameter view in which the parameter changed.", "param_name": ["parameterView"]}, {"param_type": "String!", "param_description": "A key for one of the composition parameters, which is provided to you by the Quartz Composer engine.", "param_name": ["didChangeParameterWithKey", "portKey"]}]}, {"return_value": {"return_name": [""], "return_description": ["Returntrue if the port attributes should be displayed; false otherwise."], "return_type": ["Boo"]}, "method_description": "Allows you to define which composition parameters are visible in the user interface when the composition parameter view refreshes.  ", "is_static": false, "method_name": "compositionParameterView", "class_name": "NSObject", "method_declar": "func compositionParameterView(_ parameterView: QCCompositionParameterView!, shouldDisplayParameterWithKey portKey: String!, attributes portAttributes: [AnyHashable : Any]! = [:]) -> Bool", "params": [{"param_type": "QCCompositionParameterView!", "param_description": "The composition parameter view in which the selection changed.", "param_name": ["parameterView"]}, {"param_type": "String!", "param_description": "A key for one of the composition parameters, which is provided to you by the Quartz Composer engine.", "param_name": ["shouldDisplayParameterWithKey", "portKey"]}, {"param_type": "[AnyHashable", "param_description": "A dictionary of the attributes that you want to display in the user interface.", "param_name": ["attributes", "portAttributes"]}, {"param_type": "Any]!", "param_description": "", "param_name": ["[AnyHashable"]}, {"param_type": "]", "param_description": "", "param_name": ["Any]!", "=", "["]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Performs custom tasks when the selected composition in the composition picker view changes. ", "is_static": false, "method_name": "compositionPickerView", "class_name": "NSObject", "method_declar": "func compositionPickerView(_ pickerView: QCCompositionPickerView!, didSelect composition: QCComposition!)", "params": [{"param_type": "QCCompositionPickerView!", "param_description": "The composition picker view in which the selection changed.", "param_name": ["pickerView"]}, {"param_type": "QCComposition!", "param_description": "The selected composition or nil if the previously selected composition is no longer selected.", "param_name": ["didSelect", "composition"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Performs custom tasks when the composition picker view starts animating a composition.", "is_static": false, "method_name": "compositionPickerViewDidStartAnimating", "class_name": "NSObject", "method_declar": "func compositionPickerViewDidStartAnimating(_ pickerView: QCCompositionPickerView!)", "params": [{"param_type": "QCCompositionPickerView!", "param_description": "The composition picker view in which the composition started animating.", "param_name": ["pickerView"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Performs custom tasks when the composition picker view stops animating a composition.", "is_static": false, "method_name": "compositionPickerViewWillStopAnimating", "class_name": "NSObject", "method_declar": "func compositionPickerViewWillStopAnimating(_ pickerView: QCCompositionPickerView!)", "params": [{"param_type": "QCCompositionPickerView!", "param_description": "The composition picker view in which the composition stopped animating.", "param_name": ["pickerView"]}]}, {"return_value": {"return_name": [["[String"]], "return_description": ["A dictionary containing as keys the property names in keys, with corresponding values being the corresponding property values."], "return_type": ["Any"]}, "method_description": "Returns a dictionary containing the property values identified by each of the keys in a given array.", "is_static": false, "method_name": "dictionaryWithValues", "class_name": "NSObject", "method_declar": "func dictionaryWithValues(forKeys keys: [String]) -> [String : Any]", "params": [{"param_type": "[String]", "param_description": "An array containing NSString objects that identify properties of the receiver.", "param_name": ["forKeys", "keys"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Informs the observed object that the specified change has occurred on the indexes for a specified ordered to-many relationship.", "is_static": false, "method_name": "didChange", "class_name": "NSObject", "method_declar": "func didChange(_ changeKind: NSKeyValueChange, valuesAt indexes: IndexSet, forKey key: String)", "params": [{"param_type": "NSKeyValueChange", "param_description": "", "param_name": ["changeKind"]}, {"param_type": "IndexSet", "param_description": "The indexes of the to-many relationship that were affected by the change.", "param_name": ["valuesAt", "indexes"]}, {"param_type": "String", "param_description": "The name of a property that is an ordered to-many relationship.", "param_name": ["forKey", "key"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Informs the observed object that the value of a given property has changed.", "is_static": false, "method_name": "didChangeValue", "class_name": "NSObject", "method_declar": "func didChangeValue(forKey key: String)", "params": [{"param_type": "String", "param_description": "The name of the property that changed.", "param_name": ["forKey", "key"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Informs the observed object that the specified change was made to a specified unordered to-many relationship.", "is_static": false, "method_name": "didChangeValue", "class_name": "NSObject", "method_declar": "func didChangeValue(forKey key: String, withSetMutation mutationKind: NSKeyValueSetMutationKind, using objects: Set<AnyHashable>)", "params": [{"param_type": "String", "param_description": "The name of a property that is an unordered to-many relationship", "param_name": ["forKey", "key"]}, {"param_type": "NSKeyValueSetMutationKind", "param_description": "The type of change that was made.", "param_name": ["withSetMutation", "mutationKind"]}, {"param_type": "Set<AnyHashable>", "param_description": "The objects that were involved in the change (see NSKeyValueSetMutationKind).", "param_name": ["using", "objects"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the command is handled; false if the command is not handled. If not handled, the event passes to the client."], "return_type": ["Boo"]}, "method_description": "Processes a command  generated by user action such as typing certain keys or pressing the mouse button.", "is_static": false, "method_name": "didCommand", "class_name": "NSObject", "method_declar": "func didCommand(by aSelector: Selector!, client sender: Any!) -> Bool", "params": [{"param_type": "Selector!", "param_description": "The action associated with the key down event. The selector can be an action specified in the input method  dictionary of keys and actions (that is, an action specific to the input method) or one of the NSResponder action methods such as insertNewline: or deleteBackward:. By definition such action methods do not return a value.", "param_name": ["by", "aSelector"]}, {"param_type": "Any!", "param_description": "The client object sending the key down event.", "param_name": ["client", "sender"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the receiver contains object, otherwise false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether the receiver contains a given object.", "is_static": false, "method_name": "doesContain", "class_name": "NSObject", "method_declar": "func doesContain(_ object: Any) -> Bool", "params": [{"param_type": "Any", "param_description": "The object to search for in the receiver.", "param_name": ["object"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "endPreviewPanelControl", "class_name": "NSObject", "method_declar": "func endPreviewPanelControl(_ panel: QLPreviewPanel!)", "params": [{"param_type": "QLPreviewPanel!", "param_description": "", "param_name": ["panel"]}]}, {"return_value": {"return_name": [""], "return_description": ["true to have the NSExceptionHandler object handle the exception, false otherwise."], "return_type": ["Boo"]}, "method_description": "Implemented by the delegate to evaluate whether the delegating NSExceptionHandler instance should handle a given exception.", "is_static": false, "method_name": "exceptionHandler", "class_name": "NSObject", "method_declar": "func exceptionHandler(_ sender: NSExceptionHandler!, shouldHandle exception: NSException!, mask aMask: Int) -> Bool", "params": [{"param_type": "NSExceptionHandler!", "param_description": "The NSExceptionHandler object sending the message.", "param_name": ["sender"]}, {"param_type": "NSException!", "param_description": "An NSException object describing the exception to be evaluated.", "param_name": ["shouldHandle", "exception"]}, {"param_type": "Int", "param_description": "The bit mask indicating the types of exceptions handled by the NSExceptionHandler object. See Logging and Handling Constants and System Hang Constants for descriptions of the possible enum constants.", "param_name": ["mask", "aMask"]}]}, {"return_value": {"return_name": [""], "return_description": ["true to have the NSExceptionHandler object log the exception, false otherwise."], "return_type": ["Boo"]}, "method_description": "Implemented by the delegate to evaluate whether the delegating NSExceptionHandler instance should log a given exception.", "is_static": false, "method_name": "exceptionHandler", "class_name": "NSObject", "method_declar": "func exceptionHandler(_ sender: NSExceptionHandler!, shouldLogException exception: NSException!, mask aMask: Int) -> Bool", "params": [{"param_type": "NSExceptionHandler!", "param_description": "The NSExceptionHandler object sending the message.", "param_name": ["sender"]}, {"param_type": "NSException!", "param_description": "An NSException object describing the exception to be evaluated.", "param_name": ["shouldLogException", "exception"]}, {"param_type": "Int", "param_description": "The bit mask indicating the types of exceptions logged by the NSExceptionHandler object. See Logging and Handling Constants and System Hang Constants for descriptions of the possible enum constants.", "param_name": ["mask", "aMask"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the operation (which is often continuous within a loop) should proceed, otherwise false. "], "return_type": ["Boo"]}, "method_description": "An NSFileManager object sends this message to its handler for each error it encounters when copying, moving, removing, or linking files or directories. DeprecatedSee delegate methods for copy, move, remove, and link methods.", "is_static": false, "method_name": "fileManager", "class_name": "NSObject", "method_declar": "func fileManager(_ fm: FileManager, shouldProceedAfterError errorInfo: [AnyHashable : Any]) -> Bool", "params": [{"param_type": "FileManager", "param_description": "", "param_name": ["fm"]}, {"param_type": "[AnyHashable", "param_description": "A dictionary that contains two or three pieces of information (all NSString objects) related to the error:KeyValue@\"Path\"The path related to the error (usually the source path)@\"Error\"A description of the error@\"ToPath\" The destination path (not all errors)", "param_name": ["shouldProceedAfterError", "errorInfo"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[AnyHashable"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "An NSFileManager object sends this message to a handler immediately before attempting to move, copy, rename, or delete, or before attempting to link to a given path.DeprecatedSee delegate methods for copy, move, link, and remove methods.", "is_static": false, "method_name": "fileManager", "class_name": "NSObject", "method_declar": "func fileManager(_ fm: FileManager, willProcessPath path: String)", "params": [{"param_type": "FileManager", "param_description": "", "param_name": ["fm"]}, {"param_type": "String", "param_description": "The path or a file or directory that manager is about to attempt to move, copy, rename, delete, or link to.", "param_name": ["willProcessPath", "path"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "fileTransferServicesAbortComplete", "class_name": "NSObject", "method_declar": "func fileTransferServicesAbortComplete(_ inServices: OBEXFileTransferServices!, error inError: OBEXError)", "params": [{"param_type": "OBEXFileTransferServices!", "param_description": "", "param_name": ["inServices"]}, {"param_type": "OBEXError", "param_description": "", "param_name": ["error", "inError"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "fileTransferServicesConnectionComplete", "class_name": "NSObject", "method_declar": "func fileTransferServicesConnectionComplete(_ inServices: OBEXFileTransferServices!, error inError: OBEXError)", "params": [{"param_type": "OBEXFileTransferServices!", "param_description": "", "param_name": ["inServices"]}, {"param_type": "OBEXError", "param_description": "", "param_name": ["error", "inError"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "fileTransferServicesCopyRemoteFileComplete", "class_name": "NSObject", "method_declar": "func fileTransferServicesCopyRemoteFileComplete(_ inServices: OBEXFileTransferServices!, error inError: OBEXError)", "params": [{"param_type": "OBEXFileTransferServices!", "param_description": "", "param_name": ["inServices"]}, {"param_type": "OBEXError", "param_description": "", "param_name": ["error", "inError"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "fileTransferServicesCopyRemoteFileProgress", "class_name": "NSObject", "method_declar": "func fileTransferServicesCopyRemoteFileProgress(_ inServices: OBEXFileTransferServices!, transferProgress inProgressDescription: [AnyHashable : Any]!)", "params": [{"param_type": "OBEXFileTransferServices!", "param_description": "", "param_name": ["inServices"]}, {"param_type": "[AnyHashable", "param_description": "", "param_name": ["transferProgress", "inProgressDescription"]}, {"param_type": "Any]!", "param_description": "", "param_name": ["[AnyHashable"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "fileTransferServicesCreateFolderComplete", "class_name": "NSObject", "method_declar": "func fileTransferServicesCreateFolderComplete(_ inServices: OBEXFileTransferServices!, error inError: OBEXError, folder inFolderName: String!)", "params": [{"param_type": "OBEXFileTransferServices!", "param_description": "", "param_name": ["inServices"]}, {"param_type": "OBEXError", "param_description": "", "param_name": ["error", "inError"]}, {"param_type": "String!", "param_description": "", "param_name": ["folder", "inFolderName"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "fileTransferServicesDisconnectionComplete", "class_name": "NSObject", "method_declar": "func fileTransferServicesDisconnectionComplete(_ inServices: OBEXFileTransferServices!, error inError: OBEXError)", "params": [{"param_type": "OBEXFileTransferServices!", "param_description": "", "param_name": ["inServices"]}, {"param_type": "OBEXError", "param_description": "", "param_name": ["error", "inError"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "fileTransferServicesFilePreparationComplete", "class_name": "NSObject", "method_declar": "func fileTransferServicesFilePreparationComplete(_ inServices: OBEXFileTransferServices!, error inError: OBEXError)", "params": [{"param_type": "OBEXFileTransferServices!", "param_description": "", "param_name": ["inServices"]}, {"param_type": "OBEXError", "param_description": "", "param_name": ["error", "inError"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "fileTransferServicesPathChangeComplete", "class_name": "NSObject", "method_declar": "func fileTransferServicesPathChangeComplete(_ inServices: OBEXFileTransferServices!, error inError: OBEXError, finalPath inPath: String!)", "params": [{"param_type": "OBEXFileTransferServices!", "param_description": "", "param_name": ["inServices"]}, {"param_type": "OBEXError", "param_description": "", "param_name": ["error", "inError"]}, {"param_type": "String!", "param_description": "", "param_name": ["finalPath", "inPath"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "fileTransferServicesRemoveItemComplete", "class_name": "NSObject", "method_declar": "func fileTransferServicesRemoveItemComplete(_ inServices: OBEXFileTransferServices!, error inError: OBEXError, removedItem inItemName: String!)", "params": [{"param_type": "OBEXFileTransferServices!", "param_description": "", "param_name": ["inServices"]}, {"param_type": "OBEXError", "param_description": "", "param_name": ["error", "inError"]}, {"param_type": "String!", "param_description": "", "param_name": ["removedItem", "inItemName"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "fileTransferServicesRetrieveFolderListingComplete", "class_name": "NSObject", "method_declar": "func fileTransferServicesRetrieveFolderListingComplete(_ inServices: OBEXFileTransferServices!, error inError: OBEXError, listing inListing: [Any]!)", "params": [{"param_type": "OBEXFileTransferServices!", "param_description": "", "param_name": ["inServices"]}, {"param_type": "OBEXError", "param_description": "", "param_name": ["error", "inError"]}, {"param_type": "[Any]!", "param_description": "", "param_name": ["listing", "inListing"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "fileTransferServicesSendFileComplete", "class_name": "NSObject", "method_declar": "func fileTransferServicesSendFileComplete(_ inServices: OBEXFileTransferServices!, error inError: OBEXError)", "params": [{"param_type": "OBEXFileTransferServices!", "param_description": "", "param_name": ["inServices"]}, {"param_type": "OBEXError", "param_description": "", "param_name": ["error", "inError"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "fileTransferServicesSendFileProgress", "class_name": "NSObject", "method_declar": "func fileTransferServicesSendFileProgress(_ inServices: OBEXFileTransferServices!, transferProgress inProgressDescription: [AnyHashable : Any]!)", "params": [{"param_type": "OBEXFileTransferServices!", "param_description": "", "param_name": ["inServices"]}, {"param_type": "[AnyHashable", "param_description": "", "param_name": ["transferProgress", "inProgressDescription"]}, {"param_type": "Any]!", "param_description": "", "param_name": ["[AnyHashable"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Performs cleanup when the scripting environment is reset.", "is_static": false, "method_name": "finalizeForWebScript", "class_name": "NSObject", "method_declar": "func finalizeForWebScript()", "params": []}, {"return_value": {"return_name": [""], "return_description": ["If the Font panel delegate returns true, fontName is listed; if the delegate returns false, it isn\u2019t."], "return_type": ["Boo"]}, "method_description": "Requests permission from the Font panel delegate to display the given font name in the Font panel.DeprecatedUse NSFontCollection for providing filtered font lists.", "is_static": false, "method_name": "fontManager", "class_name": "NSObject", "method_declar": "func fontManager(_ sender: Any, willIncludeFont fontName: String) -> Bool", "params": [{"param_type": "Any", "param_description": "", "param_name": ["sender"]}, {"param_type": "String", "param_description": "The full PostScript name of the font to display, such as Helvetica-BoldOblique or Helvetica-Narrow-Bold.", "param_name": ["willIncludeFont", "fontName"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the event is handled; otherwise false."], "return_type": ["Boo"]}, "method_description": "Handles key down and mouse events.", "is_static": false, "method_name": "handle", "class_name": "NSObject", "method_declar": "func handle(_ event: NSEvent!, client sender: Any!) -> Bool", "params": [{"param_type": "NSEvent!", "param_description": "The event to handle.", "param_name": ["event"]}, {"param_type": "Any!", "param_description": "The client object sending the event.", "param_name": ["client", "sender"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "hash", "class_name": "NSObject", "method_declar": "func hash(into hasher: inout Hasher)", "params": [{"param_type": "inout Hasher", "param_description": "", "param_name": ["into", "hasher"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Performs custom tasks when the user right-clicks the image browser view background.", "is_static": false, "method_name": "imageBrowser", "class_name": "NSObject", "method_declar": "func imageBrowser(_ aBrowser: IKImageBrowserView!, backgroundWasRightClickedWith event: NSEvent!)", "params": [{"param_type": "IKImageBrowserView!", "param_description": "An image browser view.", "param_name": ["aBrowser"]}, {"param_type": "NSEvent!", "param_description": "The event that invoked the method.", "param_name": ["backgroundWasRightClickedWith", "event"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Performs custom tasks when the user double-clicks an item in the image browser view.", "is_static": false, "method_name": "imageBrowser", "class_name": "NSObject", "method_declar": "func imageBrowser(_ aBrowser: IKImageBrowserView!, cellWasDoubleClickedAt index: Int)", "params": [{"param_type": "IKImageBrowserView!", "param_description": "An image browser view.", "param_name": ["aBrowser"]}, {"param_type": "Int", "param_description": "The index of the cell.", "param_name": ["cellWasDoubleClickedAt", "index"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Performs custom tasks when the user right-clicks an item in the image browser view. ", "is_static": false, "method_name": "imageBrowser", "class_name": "NSObject", "method_declar": "func imageBrowser(_ aBrowser: IKImageBrowserView!, cellWasRightClickedAt index: Int, with event: NSEvent!)", "params": [{"param_type": "IKImageBrowserView!", "param_description": "An image browser view.", "param_name": ["aBrowser"]}, {"param_type": "Int", "param_description": "The index of the cell.", "param_name": ["cellWasRightClickedAt", "index"]}, {"param_type": "NSEvent!", "param_description": "The event that invoked the method.", "param_name": ["with", "event"]}]}, {"return_value": {"return_name": [["[AnyHashable"]], "return_description": ["A dictionary that defines the group. The keys in this dictionary can be any of the following constants: IKImageBrowserGroupStyleKey, IKImageBrowserGroupBackgroundColorKey, IKImageBrowserGroupTitleKey, and IKImageBrowserGroupRangeKey. For more information on these constants, see IKImageBrowserView."], "return_type": ["Any]"]}, "method_description": "Returns the group at the specified index.", "is_static": false, "method_name": "imageBrowser", "class_name": "NSObject", "method_declar": "func imageBrowser(_ aBrowser: IKImageBrowserView!, groupAt index: Int) -> [AnyHashable : Any]!", "params": [{"param_type": "IKImageBrowserView!", "param_description": "An image browser view.", "param_name": ["aBrowser"]}, {"param_type": "Int", "param_description": "The index of the group you want to retrieve.", "param_name": ["groupAt", "index"]}]}, {"return_value": {"return_name": [""], "return_description": ["An IKImageBrowserItem object. "], "return_type": ["Any"]}, "method_description": "Returns an object for the item in an image browser view that corresponds to the specified index.", "is_static": false, "method_name": "imageBrowser", "class_name": "NSObject", "method_declar": "func imageBrowser(_ aBrowser: IKImageBrowserView!, itemAt index: Int) -> Any!", "params": [{"param_type": "IKImageBrowserView!", "param_description": "An image browser view.", "param_name": ["aBrowser"]}, {"param_type": "Int", "param_description": "The index of the item you want to retrieve.", "param_name": ["itemAt", "index"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if successful; false otherwise."], "return_type": ["Boo"]}, "method_description": "Signals that the specified items should be moved to the specified destination. ", "is_static": false, "method_name": "imageBrowser", "class_name": "NSObject", "method_declar": "func imageBrowser(_ aBrowser: IKImageBrowserView!, moveItemsAt indexes: IndexSet!, to destinationIndex: Int) -> Bool", "params": [{"param_type": "IKImageBrowserView!", "param_description": "An image browser view.", "param_name": ["aBrowser"]}, {"param_type": "IndexSet!", "param_description": "The indexes of the items that should be reordered.", "param_name": ["moveItemsAt", "indexes"]}, {"param_type": "Int", "param_description": "The starting index of the destination the items should be moved to.", "param_name": ["to", "destinationIndex"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Signals that a remove operation should be applied to the specified items.", "is_static": false, "method_name": "imageBrowser", "class_name": "NSObject", "method_declar": "func imageBrowser(_ aBrowser: IKImageBrowserView!, removeItemsAt indexes: IndexSet!)", "params": [{"param_type": "IKImageBrowserView!", "param_description": "An image browser view.", "param_name": ["aBrowser"]}, {"param_type": "IndexSet!", "param_description": "The indexes of the items that should be removed.", "param_name": ["removeItemsAt", "indexes"]}]}, {"return_value": {"return_name": [""], "return_description": ["The number of items written to the pasteboard."], "return_type": ["In"]}, "method_description": "Signals that a drag should begin.", "is_static": false, "method_name": "imageBrowser", "class_name": "NSObject", "method_declar": "func imageBrowser(_ aBrowser: IKImageBrowserView!, writeItemsAt itemIndexes: IndexSet!, to pasteboard: NSPasteboard!) -> Int", "params": [{"param_type": "IKImageBrowserView!", "param_description": "An image browser view.", "param_name": ["aBrowser"]}, {"param_type": "IndexSet!", "param_description": "The indexes of the items that should be dragged.", "param_name": ["writeItemsAt", "itemIndexes"]}, {"param_type": "NSPasteboard!", "param_description": "The pasteboard to copy the items to.", "param_name": ["to", "pasteboard"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Performs custom tasks when the selection changes.", "is_static": false, "method_name": "imageBrowserSelectionDidChange", "class_name": "NSObject", "method_declar": "func imageBrowserSelectionDidChange(_ aBrowser: IKImageBrowserView!)", "params": [{"param_type": "IKImageBrowserView!", "param_description": "An image browser view.", "param_name": ["aBrowser"]}]}, {"return_value": {"return_name": [""], "return_description": ["The image to display; can return nil if the item has no image to display."], "return_type": ["Any"]}, "method_description": "Returns the image to display.", "is_static": false, "method_name": "imageRepresentation", "class_name": "NSObject", "method_declar": "func imageRepresentation() -> Any!", "params": []}, {"return_value": {"return_name": [""], "return_description": ["A string that specifies the image representation type. The string can be any of the constants defined in Image Representation Types. "], "return_type": ["String"]}, "method_description": "Returns the representation type of the image to display.", "is_static": false, "method_name": "imageRepresentationType", "class_name": "NSObject", "method_declar": "func imageRepresentationType() -> String!", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The  display subtitle of the image."], "return_type": ["String"]}, "method_description": " Returns the display subtitle of the image.", "is_static": false, "method_name": "imageSubtitle", "class_name": "NSObject", "method_declar": "func imageSubtitle() -> String!", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The display title of the image."], "return_type": ["String"]}, "method_description": "Returns the display title of the image. ", "is_static": false, "method_name": "imageTitle", "class_name": "NSObject", "method_declar": "func imageTitle() -> String!", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The string that identifies the data source item"], "return_type": ["String"]}, "method_description": "Returns a unique string that identifies the data source item.", "is_static": false, "method_name": "imageUID", "class_name": "NSObject", "method_declar": "func imageUID() -> String!", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The version of the item."], "return_type": ["In"]}, "method_description": "Returns the version of the item. ", "is_static": false, "method_name": "imageVersion", "class_name": "NSObject", "method_declar": "func imageVersion() -> Int", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The index of the specified accessibility element, or NSNotFound if the element does not exist. "], "return_type": ["In"]}, "method_description": "Returns the index of the specified accessibility element.", "is_static": false, "method_name": "index", "class_name": "NSObject", "method_declar": "func index(ofAccessibilityElement element: Any) -> Int", "params": [{"param_type": "Any", "param_description": "The accessibility element.", "param_name": ["ofAccessibilityElement", "element"]}]}, {"return_value": {"return_name": [""], "return_description": ["A zero-based array of NSNumber objects that identify the zero-based indices of the container objects that match specifier, or nil if no matching objects were found."], "return_type": ["[NSNumber"]}, "method_description": "Returns the indices of the specified container objects.", "is_static": false, "method_name": "indicesOfObjects", "class_name": "NSObject", "method_declar": "func indicesOfObjects(byEvaluatingObjectSpecifier specifier: NSScriptObjectSpecifier) -> [NSNumber]?", "params": [{"param_type": "NSScriptObjectSpecifier", "param_description": "An object specifier for the container objects for which to obtain the indices.", "param_name": ["byEvaluatingObjectSpecifier", "specifier"]}]}, {"return_value": {"return_name": [["[NSBindingInfoKey"]], "return_description": ["A dictionary with information about binding, or nil if the binding is not bound. The dictionary contains three key/value pairs: NSObservedObjectKey: object bound, NSObservedKeyPathKey: key path bound, NSOptionsKey: dictionary with the options and their values for the bindings. "], "return_type": ["Any"]}, "method_description": "Returns a dictionary describing the receiver\u2019s binding.", "is_static": false, "method_name": "infoForBinding", "class_name": "NSObject", "method_declar": "func infoForBinding(_ binding: NSBindingName) -> [NSBindingInfoKey : Any]?", "params": [{"param_type": "NSBindingName", "param_description": "The name of a binding.", "param_name": ["binding"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the input is accepted; otherwise false."], "return_type": ["Boo"]}, "method_description": "Handles key down events that do not map to an action method.", "is_static": false, "method_name": "inputText", "class_name": "NSObject", "method_declar": "func inputText(_ string: String!, client sender: Any!) -> Bool", "params": [{"param_type": "String!", "param_description": "The key down event, which is the text input by the client.", "param_name": ["string"]}, {"param_type": "Any!", "param_description": "The client object sending the key down events.", "param_name": ["client", "sender"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the input is  accepted; otherwise false."], "return_type": ["Boo"]}, "method_description": "Receives Unicode, the key code that generated it, and any modifier flags.", "is_static": false, "method_name": "inputText", "class_name": "NSObject", "method_declar": "func inputText(_ string: String!, key keyCode: Int, modifiers flags: Int, client sender: Any!) -> Bool", "params": [{"param_type": "String!", "param_description": "The text input by the client.", "param_name": ["string"]}, {"param_type": "Int", "param_description": "The key code for the associated Unicode.", "param_name": ["key", "keyCode"]}, {"param_type": "Int", "param_description": "The modifier flags.", "param_name": ["modifiers", "flags"]}, {"param_type": "Any!", "param_description": "The client object.", "param_name": ["client", "sender"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Inserts an object at the specified index in the collection specified by the passed key.", "is_static": false, "method_name": "insertValue", "class_name": "NSObject", "method_declar": "func insertValue(_ value: Any, at index: Int, inPropertyWithKey key: String)", "params": [{"param_type": "Any", "param_description": "", "param_name": ["value"]}, {"param_type": "Int", "param_description": "", "param_name": ["at", "index"]}, {"param_type": "String", "param_description": "", "param_name": ["inPropertyWithKey", "key"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Inserts an object in the collection specified by the passed key.", "is_static": false, "method_name": "insertValue", "class_name": "NSObject", "method_declar": "func insertValue(_ value: Any, inPropertyWithKey key: String)", "params": [{"param_type": "Any", "param_description": "", "param_name": ["value"]}, {"param_type": "String", "param_description": "", "param_name": ["inPropertyWithKey", "key"]}]}, {"return_value": {"return_name": [""], "return_description": ["The result of invoking the default method."], "return_type": ["Any"]}, "method_description": "Executes when a script attempts to invoke a method on an exposed object directly.", "is_static": false, "method_name": "invokeDefaultMethod", "class_name": "NSObject", "method_declar": "func invokeDefaultMethod(withArguments arguments: [Any]!) -> Any!", "params": [{"param_type": "[Any]!", "param_description": "", "param_name": ["withArguments", "arguments"]}]}, {"return_value": {"return_name": [""], "return_description": ["The result of invoking the undefined method."], "return_type": ["Any"]}, "method_description": "Handles undefined method invocation from the scripting environment.", "is_static": false, "method_name": "invokeUndefinedMethod", "class_name": "NSObject", "method_declar": "func invokeUndefinedMethod(fromWebScript name: String!, withArguments arguments: [Any]!) -> Any!", "params": [{"param_type": "String!", "param_description": "The name of the undefined method.", "param_name": ["fromWebScript", "name"]}, {"param_type": "[Any]!", "param_description": "", "param_name": ["withArguments", "arguments"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the receiver is considered to be \u201clike\u201d aString when the case of characters in the receiver is ignored, otherwise false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether receiver is considered to be \u201clike\u201d a given string when the case of characters in the receiver is ignored.", "is_static": false, "method_name": "isCaseInsensitiveLike", "class_name": "NSObject", "method_declar": "func isCaseInsensitiveLike(_ object: String) -> Bool", "params": [{"param_type": "String", "param_description": "", "param_name": ["object"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the receiver is equal to object, otherwise false. In effect returns false if receiver is nil."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether the receiver is equal to another given object.", "is_static": false, "method_name": "isEqual", "class_name": "NSObject", "method_declar": "func isEqual(to object: Any?) -> Bool", "params": [{"param_type": "Any", "param_description": "The object with which to compare the receiver.", "param_name": ["to", "object"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the receiver is greater than object, otherwise false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether the receiver is greater than another given object.", "is_static": false, "method_name": "isGreaterThan", "class_name": "NSObject", "method_declar": "func isGreaterThan(_ object: Any?) -> Bool", "params": [{"param_type": "Any", "param_description": "The object with which to compare the receiver.", "param_name": ["object"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the receiver is greater than or equal to object, otherwise false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether the receiver is greater than or equal to another given object.", "is_static": false, "method_name": "isGreaterThanOrEqual", "class_name": "NSObject", "method_declar": "func isGreaterThanOrEqual(to object: Any?) -> Bool", "params": [{"param_type": "Any", "param_description": "The object with which to compare the receiver.", "param_name": ["to", "object"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the receiver is less than object, otherwise false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether the receiver is less than another given object.", "is_static": false, "method_name": "isLessThan", "class_name": "NSObject", "method_declar": "func isLessThan(_ object: Any?) -> Bool", "params": [{"param_type": "Any", "param_description": "The object with which to compare the receiver.", "param_name": ["object"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the receiver is less than or equal to object, otherwise false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether the receiver is less than or equal to another given object. ", "is_static": false, "method_name": "isLessThanOrEqual", "class_name": "NSObject", "method_declar": "func isLessThanOrEqual(to object: Any?) -> Bool", "params": [{"param_type": "Any", "param_description": "The object with which to compare the receiver.", "param_name": ["to", "object"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the receiver is considered to be \u201clike\u201d object, otherwise false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether the receiver is \"like\" another given object.", "is_static": false, "method_name": "isLike", "class_name": "NSObject", "method_declar": "func isLike(_ object: String) -> Bool", "params": [{"param_type": "String", "param_description": "The object with which to compare the receiver.", "param_name": ["object"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the receiver is not equal to object, otherwise false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether the receiver is not equal to another given object.", "is_static": false, "method_name": "isNotEqual", "class_name": "NSObject", "method_declar": "func isNotEqual(to object: Any?) -> Bool", "params": [{"param_type": "Any", "param_description": "The object with which to compare the receiver.", "param_name": ["to", "object"]}]}, {"return_value": {"return_name": [""], "return_description": ["A mutable array proxy that provides read-write access to the ordered to-many relationship specified by key."], "return_type": ["NSMutableArra"]}, "method_description": "Returns a mutable array proxy that provides read-write access to an ordered to-many relationship specified by a given key.", "is_static": false, "method_name": "mutableArrayValue", "class_name": "NSObject", "method_declar": "func mutableArrayValue(forKey key: String) -> NSMutableArray", "params": [{"param_type": "String", "param_description": "The name of an ordered to-many relationship.", "param_name": ["forKey", "key"]}]}, {"return_value": {"return_name": [""], "return_description": ["A mutable array that provides read-write access to the ordered to-many relationship specified by keyPath."], "return_type": ["NSMutableArra"]}, "method_description": "Returns a mutable array that provides read-write access to the ordered to-many relationship specified by a given key path.", "is_static": false, "method_name": "mutableArrayValue", "class_name": "NSObject", "method_declar": "func mutableArrayValue(forKeyPath keyPath: String) -> NSMutableArray", "params": [{"param_type": "String", "param_description": "A key path, relative to the receiver, to an ordered to-many relationship.", "param_name": ["forKeyPath", "keyPath"]}]}, {"return_value": {"return_name": [""], "return_description": ["A mutable ordered set that provides read-write access to the uniquing to-many relationship specified by key."], "return_type": ["NSMutableOrderedSe"]}, "method_description": "Returns a mutable ordered set that provides read-write access to the uniquing ordered to-many relationship specified by a given key.", "is_static": false, "method_name": "mutableOrderedSetValue", "class_name": "NSObject", "method_declar": "func mutableOrderedSetValue(forKey key: String) -> NSMutableOrderedSet", "params": [{"param_type": "String", "param_description": "The name of a uniquing ordered to-many relationship.", "param_name": ["forKey", "key"]}]}, {"return_value": {"return_name": [""], "return_description": ["A mutable ordered set that provides read-write access to the uniquing to-many relationship specified by keyPath."], "return_type": ["NSMutableOrderedSe"]}, "method_description": "Returns a mutable ordered set that provides read-write access to the uniquing ordered to-many relationship specified by a given key path.", "is_static": false, "method_name": "mutableOrderedSetValue", "class_name": "NSObject", "method_declar": "func mutableOrderedSetValue(forKeyPath keyPath: String) -> NSMutableOrderedSet", "params": [{"param_type": "String", "param_description": "A key path, relative to the receiver, to a uniquing ordered to-many relationship represented by a set.", "param_name": ["forKeyPath", "keyPath"]}]}, {"return_value": {"return_name": [""], "return_description": ["A mutable set that provides read-write access to the unordered to-many relationship specified by key."], "return_type": ["NSMutableSe"]}, "method_description": "Returns a mutable set proxy that provides read-write access to the unordered to-many relationship specified by a given key.", "is_static": false, "method_name": "mutableSetValue", "class_name": "NSObject", "method_declar": "func mutableSetValue(forKey key: String) -> NSMutableSet", "params": [{"param_type": "String", "param_description": "The name of an unordered to-many relationship.", "param_name": ["forKey", "key"]}]}, {"return_value": {"return_name": [""], "return_description": ["A mutable set that provides read-write access to the unordered to-many relationship specified by keyPath."], "return_type": ["NSMutableSe"]}, "method_description": "Returns a mutable set that provides read-write access to the unordered to-many relationship specified by a given key path.", "is_static": false, "method_name": "mutableSetValue", "class_name": "NSObject", "method_declar": "func mutableSetValue(forKeyPath keyPath: String) -> NSMutableSet", "params": [{"param_type": "String", "param_description": "A key path, relative to the receiver, to an unordered to-many relationship.", "param_name": ["forKeyPath", "keyPath"]}]}, {"return_value": {"return_name": [""], "return_description": ["An array of the names of files (not full paths) that the receiver promises to create at dropDestination."], "return_type": ["[String"]}, "method_description": "Returns the names of the files that the receiver promises to create at a specified location.", "is_static": false, "method_name": "namesOfPromisedFilesDropped", "class_name": "NSObject", "method_declar": "func namesOfPromisedFilesDropped(atDestination dropDestination: URL) -> [String]?", "params": [{"param_type": "URL", "param_description": "A URL object that identifies the location at which the promised files will be created.", "param_name": ["atDestination", "dropDestination"]}]}, {"return_value": {"return_name": [""], "return_description": ["The number of groups."], "return_type": ["In"]}, "method_description": "Returns the number of groups in an image browser view.", "is_static": false, "method_name": "numberOfGroups", "class_name": "NSObject", "method_declar": "func numberOfGroups(inImageBrowser aBrowser: IKImageBrowserView!) -> Int", "params": [{"param_type": "IKImageBrowserView!", "param_description": "An image browser view.", "param_name": ["inImageBrowser", "aBrowser"]}]}, {"return_value": {"return_name": [""], "return_description": ["The number of records managed by the image browser view."], "return_type": ["In"]}, "method_description": "Returns the number of records managed by the data source object.", "is_static": false, "method_name": "numberOfItems", "class_name": "NSObject", "method_declar": "func numberOfItems(inImageBrowser aBrowser: IKImageBrowserView!) -> Int", "params": [{"param_type": "IKImageBrowserView!", "param_description": "An image browser view.", "param_name": ["inImageBrowser", "aBrowser"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Informs the observing object when the value at the specified key path relative to the observed object has changed.", "is_static": false, "method_name": "observeValue", "class_name": "NSObject", "method_declar": "func observeValue(forKeyPath keyPath: String?, of object: Any?, change: [NSKeyValueChangeKey : Any]?, context: UnsafeMutableRawPointer?)", "params": [{"param_type": "String", "param_description": "The key path, relative to object, to the value that has changed.", "param_name": ["forKeyPath", "keyPath"]}, {"param_type": "Any", "param_description": "The source object of the key path keyPath. ", "param_name": ["of", "object"]}, {"param_type": "[NSKeyValueChangeKey", "param_description": "A dictionary that describes the changes that have been made to the value of the property at the key path keyPath relative to object. Entries are described in Change Dictionary Keys.", "param_name": ["change"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[NSKeyValueChangeKey"]}, {"param_type": "UnsafeMutableRawPointer", "param_description": "The value that was provided when the observer was registered to receive key-value observation notifications.", "param_name": ["context"]}]}, {"return_value": {"return_name": [""], "return_description": ["Returns an array of NSAttributeDescription that describe the options for binding. "], "return_type": ["[NSAttributeDescription"]}, "method_description": "Returns an array describing the options for the specified binding.", "is_static": false, "method_name": "optionDescriptionsForBinding", "class_name": "NSObject", "method_declar": "func optionDescriptionsForBinding(_ binding: NSBindingName) -> [NSAttributeDescription]", "params": [{"param_type": "NSBindingName", "param_description": "The name of a binding", "param_name": ["binding"]}]}, {"return_value": {"return_name": [""], "return_description": ["The original string of precomposed unicode characters. If an input method stores the original input text, it returns that text. The return value is an attributed string so that the input method can restore changes they made to the font, and other attributes, if necessary. The returned object should be an autoreleased object."], "return_type": ["NSAttributedString"]}, "method_description": "Return the string that consists of the precomposed Unicode characters.", "is_static": false, "method_name": "originalString", "class_name": "NSObject", "method_declar": "func originalString(_ sender: Any!) -> NSAttributedString!", "params": [{"param_type": "Any!", "param_description": "The client object requesting the original string.", "param_name": ["sender"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent to the delegate to perform the action.", "is_static": false, "method_name": "performAction", "class_name": "NSObject", "method_declar": "func performAction(for person: ABPerson!, identifier: String!)", "params": [{"param_type": "ABPerson!", "param_description": "The person on which the action will be taken.", "param_name": ["for", "person"]}, {"param_type": "String!", "param_description": "The unique identifier of the selected value.", "param_name": ["identifier"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Called when a designable object is created in Interface Builder.", "is_static": false, "method_name": "prepareForInterfaceBuilder", "class_name": "NSObject", "method_declar": "func prepareForInterfaceBuilder()", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Supplies data to a CIImage object.", "is_static": false, "method_name": "provideImageData", "class_name": "NSObject", "method_declar": "func provideImageData(_ data: UnsafeMutableRawPointer, bytesPerRow rowbytes: Int, origin x: Int, _ y: Int, size width: Int, _ height: Int, userInfo info: Any?)", "params": [{"param_type": "UnsafeMutableRawPointer", "param_description": "A pointer to image data. Note that data[0] refers to the first byte of the requested subimage, not the larger image buffer.", "param_name": ["data"]}, {"param_type": "Int", "param_description": "The number of bytes per row.", "param_name": ["bytesPerRow", "rowbytes"]}, {"param_type": "Int", "param_description": "The x origin of the image data.", "param_name": ["origin", "x"]}, {"param_type": "Int", "param_description": "The y origin of the image data.", "param_name": ["y"]}, {"param_type": "Int", "param_description": "The width of the image data.", "param_name": ["size", "width"]}, {"param_type": "Int", "param_description": "The height of the image data.", "param_name": ["height"]}, {"param_type": "Any", "param_description": "User supplied data, which is optional.", "param_name": ["userInfo", "info"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "quartzFilterManager", "class_name": "NSObject", "method_declar": "func quartzFilterManager(_ sender: QuartzFilterManager!, didAdd filter: QuartzFilter!)", "params": [{"param_type": "QuartzFilterManager!", "param_description": "", "param_name": ["sender"]}, {"param_type": "QuartzFilter!", "param_description": "", "param_name": ["didAdd", "filter"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "quartzFilterManager", "class_name": "NSObject", "method_declar": "func quartzFilterManager(_ sender: QuartzFilterManager!, didModifyFilter filter: QuartzFilter!)", "params": [{"param_type": "QuartzFilterManager!", "param_description": "", "param_name": ["sender"]}, {"param_type": "QuartzFilter!", "param_description": "", "param_name": ["didModifyFilter", "filter"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "quartzFilterManager", "class_name": "NSObject", "method_declar": "func quartzFilterManager(_ sender: QuartzFilterManager!, didRemove filter: QuartzFilter!)", "params": [{"param_type": "QuartzFilterManager!", "param_description": "", "param_name": ["sender"]}, {"param_type": "QuartzFilter!", "param_description": "", "param_name": ["didRemove", "filter"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "quartzFilterManager", "class_name": "NSObject", "method_declar": "func quartzFilterManager(_ sender: QuartzFilterManager!, didSelect filter: QuartzFilter!)", "params": [{"param_type": "QuartzFilterManager!", "param_description": "", "param_name": ["sender"]}, {"param_type": "QuartzFilter!", "param_description": "", "param_name": ["didSelect", "filter"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "readLinkQuality", "class_name": "NSObject", "method_declar": "func readLinkQuality(forDeviceComplete controller: Any!, device: IOBluetoothDevice!, info: UnsafeMutablePointer<BluetoothHCILinkQualityInfo>!, error: IOReturn)", "params": [{"param_type": "Any!", "param_description": "", "param_name": ["forDeviceComplete", "controller"]}, {"param_type": "IOBluetoothDevice!", "param_description": "", "param_name": ["device"]}, {"param_type": "UnsafeMutablePointer<BluetoothHCILinkQualityInfo>!", "param_description": "", "param_name": ["info"]}, {"param_type": "IOReturn", "param_description": "", "param_name": ["error"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "readRSSI", "class_name": "NSObject", "method_declar": "func readRSSI(forDeviceComplete controller: Any!, device: IOBluetoothDevice!, info: UnsafeMutablePointer<BluetoothHCIRSSIInfo>!, error: IOReturn)", "params": [{"param_type": "Any!", "param_description": "", "param_name": ["forDeviceComplete", "controller"]}, {"param_type": "IOBluetoothDevice!", "param_description": "", "param_name": ["device"]}, {"param_type": "UnsafeMutablePointer<BluetoothHCIRSSIInfo>!", "param_description": "", "param_name": ["info"]}, {"param_type": "IOReturn", "param_description": "", "param_name": ["error"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Stops the observer object from receiving change notifications for the property specified by the key path relative to the object receiving this message.", "is_static": false, "method_name": "removeObserver", "class_name": "NSObject", "method_declar": "func removeObserver(_ observer: NSObject, forKeyPath keyPath: String)", "params": [{"param_type": "NSObject", "param_description": "The object to remove as an observer.", "param_name": ["observer"]}, {"param_type": "String", "param_description": "A key-path, relative to the object receiving this message, for which observer is registered to receive KVO change notifications.", "param_name": ["forKeyPath", "keyPath"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Stops the observer object from receiving change notifications for the property specified by the key path relative to the object receiving this message, given the context.", "is_static": false, "method_name": "removeObserver", "class_name": "NSObject", "method_declar": "func removeObserver(_ observer: NSObject, forKeyPath keyPath: String, context: UnsafeMutableRawPointer?)", "params": [{"param_type": "NSObject", "param_description": "The object to remove as an observer.", "param_name": ["observer"]}, {"param_type": "String", "param_description": "A key-path, relative to the observed object, for which observer is registered to receive KVO change notifications.", "param_name": ["forKeyPath", "keyPath"]}, {"param_type": "UnsafeMutableRawPointer", "param_description": "Arbitrary data that more specifically identifies the observer to be removed.", "param_name": ["context"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Removes the object at the specified index from the collection specified by the passed key.", "is_static": false, "method_name": "removeValue", "class_name": "NSObject", "method_declar": "func removeValue(at index: Int, fromPropertyWithKey key: String)", "params": [{"param_type": "Int", "param_description": "", "param_name": ["at", "index"]}, {"param_type": "String", "param_description": "", "param_name": ["fromPropertyWithKey", "key"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Replaces the object at the specified index in the collection specified by the passed key.", "is_static": false, "method_name": "replaceValue", "class_name": "NSObject", "method_declar": "func replaceValue(at index: Int, inPropertyWithKey key: String, withValue value: Any)", "params": [{"param_type": "Int", "param_description": "", "param_name": ["at", "index"]}, {"param_type": "String", "param_description": "", "param_name": ["inPropertyWithKey", "key"]}, {"param_type": "Any", "param_description": "", "param_name": ["withValue", "value"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the specified type should be shown in the save options, otherwise false."], "return_type": ["Boo"]}, "method_description": "Called to determine if the specified uniform type identifier should be shown in the save panel.", "is_static": false, "method_name": "saveOptions", "class_name": "NSObject", "method_declar": "func saveOptions(_ saveOptions: IKSaveOptions!, shouldShowUTType utType: String!) -> Bool", "params": [{"param_type": "IKSaveOptions!", "param_description": "The IKSaveOptions instance that called the delegate.", "param_name": ["saveOptions"]}, {"param_type": "String!", "param_description": "The uniform type identifier to test.", "param_name": ["shouldShowUTType", "utType"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Boo"]}, "method_description": "Returns true if, in a scripting comparison, the compared object matches the beginning of object. ", "is_static": false, "method_name": "scriptingBegins", "class_name": "NSObject", "method_declar": "func scriptingBegins(with object: Any) -> Bool", "params": [{"param_type": "Any", "param_description": "", "param_name": ["with", "object"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Boo"]}, "method_description": "Returns true if, in a scripting comparison, the compared object contains object.", "is_static": false, "method_name": "scriptingContains", "class_name": "NSObject", "method_declar": "func scriptingContains(_ object: Any) -> Bool", "params": [{"param_type": "Any", "param_description": "", "param_name": ["object"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Boo"]}, "method_description": "Returns true if, in a scripting comparison, the compared object matches the end of object.", "is_static": false, "method_name": "scriptingEnds", "class_name": "NSObject", "method_declar": "func scriptingEnds(with object: Any) -> Bool", "params": [{"param_type": "Any", "param_description": "", "param_name": ["with", "object"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Boo"]}, "method_description": "Returns true if, in a scripting comparison, the compared object is equal to object.", "is_static": false, "method_name": "scriptingIsEqual", "class_name": "NSObject", "method_declar": "func scriptingIsEqual(to object: Any) -> Bool", "params": [{"param_type": "Any", "param_description": "", "param_name": ["to", "object"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Boo"]}, "method_description": "Returns true if, in a scripting comparison, the compared object is greater than object.", "is_static": false, "method_name": "scriptingIsGreaterThan", "class_name": "NSObject", "method_declar": "func scriptingIsGreaterThan(_ object: Any) -> Bool", "params": [{"param_type": "Any", "param_description": "", "param_name": ["object"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Boo"]}, "method_description": "Returns true if, in a scripting comparison, the compared object is greater than or equal to object.", "is_static": false, "method_name": "scriptingIsGreaterThanOrEqual", "class_name": "NSObject", "method_declar": "func scriptingIsGreaterThanOrEqual(to object: Any) -> Bool", "params": [{"param_type": "Any", "param_description": "", "param_name": ["to", "object"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Boo"]}, "method_description": "Returns true if, in a scripting comparison, the compared object is less than object.", "is_static": false, "method_name": "scriptingIsLessThan", "class_name": "NSObject", "method_declar": "func scriptingIsLessThan(_ object: Any) -> Bool", "params": [{"param_type": "Any", "param_description": "", "param_name": ["object"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Boo"]}, "method_description": "Returns true if, in a scripting comparison, the compared object is less than or equal to object.", "is_static": false, "method_name": "scriptingIsLessThanOrEqual", "class_name": "NSObject", "method_declar": "func scriptingIsLessThanOrEqual(to object: Any) -> Bool", "params": [{"param_type": "Any", "param_description": "", "param_name": ["to", "object"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invoked by setValue(_:forKey:) when it\u2019s given a nil value for a scalar value (such as an int or float).", "is_static": false, "method_name": "setNilValueForKey", "class_name": "NSObject", "method_declar": "func setNilValueForKey(_ key: String)", "params": [{"param_type": "String", "param_description": "The name of one of the receiver's properties.", "param_name": ["key"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sets the property of the receiver specified by a given key to a given value.", "is_static": false, "method_name": "setValue", "class_name": "NSObject", "method_declar": "func setValue(_ value: Any?, forKey key: String)", "params": [{"param_type": "Any", "param_description": "The value for the property identified by key.", "param_name": ["value"]}, {"param_type": "String", "param_description": "The name of one of the receiver's properties.", "param_name": ["forKey", "key"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sets the value for the property identified by a given key path to a given value.", "is_static": false, "method_name": "setValue", "class_name": "NSObject", "method_declar": "func setValue(_ value: Any?, forKeyPath keyPath: String)", "params": [{"param_type": "Any", "param_description": "The value for the property identified by keyPath.", "param_name": ["value"]}, {"param_type": "String", "param_description": "A key path of the form relationship.property (with one or more relationships): for example \u201cdepartment.name\u201d or \u201cdepartment.manager.lastName.\u201d ", "param_name": ["forKeyPath", "keyPath"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invoked by setValue(_:forKey:) when it finds no property for a given key.", "is_static": false, "method_name": "setValue", "class_name": "NSObject", "method_declar": "func setValue(_ value: Any?, forUndefinedKey key: String)", "params": [{"param_type": "Any", "param_description": "The value for the key identified by key.", "param_name": ["value"]}, {"param_type": "String", "param_description": "A string that is not equal to the name of any of the receiver's properties.", "param_name": ["forUndefinedKey", "key"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sets properties of the receiver with values from a given dictionary, using its keys to identify the properties.", "is_static": false, "method_name": "setValuesForKeys", "class_name": "NSObject", "method_declar": "func setValuesForKeys(_ keyedValues: [String : Any])", "params": [{"param_type": "[String", "param_description": "A dictionary whose keys identify properties in the receiver. The values of the properties in the receiver are set to the corresponding values in the dictionary.", "param_name": ["keyedValues"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[String"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the action is applicable; otherwise, false."], "return_type": ["Boo"]}, "method_description": "Sent to the delegate to determine whether the action should be enabled.", "is_static": false, "method_name": "shouldEnableAction", "class_name": "NSObject", "method_declar": "func shouldEnableAction(for person: ABPerson!, identifier: String!) -> Bool", "params": [{"param_type": "ABPerson!", "param_description": "The person on which the action will be taken.", "param_name": ["for", "person"]}, {"param_type": "String!", "param_description": "The unique identifier of the selected value.", "param_name": ["identifier"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "textStorageDidProcessEditing", "class_name": "NSObject", "method_declar": "func textStorageDidProcessEditing(_ notification: Notification)", "params": [{"param_type": "Notification", "param_description": "", "param_name": ["notification"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "textStorageWillProcessEditing", "class_name": "NSObject", "method_declar": "func textStorageWillProcessEditing(_ notification: Notification)", "params": [{"param_type": "Notification", "param_description": "", "param_name": ["notification"]}]}, {"return_value": {"return_name": [""], "return_description": ["The title of the menu item for the action."], "return_type": ["String"]}, "method_description": "Sent to the delegate to request the title of the menu item for the action.", "is_static": false, "method_name": "title", "class_name": "NSObject", "method_declar": "func title(for person: ABPerson!, identifier: String!) -> String!", "params": [{"param_type": "ABPerson!", "param_description": "The person on which the action will be taken.", "param_name": ["for", "person"]}, {"param_type": "String!", "param_description": "The unique identifier of the value for which the menu item will be displayed.", "param_name": ["identifier"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Removes a given binding between the receiver and a controller.", "is_static": false, "method_name": "unbind", "class_name": "NSObject", "method_declar": "func unbind(_ binding: NSBindingName)", "params": [{"param_type": "NSBindingName", "param_description": "The name of a binding.", "param_name": ["binding"]}]}, {"return_value": {"return_name": [], "return_description": ["A Boolean set to true if the value pointed at by ioValue is valid for the property identified by inKey, or if the method is able to modify the value at ioValue to make it valid; otherwise false."], "return_type": []}, "method_description": "Throws an error when the value specified by a given pointer is not valid or can't be made valid for the property identified by a given key.", "is_static": false, "method_name": "validateValue", "class_name": "NSObject", "method_declar": "func validateValue(_ ioValue: AutoreleasingUnsafeMutablePointer<AnyObject?>, forKey inKey: String) throws", "params": [{"param_type": "AutoreleasingUnsafeMutablePointer<AnyObject>", "param_description": "A pointer to a new value for the property identified by inKey. This method may modify or replace the value in order to make it valid.", "param_name": ["ioValue"]}, {"param_type": "String", "param_description": "The name of one of the receiver's properties. The key must specify an attribute or a to-one relationship.", "param_name": ["forKey", "inKey"]}]}, {"return_value": {"return_name": [], "return_description": ["A Boolean that is true if the value pointed at by ioValue is valid for the property identified by inKeyPath, or if the method is able to modify the value at ioValue to make it valid; otherwise false."], "return_type": []}, "method_description": "Throws an error when the value specified by a given pointer is not valid for a given key path relative to the receiver. ", "is_static": false, "method_name": "validateValue", "class_name": "NSObject", "method_declar": "func validateValue(_ ioValue: AutoreleasingUnsafeMutablePointer<AnyObject?>, forKeyPath inKeyPath: String) throws", "params": [{"param_type": "AutoreleasingUnsafeMutablePointer<AnyObject>", "param_description": "A pointer to a new value for the property identified by inKeyPath. This method may modify or replace the value in order to make it valid.", "param_name": ["ioValue"]}, {"param_type": "String", "param_description": "The name of one of the receiver's properties. The key path must specify an attribute or a to-one relationship. The key path has the form relationship.property (with one or more relationships); for example department.name or department.manager.lastName.", "param_name": ["forKeyPath", "inKeyPath"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["An"]}, "method_description": "Retrieves an indexed object from the collection specified by the passed key.", "is_static": false, "method_name": "value", "class_name": "NSObject", "method_declar": "func value(at index: Int, inPropertyWithKey key: String) -> Any?", "params": [{"param_type": "Int", "param_description": "", "param_name": ["at", "index"]}, {"param_type": "String", "param_description": "", "param_name": ["inPropertyWithKey", "key"]}]}, {"return_value": {"return_name": [""], "return_description": ["The class of the value that will be returned for binding."], "return_type": ["AnyClas"]}, "method_description": "Returns the class of the value that will be returned for the specified binding.", "is_static": false, "method_name": "valueClassForBinding", "class_name": "NSObject", "method_declar": "func valueClassForBinding(_ binding: NSBindingName) -> AnyClass?", "params": [{"param_type": "NSBindingName", "param_description": "The name of a binding.", "param_name": ["binding"]}]}, {"return_value": {"return_name": [""], "return_description": ["The value for the property identified by key. "], "return_type": ["An"]}, "method_description": "Returns the value for the property identified by a given key.", "is_static": false, "method_name": "value", "class_name": "NSObject", "method_declar": "func value(forKey key: String) -> Any?", "params": [{"param_type": "String", "param_description": "The name of one of the receiver's properties.", "param_name": ["forKey", "key"]}]}, {"return_value": {"return_name": [""], "return_description": ["The value for the derived property identified by keyPath."], "return_type": ["An"]}, "method_description": "Returns the value for the derived property identified by a given key path.", "is_static": false, "method_name": "value", "class_name": "NSObject", "method_declar": "func value(forKeyPath keyPath: String) -> Any?", "params": [{"param_type": "String", "param_description": "A key path of the form relationship.property (with one or more relationships); for example \u201cdepartment.name\u201d or \u201cdepartment.manager.lastName\u201d.", "param_name": ["forKeyPath", "keyPath"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["An"]}, "method_description": "Invoked by value(forKey:) when it finds no property corresponding to a given key.", "is_static": false, "method_name": "value", "class_name": "NSObject", "method_declar": "func value(forUndefinedKey key: String) -> Any?", "params": [{"param_type": "String", "param_description": "A string that is not equal to the name of any of the receiver's properties.", "param_name": ["forUndefinedKey", "key"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["An"]}, "method_description": "Retrieves a named object from the collection specified by the passed key.", "is_static": false, "method_name": "value", "class_name": "NSObject", "method_declar": "func value(withName name: String, inPropertyWithKey key: String) -> Any?", "params": [{"param_type": "String", "param_description": "", "param_name": ["withName", "name"]}, {"param_type": "String", "param_description": "", "param_name": ["inPropertyWithKey", "key"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["An"]}, "method_description": "Retrieves an object by ID from the collection specified by the passed key.", "is_static": false, "method_name": "value", "class_name": "NSObject", "method_declar": "func value(withUniqueID uniqueID: Any, inPropertyWithKey key: String) -> Any?", "params": [{"param_type": "Any", "param_description": "", "param_name": ["withUniqueID", "uniqueID"]}, {"param_type": "String", "param_description": "", "param_name": ["inPropertyWithKey", "key"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Loads a URL into a web frame.", "is_static": false, "method_name": "webPlugInContainerLoad", "class_name": "NSObject", "method_declar": "func webPlugInContainerLoad(_ request: URLRequest!, inFrame target: String!)", "params": [{"param_type": "URLRequest!", "param_description": "The request that specifies the URL.", "param_name": ["request"]}, {"param_type": "String!", "param_description": "The frame into which the URL is loaded.", "param_name": ["inFrame", "target"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Tells the container to show a status message.", "is_static": false, "method_name": "webPlugInContainerShowStatus", "class_name": "NSObject", "method_declar": "func webPlugInContainerShowStatus(_ message: String!)", "params": [{"param_type": "String!", "param_description": "The status message to be displayed.", "param_name": ["message"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Prepares the plug-in for deallocation.", "is_static": false, "method_name": "webPlugInDestroy", "class_name": "NSObject", "method_declar": "func webPlugInDestroy()", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Initializes the plug-in.", "is_static": false, "method_name": "webPlugInInitialize", "class_name": "NSObject", "method_declar": "func webPlugInInitialize()", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invoked when an error occurs loading the main resource.", "is_static": false, "method_name": "webPlugInMainResourceDidFailWithError", "class_name": "NSObject", "method_declar": "func webPlugInMainResourceDidFailWithError(_ error: Error!)", "params": [{"param_type": "Error!", "param_description": "An error object containing details of why the connection failed to load the request successfully.", "param_name": ["error"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invoked when the connection successfully finishes loading data.", "is_static": false, "method_name": "webPlugInMainResourceDidFinishLoading", "class_name": "NSObject", "method_declar": "func webPlugInMainResourceDidFinishLoading()", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invoked when the connection loads data incrementally.", "is_static": false, "method_name": "webPlugInMainResourceDidReceive", "class_name": "NSObject", "method_declar": "func webPlugInMainResourceDidReceive(_ data: Data!)", "params": [{"param_type": "Data!", "param_description": "The newly available data.", "param_name": ["data"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invoked when the connection receives sufficient data to construct the URL response for its request.", "is_static": false, "method_name": "webPlugInMainResourceDidReceive", "class_name": "NSObject", "method_declar": "func webPlugInMainResourceDidReceive(_ response: URLResponse!)", "params": [{"param_type": "URLResponse!", "param_description": "The URL response for the connection's request.", "param_name": ["response"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Controls plug-in behavior based on its selection.", "is_static": false, "method_name": "webPlugInSetIsSelected", "class_name": "NSObject", "method_declar": "func webPlugInSetIsSelected(_ isSelected: Bool)", "params": [{"param_type": "Bool", "param_description": "If true, the plug-in is currently selected. Otherwise, it is not selected.", "param_name": ["isSelected"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Tells the plug-in to start normal operation.", "is_static": false, "method_name": "webPlugInStart", "class_name": "NSObject", "method_declar": "func webPlugInStart()", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Tells the plug-in to stop normal operation.", "is_static": false, "method_name": "webPlugInStop", "class_name": "NSObject", "method_declar": "func webPlugInStop()", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Informs the observed object that the specified change is about to be executed at given indexes for a specified ordered to-many relationship.", "is_static": false, "method_name": "willChange", "class_name": "NSObject", "method_declar": "func willChange(_ changeKind: NSKeyValueChange, valuesAt indexes: IndexSet, forKey key: String)", "params": [{"param_type": "NSKeyValueChange", "param_description": "", "param_name": ["changeKind"]}, {"param_type": "IndexSet", "param_description": "The indexes of the to-many relationship that will be affected by the change.", "param_name": ["valuesAt", "indexes"]}, {"param_type": "String", "param_description": "The name of a property that is an ordered to-many relationship.", "param_name": ["forKey", "key"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Informs the observed object that the value of a given property is about to change.", "is_static": false, "method_name": "willChangeValue", "class_name": "NSObject", "method_declar": "func willChangeValue(forKey key: String)", "params": [{"param_type": "String", "param_description": "The name of the property that will change.", "param_name": ["forKey", "key"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Informs the observed object that the specified change is about to be made to a specified unordered to-many relationship.", "is_static": false, "method_name": "willChangeValue", "class_name": "NSObject", "method_declar": "func willChangeValue(forKey key: String, withSetMutation mutationKind: NSKeyValueSetMutationKind, using objects: Set<AnyHashable>)", "params": [{"param_type": "String", "param_description": "The name of a property that is an unordered to-many relationship", "param_name": ["forKey", "key"]}, {"param_type": "NSKeyValueSetMutationKind", "param_description": "The type of change that will be made.", "param_name": ["withSetMutation", "mutationKind"]}, {"param_type": "Set<AnyHashable>", "param_description": "The objects that are involved in the change (see NSKeyValueSetMutationKind).", "param_name": ["using", "objects"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invoked when the receiver's workflow encounters an error.", "is_static": false, "method_name": "workflowController", "class_name": "NSObject", "method_declar": "func workflowController(_ controller: AMWorkflowController, didError error: Error)", "params": [{"param_type": "AMWorkflowController", "param_description": "The controller object sending the message.", "param_name": ["controller"]}, {"param_type": "Error", "param_description": "If a workflow error occurs, upon return contains an instance of NSError that describes the problem.", "param_name": ["didError", "error"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invoked when an action in the receiver's workflow is finished running.", "is_static": false, "method_name": "workflowController", "class_name": "NSObject", "method_declar": "func workflowController(_ controller: AMWorkflowController, didRun action: AMAction)", "params": [{"param_type": "AMWorkflowController", "param_description": "The controller object sending the message.", "param_name": ["controller"]}, {"param_type": "AMAction", "param_description": "The workflow action that ran.", "param_name": ["didRun", "action"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invoked when an action in the receiver's workflow is about to run.", "is_static": false, "method_name": "workflowController", "class_name": "NSObject", "method_declar": "func workflowController(_ controller: AMWorkflowController, willRun action: AMAction)", "params": [{"param_type": "AMWorkflowController", "param_description": "The controller object sending the message.", "param_name": ["controller"]}, {"param_type": "AMAction", "param_description": "The workflow action that will run.", "param_name": ["willRun", "action"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Tells the delegate that the workflow controller object finished running.", "is_static": false, "method_name": "workflowControllerDidRun", "class_name": "NSObject", "method_declar": "func workflowControllerDidRun(_ controller: AMWorkflowController)", "params": [{"param_type": "AMWorkflowController", "param_description": "The workflow controller object that finished running.", "param_name": ["controller"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Tells the delegate that the workflow controller object has stopped.", "is_static": false, "method_name": "workflowControllerDidStop", "class_name": "NSObject", "method_declar": "func workflowControllerDidStop(_ controller: AMWorkflowController)", "params": [{"param_type": "AMWorkflowController", "param_description": "The workflow controller object that stopped.", "param_name": ["controller"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Tells the delegate that the workflow controller object is about to run.", "is_static": false, "method_name": "workflowControllerWillRun", "class_name": "NSObject", "method_declar": "func workflowControllerWillRun(_ controller: AMWorkflowController)", "params": [{"param_type": "AMWorkflowController", "param_description": "The workflow controller object to be run.", "param_name": ["controller"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Tells the delegate that the workflow controller object is about to stop.", "is_static": false, "method_name": "workflowControllerWillStop", "class_name": "NSObject", "method_declar": "func workflowControllerWillStop(_ controller: AMWorkflowController)", "params": [{"param_type": "AMWorkflowController", "param_description": "The workflow controller object to be stopped.", "param_name": ["controller"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the key-value observing machinery should automatically invoke willChangeValue(forKey:)/didChangeValue(forKey:) and willChange(_:valuesAt:forKey:)/didChange(_:valuesAt:forKey:) whenever instances of the class receive key-value coding messages for the key, or mutating key-value-coding-compliant methods for the key are invoked; otherwise false."], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether the observed object supports automatic key-value observation for the given key.", "is_static": false, "method_name": "automaticallyNotifiesObservers", "class_name": "NSObject", "method_declar": "class func automaticallyNotifiesObservers(forKey key: String) -> Bool", "params": [{"param_type": "String", "param_description": "", "param_name": ["forKey", "key"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Strin"]}, "method_description": "", "is_static": false, "method_name": "debugDescription", "class_name": "NSObject", "method_declar": "class func debugDescription() -> String", "params": []}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["An"]}, "method_description": "Returns an object that will be used as the placeholder for the binding, when a key value coding compliant property of an instance of the receiving class returns the value specified by marker, and no other placeholder has been specified. ", "is_static": false, "method_name": "defaultPlaceholder", "class_name": "NSObject", "method_declar": "class func defaultPlaceholder(for marker: Any?, with binding: NSBindingName) -> Any?", "params": [{"param_type": "Any", "param_description": "", "param_name": ["for", "marker"]}, {"param_type": "NSBindingName", "param_description": "", "param_name": ["with", "binding"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Exposes the specified binding, advertising its availability. ", "is_static": false, "method_name": "exposeBinding", "class_name": "NSObject", "method_declar": "class func exposeBinding(_ binding: NSBindingName)", "params": [{"param_type": "NSBindingName", "param_description": "The key path for the property to be exposed.", "param_name": ["binding"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["In"]}, "method_description": "", "is_static": false, "method_name": "hash", "class_name": "NSObject", "method_declar": "class func hash() -> Int", "params": []}, {"return_value": {"return_name": [""], "return_description": ["true if the attribute specified by name should be hidden from the scripting environment; otherwise, false."], "return_type": ["Boo"]}, "method_description": "Returns whether a key should be hidden from the scripting environment.", "is_static": false, "method_name": "isKeyExcluded", "class_name": "NSObject", "method_declar": "class func isKeyExcluded(fromWebScript name: UnsafePointer<Int8>!) -> Bool", "params": [{"param_type": "UnsafePointer<Int8>!", "param_description": "The name of the attribute.", "param_name": ["fromWebScript", "name"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the selector specified by aSelector should be hidden from the scripting environment; otherwise, false."], "return_type": ["Boo"]}, "method_description": "Returns whether a selector should be hidden from the scripting environment.", "is_static": false, "method_name": "isSelectorExcluded", "class_name": "NSObject", "method_declar": "class func isSelectorExcluded(fromWebScript selector: Selector!) -> Bool", "params": [{"param_type": "Selector!", "param_description": "", "param_name": ["fromWebScript", "selector"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Set<String"]}, "method_description": "Returns a set of key paths for properties whose values affect the value of the specified key.", "is_static": false, "method_name": "keyPathsForValuesAffectingValue", "class_name": "NSObject", "method_declar": "class func keyPathsForValuesAffectingValue(forKey key: String) -> Set<String>", "params": [{"param_type": "String", "param_description": "The key whose value is affected by the key paths.", "param_name": ["forKey", "key"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sets placeholder as the default placeholder for the binding, when a key value coding compliant property of an instance of the receiving class returns the value specified by marker, and no other placeholder has been specified.", "is_static": false, "method_name": "setDefaultPlaceholder", "class_name": "NSObject", "method_declar": "class func setDefaultPlaceholder(_ placeholder: Any?, for marker: Any?, with binding: NSBindingName)", "params": [{"param_type": "Any", "param_description": "", "param_name": ["placeholder"]}, {"param_type": "Any", "param_description": "", "param_name": ["for", "marker"]}, {"param_type": "NSBindingName", "param_description": "", "param_name": ["with", "binding"]}]}, {"return_value": {"return_name": [""], "return_description": ["The name used to represent the attribute in the scripting environment."], "return_type": ["String"]}, "method_description": "Returns the scripting environment name for an attribute specified by a key.", "is_static": false, "method_name": "webScriptName", "class_name": "NSObject", "method_declar": "class func webScriptName(forKey name: UnsafePointer<Int8>!) -> String!", "params": [{"param_type": "UnsafePointer<Int8>!", "param_description": "The name of the attribute.", "param_name": ["forKey", "name"]}]}, {"return_value": {"return_name": [""], "return_description": ["The name used to represent the selector in the scripting environment."], "return_type": ["String"]}, "method_description": "Returns the scripting environment name for a selector.", "is_static": false, "method_name": "webScriptName", "class_name": "NSObject", "method_declar": "class func webScriptName(for selector: Selector!) -> String!", "params": [{"param_type": "Selector!", "param_description": "", "param_name": ["for", "selector"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Boo"]}, "method_description": "", "is_static": true, "method_name": "==", "class_name": "NSObject", "method_declar": "static func == (lhs: NSObject, rhs: NSObject) -> Bool", "params": [{"param_type": "NSObject", "param_description": "", "param_name": ["lhs"]}, {"param_type": "NSObject", "param_description": "", "param_name": ["rhs"]}]}], "class_type": "class", "class_name": "NSObject", "Vars": [{"var_name": "autoContentAccessingProxy", "var_type": "Any", "var_description": "A proxy for the receiving object", "is_static": false}, {"var_name": "classForArchiver", "var_type": "AnyClass", "var_description": "The class to substitute for the receiver's own class during archiving.", "is_static": false}, {"var_name": "classForCoder", "var_type": "AnyClass", "var_description": "Overridden by subclasses to substitute a class other than its own during coding.", "is_static": false}, {"var_name": "classForKeyedArchiver", "var_type": "AnyClass", "var_description": "Subclasses to substitute a new class for instances during keyed archiving.", "is_static": false}, {"var_name": "attributeKeys", "var_type": "[String]", "var_description": "An array of NSString objects containing the names of immutable values that instances of the receiver's class contain.", "is_static": false}, {"var_name": "classDescription", "var_type": "NSClassDescription", "var_description": "An object containing information about the attributes and relationships of the receiver\u2019s class.", "is_static": false}, {"var_name": "toManyRelationshipKeys", "var_type": "[String]", "var_description": "An array containing the keys for the to-many relationship properties of the receiver.", "is_static": false}, {"var_name": "toOneRelationshipKeys", "var_type": "[String]", "var_description": "The keys for the to-one relationship properties of the receiver, if any.", "is_static": false}, {"var_name": "classCode", "var_type": "FourCharCode", "var_description": "The receiver's Apple event type code, as stored in the NSScriptClassDescription object for the object\u2019s class.", "is_static": false}, {"var_name": "className", "var_type": "String", "var_description": "A string containing the name of the class.", "is_static": false}, {"var_name": "scriptingProperties", "var_type": "[String", "var_description": "An NSString-keyed dictionary of the receiver's scriptable properties.", "is_static": false}, {"var_name": "accessibilityActivationPoint", "var_type": "CGPoint", "var_description": "The activation point for the accessibility element, in screen coordinates.", "is_static": false}, {"var_name": "accessibilityAttributedHint", "var_type": "NSAttributedString", "var_description": "", "is_static": false}, {"var_name": "accessibilityAttributedLabel", "var_type": "NSAttributedString", "var_description": "", "is_static": false}, {"var_name": "accessibilityAttributedValue", "var_type": "NSAttributedString", "var_description": "", "is_static": false}, {"var_name": "accessibilityContainerType", "var_type": "UIAccessibilityContainerType", "var_description": "", "is_static": false}, {"var_name": "accessibilityCustomActions", "var_type": "[UIAccessibilityCustomAction]", "var_description": "An array of custom actions to display along with the built-in actions.", "is_static": false}, {"var_name": "accessibilityCustomRotors", "var_type": "[UIAccessibilityCustomRotor]", "var_description": "", "is_static": false}, {"var_name": "accessibilityDragSourceDescriptors", "var_type": "[UIAccessibilityLocationDescriptor]", "var_description": "", "is_static": false}, {"var_name": "accessibilityDropPointDescriptors", "var_type": "[UIAccessibilityLocationDescriptor]", "var_description": "", "is_static": false}, {"var_name": "accessibilityElements", "var_type": "[Any]", "var_description": "An array of the accessibility elements in the container. ", "is_static": false}, {"var_name": "accessibilityElementsHidden", "var_type": "Bool", "var_description": "A Boolean value indicating whether the accessibility elements contained within this accessibility element are hidden.", "is_static": false}, {"var_name": "accessibilityFocusedUIElement", "var_type": "Any", "var_description": "The deepest descendant of the accessibility hierarchy that has the focus.", "is_static": false}, {"var_name": "accessibilityFrame", "var_type": "CGRect", "var_description": "The frame of the accessibility element, in screen coordinates.", "is_static": false}, {"var_name": "accessibilityHeaderElements", "var_type": "[Any]", "var_description": "", "is_static": false}, {"var_name": "accessibilityHint", "var_type": "String", "var_description": "A brief description of the result of performing an action on the accessibility element, in a localized string.", "is_static": false}, {"var_name": "accessibilityLabel", "var_type": "String", "var_description": "A succinct label that identifies the accessibility element, in a localized string.", "is_static": false}, {"var_name": "accessibilityLanguage", "var_type": "String", "var_description": "The language in which to speak the accessibility element's label, value, and hint.", "is_static": false}, {"var_name": "accessibilityNavigationStyle", "var_type": "UIAccessibilityNavigationStyle", "var_description": "The navigation style to apply to the object and its elements.", "is_static": false}, {"var_name": "accessibilityNotifiesWhenDestroyed", "var_type": "Bool", "var_description": "A Boolean value that indicates whether a custom accessibility object sends a notification when its corresponding UI element is destroyed.", "is_static": false}, {"var_name": "accessibilityPath", "var_type": "UIBezierPath", "var_description": "The path of the element, in screen coordinates.", "is_static": false}, {"var_name": "accessibilityTraits", "var_type": "UIAccessibilityTraits", "var_description": "The combination of accessibility traits that best characterize the accessibility element. ", "is_static": false}, {"var_name": "accessibilityValue", "var_type": "String", "var_description": "The value of the accessibility element, in a localized string.", "is_static": false}, {"var_name": "accessibilityViewIsModal", "var_type": "Bool", "var_description": "A Boolean value indicating whether VoiceOver should ignore the elements within views that are siblings of the receiver.", "is_static": false}, {"var_name": "exposedBindings", "var_type": "[NSBindingName]", "var_description": "Returns an array containing the bindings exposed by the receiver.", "is_static": false}, {"var_name": "hashValue", "var_type": "Int", "var_description": "", "is_static": false}, {"var_name": "isAccessibilityElement", "var_type": "Bool", "var_description": "A Boolean value indicating whether the receiver is an accessibility element that an assistive application can access.", "is_static": false}, {"var_name": "isSelectable", "var_type": "Bool", "var_description": "", "is_static": false}, {"var_name": "objectForWebScript", "var_type": "Any!", "var_description": "Returns an object that exposes the plug-in\u2019s scripting interface.", "is_static": false}, {"var_name": "objectSpecifier", "var_type": "NSScriptObjectSpecifier", "var_description": "Returns an object specifier for the receiver.", "is_static": false}, {"var_name": "observationInfo", "var_type": "UnsafeMutableRawPointer", "var_description": "Returns a pointer that identifies information about all of the observers that are registered with the observed object.", "is_static": false}, {"var_name": "shouldGroupAccessibilityChildren", "var_type": "Bool", "var_description": "A Boolean value indicating whether VoiceOver should group together the elements that are children of the receiver, regardless of their positions on the screen.", "is_static": false}, {"var_name": "webFrame", "var_type": "WebFrame!", "var_description": "Returns the WebFrame that contains the plug-in.", "is_static": false}, {"var_name": "webPlugInContainerSelectionColor", "var_type": "NSColor!", "var_description": "Returns the plug-in selection color.", "is_static": false}, {"var_name": "accessInstanceVariablesDirectly", "var_type": "Bool", "var_description": "Returns a Boolean value that indicates whether the key-value coding methods should access the corresponding instance variable directly on finding no accessor method for a property.", "is_static": false}], "interface_list": ["CustomDebugStringConvertible", "CustomStringConvertible", "CVarArg", "Equatable", "Hashable", "NSObjectProtocol"], "class_description": "", "package_name": "foundation"}