{"subclass_list": [], "typealias": [], "class_inherit_list": [], "Methods": [{"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Attempts to acquire a lock, blocking a thread\u2019s execution until the lock can be acquired.Required.", "is_static": false, "method_name": "lock", "class_name": "NSLocking", "method_declar": "func lock()", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Relinquishes a previously acquired lock.Required.", "is_static": false, "method_name": "unlock", "class_name": "NSLocking", "method_declar": "func unlock()", "params": []}], "class_type": "protocol", "class_name": "NSLocking", "Vars": [], "interface_list": [], "class_description": "A lock object is used to coordinate the actions of multiple threads of execution within a single application. By using a lock object, an application can protect critical sections of code from being executed simultaneously by separate threads, thus protecting shared data and other shared resources from corruption.\n", "package_name": "foundation"}