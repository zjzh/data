{"subclass_list": [], "typealias": [], "class_inherit_list": ["NSURLConnectionDelegate"], "Methods": [{"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent when the connection has received sufficient data to construct the URL response for its request.", "is_static": false, "method_name": "connection", "class_name": "NSURLConnectionDataDelegate", "method_declar": "optional func connection(_ connection: NSURLConnection, didReceive response: URLResponse)", "params": [{"param_type": "NSURLConnection", "param_description": "The connection sending the message.", "param_name": ["connection"]}, {"param_type": "URLResponse", "param_description": "The URL response for the connection's request. This object is immutable and will not be modified by the URL loading system once it is presented to the delegate.", "param_name": ["didReceive", "response"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent as a connection loads data incrementally.", "is_static": false, "method_name": "connection", "class_name": "NSURLConnectionDataDelegate", "method_declar": "optional func connection(_ connection: NSURLConnection, didReceive data: Data)", "params": [{"param_type": "NSURLConnection", "param_description": "The connection sending the message.", "param_name": ["connection"]}, {"param_type": "Data", "param_description": "The newly available data. The delegate should concatenate the contents of each data object delivered to build up the complete data for a URL load.", "param_name": ["didReceive", "data"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent as the body (message data) of a request is transmitted (such as in an HTTP POST request).", "is_static": false, "method_name": "connection", "class_name": "NSURLConnectionDataDelegate", "method_declar": "optional func connection(_ connection: NSURLConnection, didSendBodyData bytesWritten: Int, totalBytesWritten: Int, totalBytesExpectedToWrite: Int)", "params": [{"param_type": "NSURLConnection", "param_description": "The connection sending the message.", "param_name": ["connection"]}, {"param_type": "Int", "param_description": "The number of bytes written in the latest write.", "param_name": ["didSendBodyData", "bytesWritten"]}, {"param_type": "Int", "param_description": "The total number of bytes written for this connection.", "param_name": ["totalBytesWritten"]}, {"param_type": "Int", "param_description": "The number of bytes the connection expects to write.", "param_name": ["totalBytesExpectedToWrite"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent when a connection has finished loading successfully.", "is_static": false, "method_name": "connectionDidFinishLoading", "class_name": "NSURLConnectionDataDelegate", "method_declar": "optional func connectionDidFinishLoading(_ connection: NSURLConnection)", "params": [{"param_type": "NSURLConnection", "param_description": "The connection sending the message.", "param_name": ["connection"]}]}, {"return_value": {"return_name": [""], "return_description": ["The actual URL request to use in light of the redirection response. The delegate may return request unmodified to allow the redirect, return a new request, or return nil to reject the redirect and continue processing the connection."], "return_type": ["URLReques"]}, "method_description": "Sent when the connection determines that it must change URLs in order to continue loading a request.", "is_static": false, "method_name": "connection", "class_name": "NSURLConnectionDataDelegate", "method_declar": "optional func connection(_ connection: NSURLConnection, willSend request: URLRequest, redirectResponse response: URLResponse?) -> URLRequest?", "params": [{"param_type": "NSURLConnection", "param_description": "The connection sending the message.", "param_name": ["connection"]}, {"param_type": "URLRequest", "param_description": "The proposed redirected request. The delegate should inspect the redirected request to verify that it meets its needs, and create a copy with new attributes to return to the connection if necessary.", "param_name": ["willSend", "request"]}, {"param_type": "URLResponse", "param_description": "The URL response that caused the redirect. May be nil in cases where this method is called because of URL canonicalization.", "param_name": ["redirectResponse", "response"]}]}, {"return_value": {"return_name": [""], "return_description": ["This delegate method should return a new, unopened stream that provides the body contents for the request."], "return_type": ["InputStrea"]}, "method_description": "Called when an NSURLConnection needs to retransmit a request that has a body stream to provide a new, unopened stream.", "is_static": false, "method_name": "connection", "class_name": "NSURLConnectionDataDelegate", "method_declar": "optional func connection(_ connection: NSURLConnection, needNewBodyStream request: URLRequest) -> InputStream?", "params": [{"param_type": "NSURLConnection", "param_description": "The NSURLConnection that is requesting a new body stream.", "param_name": ["connection"]}, {"param_type": "URLRequest", "param_description": "", "param_name": ["needNewBodyStream", "request"]}]}, {"return_value": {"return_name": [""], "return_description": ["The actual cached response to store in the cache. The delegate may return cachedResponse unmodified, return a modified cached response, or return nil if no cached response should be stored for the connection."], "return_type": ["CachedURLRespons"]}, "method_description": "Sent before the connection stores a cached response in the cache, to give the delegate an opportunity to alter it.", "is_static": false, "method_name": "connection", "class_name": "NSURLConnectionDataDelegate", "method_declar": "optional func connection(_ connection: NSURLConnection, willCacheResponse cachedResponse: CachedURLResponse) -> CachedURLResponse?", "params": [{"param_type": "NSURLConnection", "param_description": "The connection sending the message.", "param_name": ["connection"]}, {"param_type": "CachedURLResponse", "param_description": "The proposed cached response to store in the cache.", "param_name": ["willCacheResponse", "cachedResponse"]}]}], "class_type": "protocol", "class_name": "NSURLConnectionDataDelegate", "Vars": [], "interface_list": [], "class_description": "The NSURLConnectionDataDelegate protocol describes methods that should be implemented by the delegate for an instance of the NSURLConnection class. Many methods in this protocol existed as part of an informal protocol in previous versions of macOS and iOS.\nIn addition to the methods described in this protocol, an NSURLConnection delegate should also implement the methods described in the NSURLConnectionDelegate protocol.\nNote\nIf you are using NSURLConnection as part of Newsstand Kit on iOS, you should also implement the methods in the NSURLConnectionDownloadDelegate protocol.\n", "package_name": "foundation"}