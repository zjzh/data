{"class_description": "", "Methods": [{"method_description": "", "method_name": "init", "params": [{"param_type": "UInt", "param_description": "", "param_name": ["rawValue"]}], "class_name": "NSRegularExpression.Options", "method_declar": "init(rawValue: UInt)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": [], "class_name": "NSRegularExpression.Options", "typealias": [], "Vars": [{"var_description": "Match letters in the pattern independent of case.", "var_type": "NSRegularExpression.Options", "is_static": false, "var_name": "caseInsensitive"}, {"var_description": "Ignore whitespace and #-prefixed comments in the pattern.", "var_type": "NSRegularExpression.Options", "is_static": false, "var_name": "allowCommentsAndWhitespace"}, {"var_description": "Treat the entire pattern as a literal string.", "var_type": "NSRegularExpression.Options", "is_static": false, "var_name": "ignoreMetacharacters"}, {"var_description": "Allow . to match any character, including line separators.", "var_type": "NSRegularExpression.Options", "is_static": false, "var_name": "dotMatchesLineSeparators"}, {"var_description": "Allow ^ and $ to match the start and end of lines.", "var_type": "NSRegularExpression.Options", "is_static": false, "var_name": "anchorsMatchLines"}, {"var_description": "Treat only \\n as a line separator (otherwise, all standard line separators are used).", "var_type": "NSRegularExpression.Options", "is_static": false, "var_name": "useUnixLineSeparators"}, {"var_description": "Use Unicode TR#29 to specify word boundaries (otherwise, traditional regular expression word boundaries are used).", "var_type": "NSRegularExpression.Options", "is_static": false, "var_name": "useUnicodeWordBoundaries"}], "class_type": "struct", "interface_list": ["OptionSet"], "package_name": "foundation", "subclass_list": []}