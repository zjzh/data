{"subclass_list": [], "typealias": [], "class_inherit_list": ["URLSessionTaskDelegate"], "Methods": [{"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Tells the delegate that a download task has finished downloading.Required.", "is_static": false, "method_name": "urlSession", "class_name": "URLSessionDownloadDelegate", "method_declar": "func urlSession(_ session: URLSession, downloadTask: URLSessionDownloadTask, didFinishDownloadingTo location: URL)", "params": [{"param_type": "URLSession", "param_description": "The session containing the download task that finished.", "param_name": ["session"]}, {"param_type": "URLSessionDownloadTask", "param_description": "The download task that finished.", "param_name": ["downloadTask"]}, {"param_type": "URL", "param_description": "A file URL for the temporary file. Because the file is temporary, you must either open the file for reading or move it to a permanent location in your app\u2019s sandbox container directory before returning from this delegate method.If you choose to open the file for reading, you should do the actual reading in another thread to avoid blocking the delegate queue.", "param_name": ["didFinishDownloadingTo", "location"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Tells the delegate that the download task has resumed downloading.", "is_static": false, "method_name": "urlSession", "class_name": "URLSessionDownloadDelegate", "method_declar": "optional func urlSession(_ session: URLSession, downloadTask: URLSessionDownloadTask, didResumeAtOffset fileOffset: Int64, expectedTotalBytes: Int64)", "params": [{"param_type": "URLSession", "param_description": "The session containing the download task that finished.", "param_name": ["session"]}, {"param_type": "URLSessionDownloadTask", "param_description": "The download task that resumed. See explanation in the discussion.", "param_name": ["downloadTask"]}, {"param_type": "Int64", "param_description": "If the file's cache policy or last modified date prevents reuse of the existing content, then this value is zero. Otherwise, this value is an integer representing the number of bytes on disk that do not need to be retrieved again.NoteIn some situations, it may be possible for the transfer to resume earlier in the file than where the previous transfer ended.", "param_name": ["didResumeAtOffset", "fileOffset"]}, {"param_type": "Int64", "param_description": "The expected length of the file, as provided by the Content-Length header. If this header was not provided, the value is NSURLSessionTransferSizeUnknown.", "param_name": ["expectedTotalBytes"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Periodically informs the delegate about the download\u2019s progress.", "is_static": false, "method_name": "urlSession", "class_name": "URLSessionDownloadDelegate", "method_declar": "optional func urlSession(_ session: URLSession, downloadTask: URLSessionDownloadTask, didWriteData bytesWritten: Int64, totalBytesWritten: Int64, totalBytesExpectedToWrite: Int64)", "params": [{"param_type": "URLSession", "param_description": "The session containing the download task.", "param_name": ["session"]}, {"param_type": "URLSessionDownloadTask", "param_description": "The download task.", "param_name": ["downloadTask"]}, {"param_type": "Int64", "param_description": "The number of bytes transferred since the last time this delegate method was called.", "param_name": ["didWriteData", "bytesWritten"]}, {"param_type": "Int64", "param_description": "The total number of bytes transferred so far.", "param_name": ["totalBytesWritten"]}, {"param_type": "Int64", "param_description": "The expected length of the file, as provided by the Content-Length header. If this header was not provided, the value is NSURLSessionTransferSizeUnknown.", "param_name": ["totalBytesExpectedToWrite"]}]}], "class_type": "protocol", "class_name": "URLSessionDownloadDelegate", "Vars": [], "interface_list": [], "class_description": "In addition to the methods in this protocol, be sure to implement the methods in the URLSessionTaskDelegate and URLSessionDelegate protocols to handle events common to all task types and session-level events, respectively.\nNote\nAn URLSession object need not have a delegate. If no delegate is assigned, a system-provided delegate is used, and you must provide a completion callback to obtain the data.\n", "package_name": "foundation"}