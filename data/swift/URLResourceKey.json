{"class_description": "To request information using one of these keys, pass it to the forKey: parameter of the getResourceValue(_:forKey:) instance method.\n", "Methods": [{"method_description": "", "method_name": "init", "params": [{"param_type": "String", "param_description": "", "param_name": ["rawValue"]}], "class_name": "URLResourceKey", "method_declar": "init(_ rawValue: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "", "method_name": "init", "params": [{"param_type": "String", "param_description": "", "param_name": ["rawValue"]}], "class_name": "URLResourceKey", "method_declar": "init(rawValue: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": [], "class_name": "URLResourceKey", "typealias": [], "Vars": [{"var_description": "", "var_type": "URLResourceKey", "is_static": false, "var_name": "isApplicationKey"}, {"var_description": "", "var_type": "URLResourceKey", "is_static": false, "var_name": "applicationIsScriptableKey"}, {"var_description": "Key for determining whether the resource is a directory, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "isDirectoryKey"}, {"var_description": "The parent directory of the resource, returned as an NSURL object, or nil if the resource is the root directory of its volume (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "parentDirectoryURLKey"}, {"var_description": "Key for the total size allocated on disk for the file, returned as an NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "fileAllocatedSizeKey"}, {"var_description": "", "var_type": "URLResourceKey", "is_static": false, "var_name": "fileProtectionKey"}, {"var_description": "The resource\u2019s unique identifier, returned as an id (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "fileResourceIdentifierKey"}, {"var_description": "The resource\u2019s object type, returned as an NSString object (read-only). See URLFileResourceType for possible values.", "var_type": "URLResourceKey", "is_static": false, "var_name": "fileResourceTypeKey"}, {"var_description": "The resource\u2019s security information, returned as an NSFileSecurity object (read-write).", "var_type": "URLResourceKey", "is_static": false, "var_name": "fileSecurityKey"}, {"var_description": "Key for the file\u2019s size in bytes, returned as an NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "fileSizeKey"}, {"var_description": "Key for determining whether the file is an alias, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "isAliasFileKey"}, {"var_description": "Key for determining whether the resource is a file package, returned as a Boolean NSNumber object (read-write in macOS 10.8 and later, read-only in previous versions). A true value means that the resource is a file package.", "var_type": "URLResourceKey", "is_static": false, "var_name": "isPackageKey"}, {"var_description": "Key for determining whether the resource is a regular file, as opposed to a directory or a symbolic link. Returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "isRegularFileKey"}, {"var_description": "The optimal block size to use when reading or writing this file's data, returned as an NSNumber object, or nil if the preferred size is not available (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "preferredIOBlockSizeKey"}, {"var_description": "Key for the total allocated size of the file in bytes, returned as an NSNumber object (read-only). This includes the size of any file metadata.", "var_type": "URLResourceKey", "is_static": false, "var_name": "totalFileAllocatedSizeKey"}, {"var_description": "Key for the total displayable size of the file in bytes, returned as an NSNumber object (read-only). This includes the size of any file metadata.", "var_type": "URLResourceKey", "is_static": false, "var_name": "totalFileSizeKey"}, {"var_description": "Key for the volume\u2019s available capacity in bytes (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeAvailableCapacityKey"}, {"var_description": "Key for the volume\u2019s available capacity in bytes for storing important resources (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeAvailableCapacityForImportantUsageKey"}, {"var_description": "Key for the volume\u2019s available capacity in bytes for storing nonessential resources (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeAvailableCapacityForOpportunisticUsageKey"}, {"var_description": "Key for the volume\u2019s total capacity in bytes (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeTotalCapacityKey"}, {"var_description": "Key for determining whether the volume is automounted, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeIsAutomountedKey"}, {"var_description": "Key for determining whether the volume is visible in GUI-based file-browsing environments, such as the Desktop or the Finder application, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeIsBrowsableKey"}, {"var_description": "Key for determining whether the volume is ejectable from the drive mechanism under software control, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeIsEjectableKey"}, {"var_description": "Whether the volume is encrypted, returned as NSNumber containing a Boolean value (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeIsEncryptedKey"}, {"var_description": "Key for determining whether the volume is connected to an internal bus, returned as a Boolean NSNumber object, or nil if it cannot be determined (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeIsInternalKey"}, {"var_description": "Key for determining whether the volume is currently journaling, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeIsJournalingKey"}, {"var_description": "Key for determining whether the volume is stored on a local device, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeIsLocalKey"}, {"var_description": "Key for determining whether the volume is read-only, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeIsReadOnlyKey"}, {"var_description": "Key for determining whether the volume is removable from the drive mechanism, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeIsRemovableKey"}, {"var_description": "Whether the volume is the root filesystem, returned as NSNumber containing a Boolean value (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeIsRootFileSystemKey"}, {"var_description": "Key for determining whether the URL is a file system trigger directory, returned as a Boolean NSNumber object (read-only). Traversing or opening a file system trigger directory causes an attempt to mount a file system on the directory.", "var_type": "URLResourceKey", "is_static": false, "var_name": "isMountTriggerKey"}, {"var_description": "Key for determining whether the resource is the root directory of a volume, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "isVolumeKey"}, {"var_description": "Key for the volume\u2019s creation date, returned as an NSDate object, or NULL if it cannot be determined (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeCreationDateKey"}, {"var_description": "The unique identifier of the resource\u2019s volume, returned as an id (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeIdentifierKey"}, {"var_description": "Key for the volume\u2019s descriptive format name, returned as an NSString object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeLocalizedFormatDescriptionKey"}, {"var_description": "The name of the volume as it should be displayed in the user interface, returned as an NSString object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeLocalizedNameKey"}, {"var_description": "Key for the largest file size supported by the volume in bytes, returned as a Boolean NSNumber object, or nil if it cannot be determined (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeMaximumFileSizeKey"}, {"var_description": "The name of the volume, returned as an NSString object (read-write). Settable only if NSURLVolumeSupportsRenamingKey is true.", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeNameKey"}, {"var_description": "Key for the total number of resources on the volume, returned as an NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeResourceCountKey"}, {"var_description": "", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsAccessPermissionsKey"}, {"var_description": "Key for determining whether the volume implements whole-file advisory locks in the style of flock, along with the O_EXLOCK and O_SHLOCK flags of the open function, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsAdvisoryFileLockingKey"}, {"var_description": "Key for determining whether the volume supports case-preserved names, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsCasePreservedNamesKey"}, {"var_description": "Key for determining whether the volume supports case-sensitive names, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsCaseSensitiveNamesKey"}, {"var_description": "Whether the volume supports transparent decompression of compressed files using decmpfs, returned as NSNumber containing a Boolean value (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsCompressionKey"}, {"var_description": "Whether the volume supports exclusive renaming using renamex_np(2) with the RENAME_EXCL option, returned as NSNumber containing a Boolean value (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsExclusiveRenamingKey"}, {"var_description": "Key for determining whether the volume supports extended security (access control lists), returned as a Boolean NSNumber object (read-only) (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsExtendedSecurityKey"}, {"var_description": "Whether the volume supports cloning using clonefile(2), returned as NSNumber containing a Boolean value (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsFileCloningKey"}, {"var_description": "Key for determining whether the volume supports hard links, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsHardLinksKey"}, {"var_description": "", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsImmutableFilesKey"}, {"var_description": "Key for determining whether the volume supports journaling, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsJournalingKey"}, {"var_description": "Key for determining whether the volume supports persistent IDs, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsPersistentIDsKey"}, {"var_description": "Key for determining whether the volume can be renamed, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsRenamingKey"}, {"var_description": "Key for determining whether the volume supports reliable storage of times for the root directory, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsRootDirectoryDatesKey"}, {"var_description": "Key for determining whether the volume supports sparse files, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsSparseFilesKey"}, {"var_description": "Whether the volume supports renaming using renamex_np(2) with the RENAME_SWAP option, returned as NSNumber containing a Boolean value (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsSwapRenamingKey"}, {"var_description": "Key for determining whether the volume supports symbolic links, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsSymbolicLinksKey"}, {"var_description": "Key for determining whether the volume supports returning volume size information, returned as a Boolean NSNumber object (read-only). If true, volume size information is available as values of the volumeTotalCapacityKey andvolumeAvailableCapacityKey keys.", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsVolumeSizesKey"}, {"var_description": "Key for determining whether the volume supports zero runs, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeSupportsZeroRunsKey"}, {"var_description": "Key for the URL needed to remount the network volume, returned as an NSURL object, or nil if a URL is not available (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeURLForRemountingKey"}, {"var_description": "The root directory of the resource\u2019s volume, returned as an NSURL object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeURLKey"}, {"var_description": "Key for the volume\u2019s persistent UUID, returned as an NSString object, or nil if a persistent UUID is not available (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "volumeUUIDStringKey"}, {"var_description": "A boolean NSNumber that contains true if this item is in iCloud storage, false if it is a local item (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "isUbiquitousItemKey"}, {"var_description": "", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousSharedItemMostRecentEditorNameComponentsKey"}, {"var_description": "A Boolean indicating whether a call to startDownloadingUbiquitousItem(at:) has already been made to download the item. The value of this key is read-only.", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousItemDownloadRequestedKey"}, {"var_description": "A boolean NSNumber that contains true if this item is being downloaded from iCloud, false otherwise (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousItemIsDownloadingKey"}, {"var_description": "An error object that indicates why downloading the item from iCloud failed. See Foundation Constants for possible error codes.", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousItemDownloadingErrorKey"}, {"var_description": "The current download state for the item, indicating whether a local copy exists and whether that copy is the most current version of the item. The possible values for this key are described in URLUbiquitousItemDownloadingStatus.", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousItemDownloadingStatusKey"}, {"var_description": "A boolean NSNumber that contains true if this item\u2019s data has been uploaded to iCloud storage, false otherwise (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousItemIsUploadedKey"}, {"var_description": "A boolean NSNumber that contains true if this item is being uploaded to iCloud, false otherwise (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousItemIsUploadingKey"}, {"var_description": "An error object that indicates why uploading the item to iCloud failed. See Foundation Constants for possible error codes.", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousItemUploadingErrorKey"}, {"var_description": "A boolean NSNumber that contains true if this item has conflicts outstanding, false otherwise (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousItemHasUnresolvedConflictsKey"}, {"var_description": "A string containing the name of the item\u2019s container, as it is displayed to the user.", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousItemContainerDisplayNameKey"}, {"var_description": "", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousSharedItemOwnerNameComponentsKey"}, {"var_description": "", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousSharedItemCurrentUserPermissionsKey"}, {"var_description": "", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousSharedItemCurrentUserRoleKey"}, {"var_description": "", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousItemIsSharedKey"}, {"var_description": "All thumbnails as a single NSImage (read-write).", "var_type": "URLResourceKey", "is_static": false, "var_name": "thumbnailKey"}, {"var_description": "A dictionary of NSImage/UIImage objects keyed by size (read-write). See URLThumbnailDictionaryItem for a list of possible keys.", "var_type": "URLResourceKey", "is_static": false, "var_name": "thumbnailDictionaryKey"}, {"var_description": "Key for the resource properties that have not been set after the setResourceValues(_:) method returns an error, returned as an array of NSString objects.", "var_type": "URLResourceKey", "is_static": false, "var_name": "keysOfUnsetValuesKey"}, {"var_description": "", "var_type": "URLResourceKey", "is_static": false, "var_name": "quarantinePropertiesKey"}, {"var_description": "The time at which the resource\u2019s was created or renamed into or within its parent directory, returned as an NSDate. Inconsistent behavior may be observed when this attribute is requested on hard-linked items. This property is not supported by all volumes. (read-only)", "var_type": "URLResourceKey", "is_static": false, "var_name": "addedToDirectoryDateKey"}, {"var_description": "The time at which the resource\u2019s attributes were most recently modified, returned as an NSDate object if the volume supports attribute modification dates, or nil if attribute modification dates are unsupported (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "attributeModificationDateKey"}, {"var_description": "The time at which the resource was most recently accessed.", "var_type": "URLResourceKey", "is_static": false, "var_name": "contentAccessDateKey"}, {"var_description": "The time at which the resource was most recently modified.", "var_type": "URLResourceKey", "is_static": false, "var_name": "contentModificationDateKey"}, {"var_description": "The time at which the resource was created.", "var_type": "URLResourceKey", "is_static": false, "var_name": "creationDateKey"}, {"var_description": "The icon stored with the resource, returned as an NSImage object, or nil if the resource has no custom icon.", "var_type": "URLResourceKey", "is_static": false, "var_name": "customIconKey"}, {"var_description": "The document identifier returned as an NSNumber (read-only). ", "var_type": "URLResourceKey", "is_static": false, "var_name": "documentIdentifierKey"}, {"var_description": "The resource\u2019s normal icon, returned as an NSImage object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "effectiveIconKey"}, {"var_description": "An opaque generation identifier, returned as an id <NSCopying, NSCoding, NSObject> (read-only)", "var_type": "URLResourceKey", "is_static": false, "var_name": "generationIdentifierKey"}, {"var_description": "Key for determining whether the resource\u2019s extension is normally removed from its localized name, returned as a Boolean NSNumber object (read-write).", "var_type": "URLResourceKey", "is_static": false, "var_name": "hasHiddenExtensionKey"}, {"var_description": "Key for determining whether the resource is excluded from all backups of app data, returned as a Boolean NSNumber object (read-write).", "var_type": "URLResourceKey", "is_static": false, "var_name": "isExcludedFromBackupKey"}, {"var_description": "Key for determining whether the current process (as determined by the EUID) can execute the resource (if it is a file) or search the resource (if it is a directory), returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "isExecutableKey"}, {"var_description": "Key for determining whether the resource is normally not displayed to users, returned as a Boolean NSNumber object (read-write).", "var_type": "URLResourceKey", "is_static": false, "var_name": "isHiddenKey"}, {"var_description": "Key for determining whether the current process (as determined by the EUID) can read the resource, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "isReadableKey"}, {"var_description": "Key for determining whether the resource is a symbolic link, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "isSymbolicLinkKey"}, {"var_description": "Key for determining whether the resource's system immutable bit is set, returned as a Boolean NSNumber object (read-write).", "var_type": "URLResourceKey", "is_static": false, "var_name": "isSystemImmutableKey"}, {"var_description": "Key for determining whether the resource's user immutable bit is set, returned as a Boolean NSNumber object (read-write).", "var_type": "URLResourceKey", "is_static": false, "var_name": "isUserImmutableKey"}, {"var_description": "Key for determining whether the current process (as determined by the EUID) can write to the resource, returned as a Boolean NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "isWritableKey"}, {"var_description": "The resource\u2019s label color, returned as an NSColor object, or nil if the resource has no label color (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "labelColorKey"}, {"var_description": "The resource\u2019s label number, returned as an NSNumber object (read-write).", "var_type": "URLResourceKey", "is_static": false, "var_name": "labelNumberKey"}, {"var_description": "The number of hard links to the resource, returned as an NSNumber object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "linkCountKey"}, {"var_description": "The resource\u2019s localized label text, returned as an NSString object, or nil if the resource has no localized label text (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "localizedLabelKey"}, {"var_description": "The resource\u2019s localized or extension-hidden name, returned as an NSString object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "localizedNameKey"}, {"var_description": "The resource\u2019s localized type description, returned as an NSString object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "localizedTypeDescriptionKey"}, {"var_description": "The resource\u2019s name in the file system, returned as an NSString object (read-write).", "var_type": "URLResourceKey", "is_static": false, "var_name": "nameKey"}, {"var_description": "The file system path for the URL, returned as an NSString object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "pathKey"}, {"var_description": "", "var_type": "URLResourceKey", "is_static": false, "var_name": "canonicalPathKey"}, {"var_description": "The names of tags attached to the resource, returned as an array of NSString values (read-write).", "var_type": "URLResourceKey", "is_static": false, "var_name": "tagNamesKey"}, {"var_description": "The resource\u2019s uniform type identifier (UTI), returned as an NSString object (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "typeIdentifierKey"}, {"var_description": "A boolean NSNumber that contains true if this item\u2019s data has been downloaded to a ubiquity container, false otherwise (read-only).", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousItemIsDownloadedKey"}, {"var_description": "An NSNumber in the range 0\u2013100 that indicates the percentage of the data that has been downloaded (read-only).DeprecatedUse the NSMetadataQuery class to search for NSMetadataItem objects that have the NSMetadataUbiquitousItemPercentDownloadedKey attribute instead.", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousItemPercentDownloadedKey"}, {"var_description": "An NSNumber in the range 0\u2013100 that indicates the percentage of the data that has been uploaded (read-only).DeprecatedUse the NSMetadataQuery class to search for NSMetadataItem objects that have the NSMetadataUbiquitousItemPercentUploadedKey attribute instead.", "var_type": "URLResourceKey", "is_static": false, "var_name": "ubiquitousItemPercentUploadedKey"}], "class_type": "struct", "interface_list": ["Equatable", "Hashable", "RawRepresentable"], "package_name": "foundation", "subclass_list": []}