{"package_name": "foundation", "subclass_list": [], "class_description": "Use NSException to implement exception handling. An exception is a special condition that interrupts the normal flow of program execution. Each application can interrupt the program for different reasons. For example, one application might interpret saving a file in a directory that is write-protected as an exception. In this sense, the exception is equivalent to an error. Another application might interpret the user\u2019s key-press (for example, Control-C) as an exception: an indication that a long-running process should abort.\n", "class_type": "class", "typealias": ["typealias NSUncaughtExceptionHandler = (NSException) -> Void"], "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCoding", "NSCopying"], "class_inherit_list": ["NSObject"], "Methods": [{"params": [{"param_name": ["name"], "param_type": "NSExceptionName", "param_description": "The name of the exception."}, {"param_name": ["format"], "param_type": "String", "param_description": "A human-readable message string (that is, the exception reason) with conversion specifications for the variable arguments in argList. "}, {"param_name": ["arguments", "argList"], "param_type": "CVaListPointer", "param_description": "Variable information to be inserted into the formatted exception reason (in the manner of vprintf)."}], "class_name": "NSException", "is_static": false, "return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_name": "raise", "method_description": "Creates and raises an exception with the specified name, reason, and arguments.", "method_declar": "class func raise(_ name: NSExceptionName, format: String, arguments argList: CVaListPointer)"}, {"params": [{"param_name": ["name", "aName"], "param_type": "NSExceptionName", "param_description": "The name of the exception."}, {"param_name": ["reason", "aReason"], "param_type": "String", "param_description": "A human-readable message string summarizing the reason for the exception."}, {"param_name": ["userInfo", "aUserInfo"], "param_type": "[AnyHashable", "param_description": "A dictionary containing user-defined information relating to the exception"}, {"param_name": ["[AnyHashable"], "param_type": "Any] = nil", "param_description": ""}], "class_name": "NSException", "is_static": false, "return_value": {"return_name": [], "return_description": ["The created NSException object or nil if the object couldn't be created. "], "return_type": []}, "method_name": "init", "method_description": "Initializes and returns a newly allocated exception object.", "method_declar": "init(name aName: NSExceptionName, reason aReason: String?, userInfo aUserInfo: [AnyHashable : Any]? = nil)"}, {"params": [], "class_name": "NSException", "is_static": false, "return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_name": "raise", "method_description": "Raises the receiver, causing program flow to jump to the local exception handler.", "method_declar": "func raise()"}, {"params": [{"param_name": [")", "->", "((NSException)", "->", "Void"], "param_type": ") -> ((NSException) -> Void", "param_description": ""}], "class_name": "NSException", "is_static": false, "return_value": {"return_name": [""], "return_description": ["A pointer to the top-level error-handling function where you can perform last-minute logging before the program terminates."], "return_type": ["Void"]}, "method_name": "NSGetUncaughtExceptionHandler", "method_description": "Returns the top-level error handler.", "method_declar": "func NSGetUncaughtExceptionHandler() -> ((NSException) -> Void)?"}, {"params": [{"param_name": [""], "param_type": "((NSException) -> Void)", "param_description": ""}], "class_name": "NSException", "is_static": false, "return_value": {"return_name": [""], "return_description": [], "return_type": ["Void"]}, "method_name": "NSSetUncaughtExceptionHandler", "method_description": "Changes the top-level error handler.", "method_declar": "func NSSetUncaughtExceptionHandler(_: ((NSException) -> Void)?)"}], "class_name": "NSException", "Vars": [{"var_description": "A string used to uniquely identify the receiver.", "var_type": "NSExceptionName", "is_static": false, "var_name": "name"}, {"var_description": "A string containing a \u201chuman-readable\u201d reason for the receiver.", "var_type": "String", "is_static": false, "var_name": "reason"}, {"var_description": "A dictionary containing application-specific data pertaining to the receiver.", "var_type": "[AnyHashable", "is_static": false, "var_name": "userInfo"}, {"var_description": "The call return addresses related to a raised exception.", "var_type": "[NSNumber]", "is_static": false, "var_name": "callStackReturnAddresses"}, {"var_description": "An array containing the current call stack symbols.", "var_type": "[String]", "is_static": false, "var_name": "callStackSymbols"}]}