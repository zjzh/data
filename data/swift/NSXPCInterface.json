{"subclass_list": [], "typealias": [], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Returns an NSXPCInterface instance for a given protocol.", "is_static": false, "method_name": "init", "class_name": "NSXPCInterface", "method_declar": "init(with protocol: Protocol)", "params": [{"param_type": "Protocol", "param_description": "", "param_name": ["with", "protocol"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Set<AnyHashable"]}, "method_description": "Returns the current list of allowed classes that can appear within the specified collection object argument to the specified method.", "is_static": false, "method_name": "classes", "class_name": "NSXPCInterface", "method_declar": "func classes(for sel: Selector, argumentIndex arg: Int, ofReply: Bool) -> Set<AnyHashable>", "params": [{"param_type": "Selector", "param_description": "Specifies which method in the protocol you want information about.", "param_name": ["for", "sel"]}, {"param_type": "Int", "param_description": "Specifies the position (starting at index 0) of the parameter for which you want to obtain the current set of allowed classes. This may be either the position of a parameter in the method itself or the position in its reply block.", "param_name": ["argumentIndex", "arg"]}, {"param_type": "Bool", "param_description": "Pass true if arg is an index into the parameters of the reply block, or false if it is an index into the parameters of the method itself.", "param_name": ["ofReply"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["NSXPCInterfac"]}, "method_description": "Returns the interface previously set for the specified selector and parameter.", "is_static": false, "method_name": "forSelector", "class_name": "NSXPCInterface", "method_declar": "func forSelector(_ sel: Selector, argumentIndex arg: Int, ofReply: Bool) -> NSXPCInterface?", "params": [{"param_type": "Selector", "param_description": "Specifies which method in the protocol you want information about.", "param_name": ["sel"]}, {"param_type": "Int", "param_description": "Specifies the position (starting at index 0) of the parameter for which you want to obtain the current interface. This may be either the position of a parameter in the method itself or the position in its reply block.", "param_name": ["argumentIndex", "arg"]}, {"param_type": "Bool", "param_description": "Pass true if arg is an index into the parameters of the reply block, or false if it is an index into the parameters of the method itself.", "param_name": ["ofReply"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sets the classes that can appear within the (numerically) specified collection object argument to the specified method.", "is_static": false, "method_name": "setClasses", "class_name": "NSXPCInterface", "method_declar": "func setClasses(_ classes: Set<AnyHashable>, for sel: Selector, argumentIndex arg: Int, ofReply: Bool)", "params": [{"param_type": "Set<AnyHashable>", "param_description": "An NSSet containing Class objects\u2014for example, [MyObject class].", "param_name": ["classes"]}, {"param_type": "Selector", "param_description": "Specifies which method in the protocol is being configured.", "param_name": ["for", "sel"]}, {"param_type": "Int", "param_description": "Specifies the position (starting at index 0) of the parameter for which you are allowing classes. This may be either the position of a parameter in the method itself or the position in its reply block.", "param_name": ["argumentIndex", "arg"]}, {"param_type": "Bool", "param_description": "Pass true if arg is an index into the parameters of the reply block, or false if it is an index into the parameters of the method itself.", "param_name": ["ofReply"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Configures a specific parameter of a method to be sent as a proxy object instead of copied.", "is_static": false, "method_name": "setInterface", "class_name": "NSXPCInterface", "method_declar": "func setInterface(_ ifc: NSXPCInterface, for sel: Selector, argumentIndex arg: Int, ofReply: Bool)", "params": [{"param_type": "NSXPCInterface", "param_description": "The NSXPCInterface object that describes the protocol for the proxy object. The interface is configured the same way as the interface for an exported object or remote object proxy.", "param_name": ["ifc"]}, {"param_type": "Selector", "param_description": "Specifies which method in the protocol is being configured.", "param_name": ["for", "sel"]}, {"param_type": "Int", "param_description": "Specifies the position (starting at index 0) of the parameter for which you are configuring a proxy object. This may be either the position of a parameter in the method itself or the position in its reply block. This argument must be an object.", "param_name": ["argumentIndex", "arg"]}, {"param_type": "Bool", "param_description": "Pass true if arg is an index into the parameters of the reply block, or false if it is an index into the parameters of the method itself.", "param_name": ["ofReply"]}]}], "class_type": "class", "class_name": "NSXPCInterface", "Vars": [{"var_name": "`protocol`", "var_type": "Protocol", "var_description": "The Objective-C protocol that this interface is based on.", "is_static": false}], "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_description": "This object holds all information about the interface of an exported object or remote object proxy. It describes what messages are allowed, what kinds of objects are allowed as arguments, what the signature of any reply blocks are, and information about additional proxy objects.\n", "package_name": "foundation"}