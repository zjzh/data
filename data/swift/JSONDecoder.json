{"package_name": "foundation", "subclass_list": [], "class_description": "The example below shows how to decode an instance of a simple GroceryProduct type from a JSON object. The type adopts Codable so that it's decodable using a JSONDecoder instance.\n\n", "class_type": "class", "typealias": [], "interface_list": [], "class_inherit_list": [], "Methods": [{"params": [], "class_name": "JSONDecoder", "is_static": false, "return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Creates a new, reusable JSON decoder with the default formatting settings and decoding strategies.", "method_declar": "init()"}, {"params": [{"param_name": ["type"], "param_type": "Decodable.Decodableype", "param_description": "The type of the value to decode from the supplied JSON object."}, {"param_name": ["from", "data"], "param_type": "Data", "param_description": "The JSON object to decode."}], "class_name": "JSONDecoder", "is_static": false, "return_value": {"return_name": [""], "return_description": [], "return_type": ["T"]}, "method_name": "decode", "method_description": "Returns a value of the type you specify, decoded from a JSON object.", "method_declar": "func decode<T>(_ type: T.Type, from data: Data) throws -> T where T : Decodable"}], "class_name": "JSONDecoder", "Vars": [{"var_description": "A value that determines how a type's coding keys are decoded from JSON keys.", "var_type": "JSONDecoder.KeyDecodingStrategy", "is_static": false, "var_name": "keyDecodingStrategy"}, {"var_description": "A dictionary you use to customize the decoding process by providing contextual information.", "var_type": "[CodingUserInfoKey", "is_static": false, "var_name": "userInfo"}, {"var_description": "The strategy used when decoding dates from part of a JSON object.", "var_type": "JSONDecoder.DateDecodingStrategy", "is_static": false, "var_name": "dateDecodingStrategy"}, {"var_description": "The strategy that a decoder uses to decode raw data.", "var_type": "JSONDecoder.DataDecodingStrategy", "is_static": false, "var_name": "dataDecodingStrategy"}, {"var_description": "The strategy used by a decoder when it encounters exceptional floating-point values.", "var_type": "JSONDecoder.NonConformingFloatDecodingStrategy", "is_static": false, "var_name": "nonConformingFloatDecodingStrategy"}]}