{"subclass_list": [], "typealias": [], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Initializes a listener in a LaunchAgent or LaunchDaemon which has a name advertised in a launchd.plist file.", "is_static": false, "method_name": "init", "class_name": "NSXPCListener", "method_declar": "init(machServiceName name: String)", "params": [{"param_type": "String", "param_description": "", "param_name": ["machServiceName", "name"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Invalidates the listener.", "is_static": false, "method_name": "invalidate", "class_name": "NSXPCListener", "method_declar": "func invalidate()", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Starts processing of incoming requests.", "is_static": false, "method_name": "resume", "class_name": "NSXPCListener", "method_declar": "func resume()", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Suspends the listener.", "is_static": false, "method_name": "suspend", "class_name": "NSXPCListener", "method_declar": "func suspend()", "params": []}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["NSXPCListene"]}, "method_description": "Returns a new anonymous listener connection.", "is_static": false, "method_name": "anonymous", "class_name": "NSXPCListener", "method_declar": "class func anonymous() -> NSXPCListener", "params": []}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["NSXPCListene"]}, "method_description": "Returns the singleton listener used to listen for incoming connections in an XPC service.", "is_static": false, "method_name": "service", "class_name": "NSXPCListener", "method_declar": "class func service() -> NSXPCListener", "params": []}], "class_type": "class", "class_name": "NSXPCListener", "Vars": [{"var_name": "delegate", "var_type": "NSXPCListenerDelegate", "var_description": "The delegate for the listener.", "is_static": false}, {"var_name": "endpoint", "var_type": "NSXPCListenerEndpoint", "var_description": "Returns an endpoint object that may be sent over an existing connection.", "is_static": false}], "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_description": "Each XPC service, launchd agent, or launchd daemon typically has at least one NSXPCListener object that listens for connections to a specified service name. Each listener must have a delegate that conforms to the NSXPCListenerDelegate protocol. When the listener receives a new connection request, it creates a new NSXPCConnection object, then asks the delegate to inspect, configure, and resume the connection object by calling the delegate's listener(_:shouldAcceptNewConnection:) method.\n", "package_name": "foundation"}