{"class_description": "See Searching, Comparing, and Sorting Strings for details on the effects of these options.\n", "Methods": [{"method_description": "", "method_name": "init", "params": [{"param_type": "UInt", "param_description": "", "param_name": ["rawValue"]}], "class_name": "NSString.CompareOptions", "method_declar": "init(rawValue: UInt)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": [], "class_name": "NSString.CompareOptions", "typealias": [], "Vars": [{"var_description": "A case-insensitive search.", "var_type": "NSString.CompareOptions", "is_static": false, "var_name": "caseInsensitive"}, {"var_description": "Exact character-by-character equivalence.", "var_type": "NSString.CompareOptions", "is_static": false, "var_name": "literal"}, {"var_description": "Search from end of source string.", "var_type": "NSString.CompareOptions", "is_static": false, "var_name": "backwards"}, {"var_description": "Search is limited to start (or end, if NSBackwardsSearch) of source string.", "var_type": "NSString.CompareOptions", "is_static": false, "var_name": "anchored"}, {"var_description": "Numbers within strings are compared using numeric value, that is, Name2.txt < Name7.txt < Name25.txt. ", "var_type": "NSString.CompareOptions", "is_static": false, "var_name": "numeric"}, {"var_description": "Search ignores diacritic marks.", "var_type": "NSString.CompareOptions", "is_static": false, "var_name": "diacriticInsensitive"}, {"var_description": "Search ignores width differences in characters that have full-width and half-width forms, as occurs in East Asian character sets.", "var_type": "NSString.CompareOptions", "is_static": false, "var_name": "widthInsensitive"}, {"var_description": "Comparisons are forced to return either NSOrderedAscending or NSOrderedDescending if the strings are equivalent but not strictly equal.", "var_type": "NSString.CompareOptions", "is_static": false, "var_name": "forcedOrdering"}, {"var_description": "The search string is treated as an ICU-compatible regular expression. If set, no other options can apply except caseInsensitive and anchored. You can use this option only with the rangeOfString:\u2026 methods and replacingOccurrences(of:with:options:range:).", "var_type": "NSString.CompareOptions", "is_static": false, "var_name": "regularExpression"}], "class_type": "struct", "interface_list": ["OptionSet"], "package_name": "foundation", "subclass_list": []}