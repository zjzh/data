{"class_description": "The NSMutableCharacterSet class declares the programmatic interface to objects that manage a modifiable set of Unicode characters. You can add or remove characters from a mutable character set as numeric values in NSRange structures or as character values in strings, combine character sets by union or intersection, and invert a character set.\nMutable character sets are less efficient to use than immutable character sets. If you don\u2019t need to change a character set after creating it, create an immutable copy with copy and use that.\nNSMutableCharacterSet defines no primitive methods. Subclasses must implement all methods declared by this class in addition to the primitives of NSCharacterSet. They must also implement mutableCopy(with:).\nNSMutableCharacterSet is \u201ctoll-free bridged\u201d with its Core Foundation counterpart, CFMutableCharacterSet. See Toll-Free Bridging for more information.\nImportant\nThe Swift overlay to the Foundation framework provides the CharacterSet structure, which bridges to the NSMutableCharacterSet class and its immutable superclass, NSCharacterSet.  For more information about value types, see Working with Cocoa Frameworks in Using Swift with Cocoa and Objective-C (Swift 4.1).\n", "Methods": [{"method_description": "Returns a character set containing the characters in Unicode General Categories L*, M*, and N*.", "method_name": "alphanumeric", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func alphanumeric() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing the characters in Unicode General Category Lt.", "method_name": "capitalizedLetter", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func capitalizedLetter() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing the characters in Unicode General Category Cc and Cf.", "method_name": "control", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func control() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing the characters in the category of decimal numbers.", "method_name": "decimalDigit", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func decimalDigit() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing individual Unicode characters that can also be represented as composed character sequences (such as for letters with accents), by the definition of \u201cstandard decomposition\u201d in version 3.2 of the Unicode character encoding standard.", "method_name": "decomposable", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func decomposable() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing values in the category of Non-Characters or that have not yet been defined in version 3.2 of the Unicode standard.", "method_name": "illegal", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func illegal() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing the characters in Unicode General Category L* & M*.", "method_name": "letter", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func letter() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing the characters in Unicode General Category Ll.", "method_name": "lowercaseLetter", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func lowercaseLetter() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing the newline characters (U+000A ~ U+000D, U+0085, U+2028, and U+2029).", "method_name": "newline", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func newline() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing the characters in Unicode General Category M*.", "method_name": "nonBase", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func nonBase() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing the characters in Unicode General Category P*.", "method_name": "punctuation", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func punctuation() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing the characters in Unicode General Category S*.", "method_name": "symbol", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func symbol() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing the characters in Unicode General Category Lu and Lt.", "method_name": "uppercaseLetter", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func uppercaseLetter() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing characters in Unicode General Category Z*, U+000A ~ U+000D, and U+0085.", "method_name": "whitespaceAndNewline", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func whitespaceAndNewline() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing the characters in Unicode General Category Zs and CHARACTER TABULATION (U+0009).", "method_name": "whitespace", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "class func whitespace() -> NSMutableCharacterSet", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSMutableCharacterSe"]}, "is_static": false}, {"method_description": "Returns a character set containing the characters in a given string.", "method_name": "init", "params": [{"param_type": "String", "param_description": "", "param_name": ["charactersIn", "aString"]}], "class_name": "NSMutableCharacterSet", "method_declar": "init(charactersIn aString: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Returns a character set containing characters with Unicode values in a given range.", "method_name": "init", "params": [{"param_type": "NSRange", "param_description": "", "param_name": ["range", "aRange"]}], "class_name": "NSMutableCharacterSet", "method_declar": "init(range aRange: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Returns a character set containing characters determined by a given bitmap representation.", "method_name": "init", "params": [{"param_type": "Data", "param_description": "", "param_name": ["bitmapRepresentation", "data"]}], "class_name": "NSMutableCharacterSet", "method_declar": "init(bitmapRepresentation data: Data)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Returns a character set read from the bitmap representation stored in the file a given path.", "method_name": "init", "params": [{"param_type": "String", "param_description": "", "param_name": ["contentsOfFile", "fName"]}], "class_name": "NSMutableCharacterSet", "method_declar": "init?(contentsOfFile fName: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Adds to the receiver the characters whose Unicode values are in a given range.", "method_name": "addCharacters", "params": [{"param_type": "NSRange", "param_description": "The range of characters to add. aRange.location is the value of the first character to add; aRange.location + aRange.length\u2013 1 is the value of the last. If aRange.length is 0, this method has no effect.", "param_name": ["in", "aRange"]}], "class_name": "NSMutableCharacterSet", "method_declar": "func addCharacters(in aRange: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Removes from the receiver the characters whose Unicode values are in a given range.", "method_name": "removeCharacters", "params": [{"param_type": "NSRange", "param_description": "The range of characters to remove.aRange.location is the value of the first character to remove; aRange.location + aRange.length\u2013 1 is the value of the last. If aRange.length is 0, this method has no effect.", "param_name": ["in", "aRange"]}], "class_name": "NSMutableCharacterSet", "method_declar": "func removeCharacters(in aRange: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Adds to the receiver the characters in a given string.", "method_name": "addCharacters", "params": [{"param_type": "String", "param_description": "The characters to add to the receiver.", "param_name": ["in", "aString"]}], "class_name": "NSMutableCharacterSet", "method_declar": "func addCharacters(in aString: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Removes from the receiver the characters in a given string.", "method_name": "removeCharacters", "params": [{"param_type": "String", "param_description": "The characters to remove from the receiver.", "param_name": ["in", "aString"]}], "class_name": "NSMutableCharacterSet", "method_declar": "func removeCharacters(in aString: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Modifies the receiver so it contains only characters that exist in both the receiver and another set.", "method_name": "formIntersection", "params": [{"param_type": "CharacterSet", "param_description": "The character set with which to perform the intersection.", "param_name": ["with", "otherSet"]}], "class_name": "NSMutableCharacterSet", "method_declar": "func formIntersection(with otherSet: CharacterSet)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Modifies the receiver so it contains all characters that exist in either the receiver or another set.", "method_name": "formUnion", "params": [{"param_type": "CharacterSet", "param_description": "", "param_name": ["with", "otherSet"]}], "class_name": "NSMutableCharacterSet", "method_declar": "func formUnion(with otherSet: CharacterSet)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Replaces all the characters in the receiver with all the characters it didn\u2019t previously contain.", "method_name": "invert", "params": [], "class_name": "NSMutableCharacterSet", "method_declar": "func invert()", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": ["NSCharacterSet"], "class_name": "NSMutableCharacterSet", "typealias": [], "Vars": [], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying", "NSMutableCopying", "NSSecureCoding"], "package_name": "foundation", "subclass_list": []}