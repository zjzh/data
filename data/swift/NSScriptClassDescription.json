{"package_name": "foundation", "subclass_list": [], "class_description": "A scriptable application provides scriptability information that describes the commands and objects scripters can use in scripts that target the application. That includes information about the classes those scriptable objects are created from.\nAn application\u2019s scriptability information is collected automatically by an instance of NSScriptSuiteRegistry. The registry object creates an NSScriptClassDescription for each class it finds and caches these objects in memory. Cocoa scripting uses registry information in handling scripting requests that target the application.\nA class description instance stores the name, attributes, relationships, and supported commands for a class. For example, a scriptable document class for a drawing application might support attributes such as file and file type, relationships such as collections of circles, rectangles, and lines, and commands such as align and rotate. \nAs with many of the classes in Cocoa\u2019s built-in scripting support, your application may never need to directly work with instances of NSScriptClassDescription. However, one case where you might need access to a class description is if you override objectSpecifier in a scriptable class. For information on how to do this, see Object Specifiers in Cocoa Scripting Guide.\nAnother case where your application may need access to class description information is if you override indicesOfObjectsByEvaluatingWithContainer:count: in a specifier class.\nAlthough you can subclass NSScriptClassDescription, it is unlikely that you would need to do so, or even to create instances of it.\n", "class_type": "class", "typealias": [], "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["NSClassDescription"], "Methods": [{"params": [{"param_name": ["suiteName"], "param_type": "String", "param_description": "The name of the suite (in the application\u2019s scriptability information) that the class belongs to. For example, \"AppName Suite\"."}, {"param_name": ["className"], "param_type": "String", "param_description": "The name of the class that this instance describes."}, {"param_name": ["dictionary", "classDeclaration"], "param_type": "[AnyHashable", "param_description": "A class declaration dictionary of the sort that is valid in script suite property list files. This dictionary provides information about the class such as its attributes and relationships."}, {"param_name": ["[AnyHashable"], "param_type": "Any]", "param_description": ""}], "class_name": "NSScriptClassDescription", "is_static": false, "return_value": {"return_name": [], "return_description": ["The initialized instance. Returns nil if the event code value for the class description itself is missing or is not an NSString. Also returns nil if the superclass name or any of the subdictionaries of descriptions are not of the right type."], "return_type": []}, "method_name": "init", "method_description": "Initializes and returns a newly allocated instance of NSScriptClassDescription.", "method_declar": "init?(suiteName: String, className: String, dictionary classDeclaration: [AnyHashable : Any]?)"}, {"params": [{"param_name": ["for", "aClass"], "param_type": "AnyClass", "param_description": "The class whose description is needed."}], "class_name": "NSScriptClassDescription", "is_static": false, "return_value": {"return_name": [], "return_description": ["The class description for the class specified by aClass or, if that class isn\u2019t scriptable, for the class description for the first superclass that is. Returns nil if it doesn\u2019t find a scriptable class."], "return_type": []}, "method_name": "init", "method_description": "Returns the class description for the specified class or, if it is not scriptable, for the first superclass that is.", "method_declar": "init?(for aClass: AnyClass)"}, {"params": [{"param_name": ["key"], "param_type": "String", "param_description": "The identifying key for an attribute or relationship of the receiver."}], "class_name": "NSScriptClassDescription", "is_static": false, "return_value": {"return_name": [""], "return_description": ["The instance of NSScriptClassDescription for the type of the attribute or relationship specified by key. Returns nil if no scriptable property corresponds to key."], "return_type": ["NSScriptClassDescriptio"]}, "method_name": "forKey", "method_description": "Returns the class description instance for the class type of the specified attribute or relationship.", "method_declar": "func forKey(_ key: String) -> NSScriptClassDescription?"}, {"params": [{"param_name": ["forKey", "toManyRelationshipKey"], "param_type": "String", "param_description": "The key for the to-many relationship that may require an insertion location."}], "class_name": "NSScriptClassDescription", "is_static": false, "return_value": {"return_name": [""], "return_description": ["true if an insertion location must be specified; otherwise, false."], "return_type": ["Boo"]}, "method_name": "isLocationRequiredToCreate", "method_description": "Returns a Boolean value indicating whether an insertion location must be specified when creating a new object in the specified to-many relationship of the receiver.", "method_declar": "func isLocationRequiredToCreate(forKey toManyRelationshipKey: String) -> Bool"}, {"params": [{"param_name": ["forKey", "key"], "param_type": "String", "param_description": "The identifying key for an attribute or relationship of the receiver."}], "class_name": "NSScriptClassDescription", "is_static": false, "return_value": {"return_name": [""], "return_description": ["The four-character Apple event code associated with the attribute or relationship identified by key in the receiver or, if none exists, in the class description for the receiver\u2019s superclass. Returns 0 if no such attribute or relationship is found."], "return_type": ["FourCharCod"]}, "method_name": "appleEventCode", "method_description": "Returns the Apple event code for the specified attribute or relationship in the receiver.", "method_declar": "func appleEventCode(forKey key: String) -> FourCharCode"}, {"params": [{"param_name": ["appleEventCode"], "param_type": "FourCharCode", "param_description": "An Apple event code to compare against the receiver\u2019s primary or secondary codes."}], "class_name": "NSScriptClassDescription", "is_static": false, "return_value": {"return_name": [""], "return_description": ["true if the receiver\u2019s primary four-character Apple event code or any of its secondary codes (its synonyms) matches code; otherwise, false."], "return_type": ["Boo"]}, "method_name": "matchesAppleEventCode", "method_description": "Returns a Boolean value indicating whether a primary or secondary Apple event code in the receiver matches the passed code.", "method_declar": "func matchesAppleEventCode(_ appleEventCode: FourCharCode) -> Bool"}, {"params": [{"param_name": ["forKey", "key"], "param_type": "String", "param_description": "The identifying key for a property of the receiver."}], "class_name": "NSScriptClassDescription", "is_static": false, "return_value": {"return_name": [""], "return_description": ["true if the described class has an ordered to-many relationship identified by the specified key; otherwise, false."], "return_type": ["Boo"]}, "method_name": "hasOrderedToManyRelationship", "method_description": "Returns a Boolean value indicating whether the described class has an ordered to-many relationship identified by the specified key.", "method_declar": "func hasOrderedToManyRelationship(forKey key: String) -> Bool"}, {"params": [{"param_name": ["forKey", "key"], "param_type": "String", "param_description": "The identifying key for a property of the receiver."}], "class_name": "NSScriptClassDescription", "is_static": false, "return_value": {"return_name": [""], "return_description": ["true if the described class has a property identified by the specified key; otherwise, false."], "return_type": ["Boo"]}, "method_name": "hasProperty", "method_description": "Returns a Boolean value indicating whether the described class has a property identified by the specified key.", "method_declar": "func hasProperty(forKey key: String) -> Bool"}, {"params": [{"param_name": ["forKey", "key"], "param_type": "String", "param_description": "The identifying key for a property of the receiver."}], "class_name": "NSScriptClassDescription", "is_static": false, "return_value": {"return_name": [""], "return_description": ["true if the described class has a readable property identified by the specified key; otherwise, false."], "return_type": ["Boo"]}, "method_name": "hasReadableProperty", "method_description": "Returns a Boolean value indicating whether the described class has a readable property identified by the specified key.", "method_declar": "func hasReadableProperty(forKey key: String) -> Bool"}, {"params": [{"param_name": ["forKey", "key"], "param_type": "String", "param_description": "The identifying key for a property of the receiver."}], "class_name": "NSScriptClassDescription", "is_static": false, "return_value": {"return_name": [""], "return_description": ["true if the described class has a writable property identified by the specified key; otherwise, false."], "return_type": ["Boo"]}, "method_name": "hasWritableProperty", "method_description": "Returns a Boolean value indicating whether the described class has a writable property identified by the specified key.", "method_declar": "func hasWritableProperty(forKey key: String) -> Bool"}, {"params": [{"param_name": ["withAppleEventCode", "appleEventCode"], "param_type": "FourCharCode", "param_description": "An Apple event code that identifies a property or element class."}], "class_name": "NSScriptClassDescription", "is_static": false, "return_value": {"return_name": [""], "return_description": ["The key that corresponds to the property or element class identified by appleEventCode in the receiver or, if none exists, in a class description in the receiver\u2019s superclasses."], "return_type": ["Strin"]}, "method_name": "key", "method_description": "Given an Apple event code that identifies a property or element class, returns the key for the corresponding attribute, one-to-one relationship, or one-to-many relationship.", "method_declar": "func key(withAppleEventCode appleEventCode: FourCharCode) -> String?"}, {"params": [{"param_name": ["forKey", "key"], "param_type": "String", "param_description": "The identifying key for an attribute, one-to-one relationship, or one-to-many relationship of the receiver."}], "class_name": "NSScriptClassDescription", "is_static": false, "return_value": {"return_name": [""], "return_description": ["The name of the declared type of the attribute or relationship identified by key; for example, \u201cNSString\u201d. Searches in the receiver first, then in any superclass. Returns nil if no match is found."], "return_type": ["Strin"]}, "method_name": "type", "method_description": "Returns the name of the declared type of the attribute or relationship identified by the passed key.", "method_declar": "func type(forKey key: String) -> String?"}, {"params": [{"param_name": ["forCommand", "commandDescription"], "param_type": "NSScriptCommandDescription", "param_description": "A description for a script command, such as duplicate, make, or move. Encapsulates the scriptability information for that command, such as its Objective-C selector, its argument names and types, and its return type (if any)."}], "class_name": "NSScriptClassDescription", "is_static": false, "return_value": {"return_name": [""], "return_description": ["The selector from the receiver for the command specified by commandDescription. Searches in the receiver first, then in any superclass. Returns NULL if no matching selector is found."], "return_type": ["Selecto"]}, "method_name": "selector", "method_description": "Returns the selector associated with the receiver for the specified command description.", "method_declar": "func selector(forCommand commandDescription: NSScriptCommandDescription) -> Selector?"}, {"params": [{"param_name": ["commandDescription"], "param_type": "NSScriptCommandDescription", "param_description": "A description for a script command, such as duplicate, make, or move. Encapsulates the scriptability information for that command, such as its Objective-C selector, its argument names and types, and its return type (if any)."}], "class_name": "NSScriptClassDescription", "is_static": false, "return_value": {"return_name": [""], "return_description": ["true if an the receiver or the instance of NSScriptClassDescription of any superclass of the receiver\u2019s class lists the command described by commandDesc among its supported commands; otherwise, false."], "return_type": ["Boo"]}, "method_name": "supportsCommand", "method_description": "Returns a Boolean value indicating whether the receiver or any superclass supports the specified command.", "method_declar": "func supportsCommand(_ commandDescription: NSScriptCommandDescription) -> Bool"}], "class_name": "NSScriptClassDescription", "Vars": [{"var_description": "Returns the class description instance for the superclass of the receiver\u2019s class.", "var_type": "NSScriptClassDescription", "is_static": false, "var_name": "superclass"}, {"var_description": "Returns the name of the class the receiver describes, as provided at initialization time.", "var_type": "String", "is_static": false, "var_name": "className"}, {"var_description": "Returns the value of the DefaultSubcontainerAttribute entry of the class dictionary from which the receiver was instantiated.", "var_type": "String", "is_static": false, "var_name": "defaultSubcontainerAttributeKey"}, {"var_description": "Returns the name of the Objective-C class instantiated to implement the scripting class.", "var_type": "String", "is_static": false, "var_name": "implementationClassName"}, {"var_description": "Returns the name of the receiver\u2019s suite.", "var_type": "String", "is_static": false, "var_name": "suiteName"}, {"var_description": "Returns the Apple event code associated with the receiver\u2019s class.", "var_type": "FourCharCode", "is_static": false, "var_name": "appleEventCode"}]}