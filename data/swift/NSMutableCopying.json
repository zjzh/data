{"subclass_list": [], "typealias": [], "class_inherit_list": [], "Methods": [{"return_value": {"return_name": [""], "return_description": [], "return_type": ["An"]}, "method_description": "Returns a new instance that\u2019s a mutable copy of the receiver.Required.", "is_static": false, "method_name": "mutableCopy", "class_name": "NSMutableCopying", "method_declar": "func mutableCopy(with zone: NSZone? = nil) -> Any", "params": [{"param_type": "NSZone = nil", "param_description": "This parameter is ignored. Memory zones are no longer used by Objective-C.", "param_name": ["with", "zone"]}]}], "class_type": "protocol", "class_name": "NSMutableCopying", "Vars": [], "interface_list": [], "class_description": "The NSMutableCopying protocol declares a method for providing mutable copies of an object. Only classes that define an \u201cimmutable vs. mutable\u201d distinction should adopt this protocol. Classes that don\u2019t define such a distinction should adopt NSCopying instead.\nNSMutableCopying declares one method, mutableCopy(with:), but mutable copying is commonly invoked with the convenience method mutableCopy(). The mutableCopy() method is defined for all NSObjects and simply invokes mutableCopy(with:) with the default zone.\nIf a subclass inherits NSMutableCopying from its superclass and declares additional instance variables, the subclass has to override mutableCopy(with:) to properly handle its own instance variables, invoking the superclass\u2019s implementation first.\n", "package_name": "foundation"}