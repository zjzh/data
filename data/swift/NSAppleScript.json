{"package_name": "foundation", "subclass_list": [], "class_description": "This class provides applications with the ability to\nload a script from a URL or from a text string\ncompile or execute a script or an individual Apple event\nobtain an NSAppleEventDescriptor containing the reply from an executed script or event\nobtain an attributed string for a compiled script, suitable for display in a script editor\nobtain various kinds of information about any errors that may occur\nImportant\nNSAppleScript provides the executeAppleEvent(_:error:) method so that you can send an Apple event to invoke a handler in a script. (In an AppleScript script, a handler is the equivalent of a function.) However, you cannot use this method to send Apple events to other applications.\nWhen you create an instance of NSAppleScript object, you can use a URL to specify a script that can be in either text or compiled form, or you can supply the script as a string. Should an error occur when compiling or executing the script, several of the methods return a dictionary containing error information. The keys for obtaining error information, such as errorMessage, are described in the Constants section.\nSee also NSAppleScript Additions Reference in the Application Kit framework, which defines a method that returns the syntax-highlighted source code for a script.\n", "class_type": "class", "typealias": [], "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying"], "class_inherit_list": ["NSObject"], "Methods": [{"params": [{"param_name": ["contentsOf", "url"], "param_type": "URL", "param_description": "A URL that locates a script, in either text or compiled form."}, {"param_name": ["error", "errorInfo"], "param_type": "AutoreleasingUnsafeMutablePointer<NSDictionary>", "param_description": "On return, if an error occurs, a pointer to an error information dictionary."}], "class_name": "NSAppleScript", "is_static": false, "return_value": {"return_name": [], "return_description": ["The initialized script object, nil if an error occurs."], "return_type": []}, "method_name": "init", "method_description": "Initializes a newly allocated script instance from the source identified by the passed URL.", "method_declar": "init?(contentsOf url: URL, error errorInfo: AutoreleasingUnsafeMutablePointer<NSDictionary?>?)"}, {"params": [{"param_name": ["source"], "param_type": "String", "param_description": "A string containing the source code of a script."}], "class_name": "NSAppleScript", "is_static": false, "return_value": {"return_name": [], "return_description": ["The initialized script object, nil if an error occurs."], "return_type": []}, "method_name": "init", "method_description": "Initializes a newly allocated script instance from the passed source.", "method_declar": "init?(source: String)"}, {"params": [{"param_name": ["errorInfo"], "param_type": "AutoreleasingUnsafeMutablePointer<NSDictionary>", "param_description": "On return, if an error occurs, a pointer to an error information dictionary."}], "class_name": "NSAppleScript", "is_static": false, "return_value": {"return_name": [""], "return_description": ["true for success or if the script was already compiled, false otherwise."], "return_type": ["Boo"]}, "method_name": "compileAndReturnError", "method_description": "Compiles the receiver, if it is not already compiled.", "method_declar": "func compileAndReturnError(_ errorInfo: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) -> Bool"}, {"params": [{"param_name": ["errorInfo"], "param_type": "AutoreleasingUnsafeMutablePointer<NSDictionary>", "param_description": "On return, if an error occurs, a pointer to an error information dictionary."}], "class_name": "NSAppleScript", "is_static": false, "return_value": {"return_name": [""], "return_description": ["The result of executing the event, or nil if an error occurs."], "return_type": ["NSAppleEventDescripto"]}, "method_name": "executeAndReturnError", "method_description": "Executes the receiver, compiling it first if it is not already compiled.", "method_declar": "func executeAndReturnError(_ errorInfo: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) -> NSAppleEventDescriptor"}, {"params": [{"param_name": ["event"], "param_type": "NSAppleEventDescriptor", "param_description": "The Apple event to execute."}, {"param_name": ["error", "errorInfo"], "param_type": "AutoreleasingUnsafeMutablePointer<NSDictionary>", "param_description": "On return, if an error occurs, a pointer to an error information dictionary."}], "class_name": "NSAppleScript", "is_static": false, "return_value": {"return_name": [""], "return_description": ["The result of executing the event, or nil if an error occurs."], "return_type": ["NSAppleEventDescripto"]}, "method_name": "executeAppleEvent", "method_description": "Executes an Apple event in the context of the receiver, as a means of allowing the application to invoke a handler in the script.", "method_declar": "func executeAppleEvent(_ event: NSAppleEventDescriptor, error errorInfo: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) -> NSAppleEventDescriptor"}, {"params": [{"param_name": ["contentsOf", "url"], "param_type": "URL", "param_description": "A URL that locates a script, in either text or compiled form."}, {"param_name": ["error", "errorInfo"], "param_type": "AutoreleasingUnsafeMutablePointer<NSDictionary>", "param_description": "On return, if an error occurs, a pointer to an error information dictionary."}], "class_name": "NSAppleScript", "is_static": false, "return_value": {"return_name": [], "return_description": ["The initialized script object, nil if an error occurs."], "return_type": []}, "method_name": "init", "method_description": "Initializes a newly allocated script instance from the source identified by the passed URL.", "method_declar": "init?(contentsOf url: URL, error errorInfo: AutoreleasingUnsafeMutablePointer<NSDictionary?>?)"}], "class_name": "NSAppleScript", "Vars": [{"var_description": "A Boolean value that indicates whether the receiver's script has been compiled.", "var_type": "Bool", "is_static": false, "var_name": "isCompiled"}, {"var_description": "The script source for the receiver.", "var_type": "String", "is_static": false, "var_name": "source"}, {"var_description": "An NSString that supplies a detailed description of the error condition.", "var_type": "String", "is_static": false, "var_name": "errorMessage"}, {"var_description": "An NSNumber that specifies the error number.", "var_type": "String", "is_static": false, "var_name": "errorNumber"}, {"var_description": "An NSString that specifies the name of the application that generated the error.", "var_type": "String", "is_static": false, "var_name": "errorAppName"}, {"var_description": "An NSString that provides a brief description of the error.", "var_type": "String", "is_static": false, "var_name": "errorBriefMessage"}, {"var_description": "An NSValue that specifies a range.", "var_type": "String", "is_static": false, "var_name": "errorRange"}, {"var_description": "Returns the syntax-highlighted source code of the receiver if the receiver has been compiled and its source code is available.", "var_type": "NSAttributedString", "is_static": false, "var_name": "richTextSource"}]}