{"class_description": "When you create a linguistic tagger, you specify one or more NSLinguisticTagScheme constants that correspond to the kind of information you want to know about a selection of natural language text.  When working with linguistic tags using the methods described in Getting Linguistic Tags and Enumerating Linguistic Tags, the returned value depends on the specified scheme. The NSLinguisticTag type represents the constant values that can be returned for certain NSLinguisticTagScheme values.\n", "Methods": [{"method_description": "", "method_name": "init", "params": [{"param_type": "String", "param_description": "", "param_name": ["rawValue"]}], "class_name": "NSLinguisticTag", "method_declar": "init(_ rawValue: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "", "method_name": "init", "params": [{"param_type": "String", "param_description": "", "param_name": ["rawValue"]}], "class_name": "NSLinguisticTag", "method_declar": "init(rawValue: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": [], "class_name": "NSLinguisticTag", "typealias": [], "Vars": [{"var_description": "The token indicates a word.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "word"}, {"var_description": "The token indicates punctuation.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "punctuation"}, {"var_description": "The token indicates white space of any sort.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "whitespace"}, {"var_description": "The token indicates a non-linguistic item, such as a symbol.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "other"}, {"var_description": "The token is a noun.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "noun"}, {"var_description": "This token is a verb.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "verb"}, {"var_description": "This token is an adjective", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "adjective"}, {"var_description": "This token is an adverb.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "adverb"}, {"var_description": "This token is a pronoun.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "pronoun"}, {"var_description": "This token is a determiner.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "determiner"}, {"var_description": "This token is a particle.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "particle"}, {"var_description": "This token is a preposition.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "preposition"}, {"var_description": "This token is a number.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "number"}, {"var_description": "This token is a conjunction.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "conjunction"}, {"var_description": "This token is an interjection.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "interjection"}, {"var_description": "This token is a classifier.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "classifier"}, {"var_description": "This token is an idiom.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "idiom"}, {"var_description": "This token is a word other than a kind described by other lexical classes (noun, verb, adjective, adverb, pronoun, determiner, particle, preposition, number, conjunction, interjection, classifier, and idiom).", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "otherWord"}, {"var_description": "This token is a sentence terminator.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "sentenceTerminator"}, {"var_description": "This token is an open quote.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "openQuote"}, {"var_description": "This token is a close quote.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "closeQuote"}, {"var_description": "This token is an open parenthesis.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "openParenthesis"}, {"var_description": "This token is a close parenthesis.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "closeParenthesis"}, {"var_description": "This token is a word joiner.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "wordJoiner"}, {"var_description": "This token is a dash.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "dash"}, {"var_description": "This token is punctuation other than a kind described by other lexical classes (sentence terminator, open or close quote, open or close parenthesis, word joiner, and dash).", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "otherPunctuation"}, {"var_description": "This token is a paragraph break.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "paragraphBreak"}, {"var_description": "This token is whitespace other than a kind described by other lexical classes (paragraph break).", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "otherWhitespace"}, {"var_description": "This token is a personal name.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "personalName"}, {"var_description": "This token is an organization name.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "organizationName"}, {"var_description": "This token is a place name.", "var_type": "NSLinguisticTag", "is_static": false, "var_name": "placeName"}], "class_type": "struct", "interface_list": ["Equatable", "Hashable", "RawRepresentable"], "package_name": "foundation", "subclass_list": []}