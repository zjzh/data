{"class_description": "", "Methods": [{"method_description": "Gives the delegate the opportunity to analyze both the spelling and grammar simultaneously, which is more efficient.", "method_name": "spellServer", "params": [{"param_type": "NSSpellServer", "param_description": "Spell server making the analysis request.", "param_name": ["sender"]}, {"param_type": "String", "param_description": "String to analyze.", "param_name": ["check", "stringToCheck"]}, {"param_type": "Int", "param_description": "The offset in the string.", "param_name": ["offset"]}, {"param_type": "NSTextCheckingTypes", "param_description": "The text checking types to perform.", "param_name": ["types", "checkingTypes"]}, {"param_type": "[String", "param_description": "A dictionary defining the actions to be taken while checking this string. See Constants in NSSpellChecker for the possible keys. ", "param_name": ["options"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[String"]}, {"param_type": "NSOrthography", "param_description": "The identified orthography of stringToCheck. See NSOrthography for more information.", "param_name": ["orthography"]}, {"param_type": "UnsafeMutablePointer<Int>", "param_description": "On output, returns by-reference the number of words from the beginning of the string object until the misspelled word (or the end of string).", "param_name": ["wordCount"]}], "class_name": "NSSpellServerDelegate", "method_declar": "optional func spellServer(_ sender: NSSpellServer, check stringToCheck: String, offset: Int, types checkingTypes: NSTextCheckingTypes, options: [String : Any]? = nil, orthography: NSOrthography?, wordCount: UnsafeMutablePointer<Int>) -> [NSTextCheckingResult]?", "return_value": {"return_description": ["An array of NSTextCheckingResult instances of the spelling, grammar, or correction types, depending on the checkingTypes requested."], "return_name": [""], "return_type": ["[NSTextCheckingResult"]}, "is_static": false}, {"method_description": "Gives the delegate the opportunity to suggest guesses to the sender for the correct spelling of the given misspelled word in the specified language.", "method_name": "spellServer", "params": [{"param_type": "NSSpellServer", "param_description": "The NSSpellServer object that sent this message.", "param_name": ["sender"]}, {"param_type": "String", "param_description": "The misspelled word.", "param_name": ["suggestGuessesForWord", "word"]}, {"param_type": "String", "param_description": "The language to use for the guesses.", "param_name": ["inLanguage", "language"]}], "class_name": "NSSpellServerDelegate", "method_declar": "optional func spellServer(_ sender: NSSpellServer, suggestGuessesForWord word: String, inLanguage language: String) -> [String]?", "return_value": {"return_description": ["An array of NSString objects indicating possible correct spellings."], "return_name": [""], "return_type": ["[String"]}, "is_static": false}, {"method_description": "Gives the delegate the opportunity to customize the grammatical analysis of a given string.", "method_name": "spellServer", "params": [{"param_type": "NSSpellServer", "param_description": "Spell server satisfying a grammatical analysis request.", "param_name": ["sender"]}, {"param_type": "String", "param_description": "", "param_name": ["checkGrammarIn", "stringToCheck"]}, {"param_type": "String", "param_description": "Language use in string. When nil, the language selected in the Spelling panel is used.", "param_name": ["language"]}, {"param_type": "AutoreleasingUnsafeMutablePointer<NSArray>", "param_description": "", "param_name": ["details"]}], "class_name": "NSSpellServerDelegate", "method_declar": "optional func spellServer(_ sender: NSSpellServer, checkGrammarIn stringToCheck: String, language: String?, details: AutoreleasingUnsafeMutablePointer<NSArray?>?) -> NSRange", "return_value": {"return_description": ["Location of the first flagged grammatical unit within string."], "return_name": [""], "return_type": ["NSRang"]}, "is_static": false}, {"method_description": "Asks the delegate to search for a misspelled word in a given string, using the specified language, and marking the first misspelled word found by returning its range within the string.", "method_name": "spellServer", "params": [{"param_type": "NSSpellServer", "param_description": "The NSSpellServer object that sent this message.", "param_name": ["sender"]}, {"param_type": "String", "param_description": "The string to search for the misspelled word.", "param_name": ["findMisspelledWordIn", "stringToCheck"]}, {"param_type": "String", "param_description": "The language to use for the search.", "param_name": ["language"]}, {"param_type": "UnsafeMutablePointer<Int>", "param_description": "On output, returns by reference the number of words from the beginning of the string object until the misspelled word (or the end of string).", "param_name": ["wordCount"]}, {"param_type": "Bool", "param_description": "If true, the method only counts the words in the string object and does not spell checking.", "param_name": ["countOnly"]}], "class_name": "NSSpellServerDelegate", "method_declar": "optional func spellServer(_ sender: NSSpellServer, findMisspelledWordIn stringToCheck: String, language: String, wordCount: UnsafeMutablePointer<Int>, countOnly: Bool) -> NSRange", "return_value": {"return_description": ["The range of the misspelled word within the given string."], "return_name": [""], "return_type": ["NSRang"]}, "is_static": false}, {"method_description": "Notifies the delegate that the sender has removed the specified word from the user\u2019s list of acceptable words in the specified language.", "method_name": "spellServer", "params": [{"param_type": "NSSpellServer", "param_description": "The NSSpellServer object that removed the word.", "param_name": ["sender"]}, {"param_type": "String", "param_description": "The word that was removed.", "param_name": ["didForgetWord", "word"]}, {"param_type": "String", "param_description": "The language of the removed word.", "param_name": ["inLanguage", "language"]}], "class_name": "NSSpellServerDelegate", "method_declar": "optional func spellServer(_ sender: NSSpellServer, didForgetWord word: String, inLanguage language: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Notifies the delegate that the sender has added the specified word to the user\u2019s list of acceptable words in the specified language.", "method_name": "spellServer", "params": [{"param_type": "NSSpellServer", "param_description": "The NSSpellServer object that added the word.", "param_name": ["sender"]}, {"param_type": "String", "param_description": "The word that was added.", "param_name": ["didLearnWord", "word"]}, {"param_type": "String", "param_description": "The language of the added word.", "param_name": ["inLanguage", "language"]}], "class_name": "NSSpellServerDelegate", "method_declar": "optional func spellServer(_ sender: NSSpellServer, didLearnWord word: String, inLanguage language: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "This delegate method returns an array of possible word completions from the spell checker, based on a partially completed string and a given range.", "method_name": "spellServer", "params": [{"param_type": "NSSpellServer", "param_description": "The NSSpellServer object that sent this message.", "param_name": ["sender"]}, {"param_type": "NSRange", "param_description": "The range of the partially completed word.", "param_name": ["suggestCompletionsForPartialWordRange", "range"]}, {"param_type": "String", "param_description": "The string containing the partial word range.", "param_name": ["in", "string"]}, {"param_type": "String", "param_description": "The language to use for the completion.", "param_name": ["language"]}], "class_name": "NSSpellServerDelegate", "method_declar": "optional func spellServer(_ sender: NSSpellServer, suggestCompletionsForPartialWordRange range: NSRange, in string: String, language: String) -> [String]?", "return_value": {"return_description": ["An array of NSString objects indicating possible completions."], "return_name": [""], "return_type": ["[String"]}, "is_static": false}, {"method_description": "Notifies the spell checker of the users\u2019s response to a correction.", "method_name": "spellServer", "params": [{"param_type": "NSSpellServer", "param_description": "The spell server.", "param_name": ["sender"]}, {"param_type": "Int", "param_description": "The user\u2019s response. ", "param_name": ["recordResponse", "response"]}, {"param_type": "String", "param_description": "The corrected word. This should match the original correction.", "param_name": ["toCorrection", "correction"]}, {"param_type": "String", "param_description": "The original word. This should match the original correction.", "param_name": ["forWord", "word"]}, {"param_type": "String", "param_description": "The language being edited. This should match the original correction.", "param_name": ["language"]}], "class_name": "NSSpellServerDelegate", "method_declar": "optional func spellServer(_ sender: NSSpellServer, recordResponse response: Int, toCorrection correction: String, forWord word: String, language: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": ["NSObjectProtocol"], "class_name": "NSSpellServerDelegate", "typealias": [], "Vars": [], "class_type": "protocol", "interface_list": [], "package_name": "foundation", "subclass_list": []}