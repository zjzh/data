{"class_description": "", "Methods": [{"method_description": "Initializes a new UUID with RFC 4122 version 4 random bytes.", "method_name": "init", "params": [], "class_name": "UUID", "method_declar": "init()", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Create a UUID from a uuid_t.", "method_name": "init", "params": [{"param_type": "uuidt", "param_description": "", "param_name": ["uuid"]}], "class_name": "UUID", "method_declar": "init(uuid: uuid_t)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Returns a Boolean value indicating whether two values are not equal.", "method_name": "!=", "params": [{"param_type": "UUID", "param_description": "A value to compare.", "param_name": ["lhs"]}, {"param_type": "UUID", "param_description": "Another value to compare.", "param_name": ["rhs"]}], "class_name": "UUID", "method_declar": "static func != (lhs: UUID, rhs: UUID) -> Bool", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Boo"]}, "is_static": true}, {"method_description": "Indicates whether two UUIDs are the same.", "method_name": "==", "params": [{"param_type": "UUID", "param_description": "", "param_name": ["lhs"]}, {"param_type": "UUID", "param_description": "", "param_name": ["rhs"]}], "class_name": "UUID", "method_declar": "static func == (lhs: UUID, rhs: UUID) -> Bool", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Boo"]}, "is_static": true}, {"method_description": "", "method_name": "init", "params": [{"param_type": "Decoder", "param_description": "", "param_name": ["from", "decoder"]}], "class_name": "UUID", "method_declar": "init(from decoder: Decoder) throws", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "", "method_name": "encode", "params": [{"param_type": "Encoder", "param_description": "", "param_name": ["to", "encoder"]}], "class_name": "UUID", "method_declar": "func encode(to encoder: Encoder) throws", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": [], "class_name": "UUID", "typealias": ["typealias UUID.ReferenceType = NSUUID"], "Vars": [{"var_description": "Returns the UUID as bytes.", "var_type": "uuidt", "is_static": false, "var_name": "uuid"}, {"var_description": "Returns a string created from the UUID, such as \u201cE621E1F8-C36C-495A-93FC-0C247A3E6E5F\u201d", "var_type": "String", "is_static": false, "var_name": "uuidString"}, {"var_description": "A textual description of the UUID.", "var_type": "String", "is_static": false, "var_name": "description"}, {"var_description": "A textual description of the UUID suitable for debugging.", "var_type": "String", "is_static": false, "var_name": "debugDescription"}, {"var_description": "A mirror that reflects the UUID.", "var_type": "Mirror", "is_static": false, "var_name": "customMirror"}, {"var_description": "The computed hash value of the UUID.", "var_type": "Int", "is_static": false, "var_name": "hashValue"}], "class_type": "struct", "interface_list": ["CustomReflectable", "CustomStringConvertible", "Equatable", "Hashable", "ReferenceConvertible"], "package_name": "foundation", "subclass_list": []}