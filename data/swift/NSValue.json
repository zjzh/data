{"subclass_list": [], "typealias": [], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_name": [], "return_description": ["An initialized value object that contains value, which is interpreted as being of the Objective-C type type. The returned object might be different than the original receiver."], "return_type": []}, "method_description": "Initializes a value object to contain the specified value, interpreted with the specified Objective-C type.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(bytes value: UnsafeRawPointer, objCType type: UnsafePointer<Int8>)", "params": [{"param_type": "UnsafeRawPointer", "param_description": "A pointer to data to be stored in the new value object.", "param_name": ["bytes", "value"]}, {"param_type": "UnsafePointer<Int8>", "param_description": "The Objective-C type of value, as provided by the @encode() compiler directive. Do not hard-code this parameter as a C string. ", "param_name": ["objCType", "type"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains value, which is interpreted as being of the Objective-C type type."], "return_type": []}, "method_description": "Creates a value object containing the specified value, interpreted with the specified Objective-C type.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(_ value: UnsafeRawPointer, withObjCType type: UnsafePointer<Int8>)", "params": [{"param_type": "UnsafeRawPointer", "param_description": "A pointer to data to be stored in the new value object.", "param_name": ["value"]}, {"param_type": "UnsafePointer<Int8>", "param_description": "The Objective-C type of value, as provided by the @encode() compiler directive. Do not hard-code this parameter as a C string. ", "param_name": ["withObjCType", "type"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Copies the value into the specified buffer.", "is_static": false, "method_name": "getValue", "class_name": "NSValue", "method_declar": "func getValue(_ value: UnsafeMutableRawPointer)", "params": [{"param_type": "UnsafeMutableRawPointer", "param_description": "", "param_name": ["value"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains aPointer."], "return_type": []}, "method_description": "Creates a value object containing the specified pointer.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(pointer: UnsafeRawPointer?)", "params": [{"param_type": "UnsafeRawPointer", "param_description": "", "param_name": ["pointer"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains anObject."], "return_type": []}, "method_description": "Creates a value object containing the specified object.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(nonretainedObject anObject: Any?)", "params": [{"param_type": "Any", "param_description": "The value for the new object.", "param_name": ["nonretainedObject", "anObject"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the range information."], "return_type": []}, "method_description": "Creates a new value object containing the specified Foundation range structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(range: NSRange)", "params": [{"param_type": "NSRange", "param_description": "The value for the new object.", "param_name": ["range"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the point information."], "return_type": []}, "method_description": "Creates a new value object containing the specified Foundation point structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(point: NSPoint)", "params": [{"param_type": "NSPoint", "param_description": "", "param_name": ["point"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the size information."], "return_type": []}, "method_description": "Creates a new value object containing the specified Foundation size structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(size: NSSize)", "params": [{"param_type": "NSSize", "param_description": "The value for the new object.", "param_name": ["size"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the data in the rect structure."], "return_type": []}, "method_description": "Creates a new value object containing the specified Foundation rectangle structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(rect: NSRect)", "params": [{"param_type": "NSRect", "param_description": "The value for the new object.", "param_name": ["rect"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the point information."], "return_type": []}, "method_description": "Creates a new value object containing the specified CoreGraphics point structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(cgPoint point: CGPoint)", "params": [{"param_type": "CGPoint", "param_description": "The value for the new object.", "param_name": ["cgPoint", "point"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the vector information."], "return_type": []}, "method_description": "Creates a new value object containing the specified CoreGraphics vector structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(cgVector vector: CGVector)", "params": [{"param_type": "CGVector", "param_description": "The value for the new object.", "param_name": ["cgVector", "vector"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the size information."], "return_type": []}, "method_description": "Creates a new value object containing the specified CoreGraphics size structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(cgSize size: CGSize)", "params": [{"param_type": "CGSize", "param_description": "The value for the new object.", "param_name": ["cgSize", "size"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the rectangle information."], "return_type": []}, "method_description": "Creates a new value object containing the specified CoreGraphics rectangle structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(cgRect rect: CGRect)", "params": [{"param_type": "CGRect", "param_description": "The value for the new object.", "param_name": ["cgRect", "rect"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the affine transform information."], "return_type": []}, "method_description": "Creates a new value object containing the specified CoreGraphics affine transform structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(cgAffineTransform transform: CGAffineTransform)", "params": [{"param_type": "CGAffineTransform", "param_description": "The value for the new object.", "param_name": ["cgAffineTransform", "transform"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the edge inset information."], "return_type": []}, "method_description": "Creates a new value object containing the specified UIKit edge insets structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(uiEdgeInsets insets: UIEdgeInsets)", "params": [{"param_type": "UIEdgeInsets", "param_description": "The value for the new object.", "param_name": ["uiEdgeInsets", "insets"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the offset information."], "return_type": []}, "method_description": "Creates a new value object containing the specified UIKit offset structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(uiOffset insets: UIOffset)", "params": [{"param_type": "UIOffset", "param_description": "The value for the new object.", "param_name": ["uiOffset", "insets"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the transform information."], "return_type": []}, "method_description": "Creates a new value object containing the specified CoreAnimation transform structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(caTransform3D t: CATransform3D)", "params": [{"param_type": "CATransform3D", "param_description": "", "param_name": ["caTransform3D", "t"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the media time information."], "return_type": []}, "method_description": "Creates a new value object containing the specified CoreMedia time structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(time: CMTime)", "params": [{"param_type": "CMTime", "param_description": "The value for the new object.", "param_name": ["time"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the time range information."], "return_type": []}, "method_description": "Creates a new value object containing the specified CoreMedia time range structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(timeRange: CMTimeRange)", "params": [{"param_type": "CMTimeRange", "param_description": "The value for the new object.", "param_name": ["timeRange"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the time mapping information."], "return_type": []}, "method_description": "Creates a new value object containing the specified CoreMedia time mapping structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(timeMapping: CMTimeMapping)", "params": [{"param_type": "CMTimeMapping", "param_description": "The value for the new object.", "param_name": ["timeMapping"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the geographic coordinate information."], "return_type": []}, "method_description": "Creates a new value object containing the specified CoreLocation geographic coordinate structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(mkCoordinate coordinate: CLLocationCoordinate2D)", "params": [{"param_type": "CLLocationCoordinate2D", "param_description": "The value for the new object.", "param_name": ["mkCoordinate", "coordinate"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the coordinate span information."], "return_type": []}, "method_description": "Creates a new value object containing the specified MapKit coordinate span structure.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(mkCoordinateSpan span: MKCoordinateSpan)", "params": [{"param_type": "MKCoordinateSpan", "param_description": "The value for the new object.", "param_name": ["mkCoordinateSpan", "span"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the vector information."], "return_type": []}, "method_description": "Creates a value object that contains the specified three-element SceneKit vector.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(scnVector3 v: SCNVector3)", "params": [{"param_type": "SCNVector3", "param_description": "", "param_name": ["scnVector3", "v"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the vector information."], "return_type": []}, "method_description": "Creates a value object that contains the specified four-element SceneKit vector.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(scnVector4 v: SCNVector4)", "params": [{"param_type": "SCNVector4", "param_description": "", "param_name": ["scnVector4", "v"]}]}, {"return_value": {"return_name": [], "return_description": ["A new value object that contains the matrix information."], "return_type": []}, "method_description": "Creates a value object that contains the specified SceneKit 4 x 4 matrix.", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(scnMatrix4 v: SCNMatrix4)", "params": [{"param_type": "SCNMatrix4", "param_description": "The value for the new object.", "param_name": ["scnMatrix4", "v"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if both value objects are equal; otherwise, false. "], "return_type": ["Boo"]}, "method_description": "Returns a Boolean value that indicates whether the value object and another value object are equal.", "is_static": false, "method_name": "isEqual", "class_name": "NSValue", "method_declar": "func isEqual(to value: NSValue) -> Bool", "params": [{"param_type": "NSValue", "param_description": "", "param_name": ["to", "value"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init?(coder aDecoder: NSCoder)", "params": [{"param_type": "NSCoder", "param_description": "", "param_name": ["coder", "aDecoder"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(directionalEdgeInsets insets: NSDirectionalEdgeInsets)", "params": [{"param_type": "NSDirectionalEdgeInsets", "param_description": "", "param_name": ["directionalEdgeInsets", "insets"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "init", "class_name": "NSValue", "method_declar": "init(edgeInsets insets: NSEdgeInsets)", "params": [{"param_type": "NSEdgeInsets", "param_description": "", "param_name": ["edgeInsets", "insets"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "getValue", "class_name": "NSValue", "method_declar": "func getValue(_ value: UnsafeMutableRawPointer, size: Int)", "params": [{"param_type": "UnsafeMutableRawPointer", "param_description": "", "param_name": ["value"]}, {"param_type": "Int", "param_description": "", "param_name": ["size"]}]}], "class_type": "class", "class_name": "NSValue", "Vars": [{"var_name": "objCType", "var_type": "UnsafePointer<Int8>", "var_description": "A C string containing the Objective-C type of the data contained in the value object.", "is_static": false}, {"var_name": "pointerValue", "var_type": "UnsafeMutableRawPointer", "var_description": "Returns the value as an untyped pointer.", "is_static": false}, {"var_name": "nonretainedObjectValue", "var_type": "Any", "var_description": "The value as a non-retained pointer to an object.", "is_static": false}, {"var_name": "rangeValue", "var_type": "NSRange", "var_description": "The Foundation range structure representation of the value.", "is_static": false}, {"var_name": "pointValue", "var_type": "NSPoint", "var_description": "The Foundation point structure representation of the value.", "is_static": false}, {"var_name": "sizeValue", "var_type": "NSSize", "var_description": "The Foundation size structure representation of the value.", "is_static": false}, {"var_name": "rectValue", "var_type": "NSRect", "var_description": "The Foundation rectangle structure representation of the value.", "is_static": false}, {"var_name": "cgPointValue", "var_type": "CGPoint", "var_description": "Returns the CoreGraphics point structure representation of the value.", "is_static": false}, {"var_name": "cgVectorValue", "var_type": "CGVector", "var_description": "Returns the CoreGraphics vector structure representation of the value.", "is_static": false}, {"var_name": "cgSizeValue", "var_type": "CGSize", "var_description": "Returns the CoreGraphics size structure representation of the value.", "is_static": false}, {"var_name": "cgRectValue", "var_type": "CGRect", "var_description": "Returns the CoreGraphics rectangle structure representation of the value.", "is_static": false}, {"var_name": "cgAffineTransformValue", "var_type": "CGAffineTransform", "var_description": "Returns the CoreGraphics affine transform representation of the value.", "is_static": false}, {"var_name": "uiEdgeInsetsValue", "var_type": "UIEdgeInsets", "var_description": "Returns the UIKit edge insets structure representation of the value.", "is_static": false}, {"var_name": "uiOffsetValue", "var_type": "UIOffset", "var_description": "Returns the UIKit offset structure representation of the value.", "is_static": false}, {"var_name": "caTransform3DValue", "var_type": "CATransform3D", "var_description": "The CoreAnimation transform structure representation of the value.", "is_static": false}, {"var_name": "timeValue", "var_type": "CMTime", "var_description": "The CoreMedia time structure representation of the value.", "is_static": false}, {"var_name": "timeRangeValue", "var_type": "CMTimeRange", "var_description": "The CoreMedia time range structure representation of the value.", "is_static": false}, {"var_name": "timeMappingValue", "var_type": "CMTimeMapping", "var_description": "The CoreMedia time mapping structure representation of the value.", "is_static": false}, {"var_name": "mkCoordinateValue", "var_type": "CLLocationCoordinate2D", "var_description": "The CoreLocation geographic coordinate structure representation of the value.", "is_static": false}, {"var_name": "mkCoordinateSpanValue", "var_type": "MKCoordinateSpan", "var_description": "The MapKit coordinate span structure representation of the value.", "is_static": false}, {"var_name": "scnVector3Value", "var_type": "SCNVector3", "var_description": "The three-element Scene Kit vector representation of the value.", "is_static": false}, {"var_name": "scnVector4Value", "var_type": "SCNVector4", "var_description": "The four-element Scene Kit vector representation of the value.", "is_static": false}, {"var_name": "scnMatrix4Value", "var_type": "SCNMatrix4", "var_description": "The Scene Kit 4 x 4 matrix representation of the value.", "is_static": false}, {"var_name": "directionalEdgeInsetsValue", "var_type": "NSDirectionalEdgeInsets", "var_description": "", "is_static": false}, {"var_name": "edgeInsetsValue", "var_type": "NSEdgeInsets", "var_description": "", "is_static": false}], "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying", "NSSecureCoding"], "class_description": "An NSValue object can hold any of the scalar types such as int, float, and char, as well as pointers, structures, and object id references. Use this class to work with such data types in collections (such as NSArray and NSSet), Key-value coding, and other APIs that require Objective-C objects. NSValue objects are always immutable.\nThe abstract NSValue class is the public interface of a class cluster consisting mostly of private, concrete classes that create and return a value object appropriate for a given situation. It is possible to subclass NSValue, but doing so requires providing storage facilities for the value (which is not inherited by subclasses) and implementing two primitive methods.\nAny subclass of NSValue must override the primitive instance methods getValue(_:) and objCType. These methods must operate on the storage that you provide for the value.\nYou might want to implement an initializer for your subclass that is suited to the storage you provide. The NSValue class does not have a designated initializer, so your initializer need only invoke the init() method of super. The NSValue class adopts the NSCopying and NSSecureCoding protocols; if you want instances of your own custom subclass created from copying or coding, override the methods in these protocols.\nYou may also wish to implement the hash method to make your subclass work well in collections.\nIf you need only to use NSValue objects for wrap a custom data types or structures defined by your app, you need not create an NSValue subclass. Instead, create a category that uses existing NSValue methods to store and retrieve data of your custom type. For example, the code below defines a custom Polyhedron structure and creates NSValue convenience methods to store and retrieve it:\n", "package_name": "foundation"}