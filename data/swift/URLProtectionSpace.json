{"subclass_list": [], "typealias": [], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_name": [], "return_description": ["A new protection space object, initialized with the given host, port, protocol, realm, and authentication method."], "return_type": []}, "method_description": "Creates a protection space object from the given host, port, protocol, realm, and authentication method.", "is_static": false, "method_name": "init", "class_name": "URLProtectionSpace", "method_declar": "init(host: String, port: Int, protocol: String?, realm: String?, authenticationMethod: String?)", "params": [{"param_type": "String", "param_description": "The host name for the URLProtectionSpace object.", "param_name": ["host"]}, {"param_type": "Int", "param_description": "The port for the protection space object. If port is 0, the default port for the specified protocol is used, for example, port 80 for HTTP. Note that servers can, and do, treat these values differently.", "param_name": ["port"]}, {"param_type": "String", "param_description": "The protocol for the protection space object. The value of protocol is equivalent to the scheme for a URL in the protection space, for example, \u201chttp\u201d, \u201chttps\u201d,  \u201cftp\u201d, etc.", "param_name": ["protocol"]}, {"param_type": "String", "param_description": "A string indicating a protocol-specific subdivision of the host. realm may be nil if there is no specified realm or if the protocol doesn\u2019t support realms.", "param_name": ["realm"]}, {"param_type": "String", "param_description": "The type of authentication to use. authenticationMethod should be set to one of the values in NSURLProtectionSpace Authentication Method Constants or nil to use the default, NSURLAuthenticationMethodDefault.", "param_name": ["authenticationMethod"]}]}, {"return_value": {"return_name": [], "return_description": ["A new protection space object, with the given host, port, proxyType, realm, and authenticationMethod."], "return_type": []}, "method_description": "Creates a protection space object representing a proxy server. ", "is_static": false, "method_name": "init", "class_name": "URLProtectionSpace", "method_declar": "init(proxyHost host: String, port: Int, type: String?, realm: String?, authenticationMethod: String?)", "params": [{"param_type": "String", "param_description": "The host of the proxy server for the protection space object.", "param_name": ["proxyHost", "host"]}, {"param_type": "Int", "param_description": "The port for the protection space object. If port is 0 the default port for the specified proxy type is used, for example, port 80 for HTTP. Note that servers can, and do, treat these values differently.", "param_name": ["port"]}, {"param_type": "String", "param_description": "", "param_name": ["type"]}, {"param_type": "String", "param_description": "A string indicating a protocol specific subdivision of the host. realm may be nil if there is no specified realm or if the protocol doesn\u2019t support realms.", "param_name": ["realm"]}, {"param_type": "String", "param_description": "The type of authentication to use. authenticationMethod should be set to one of the values in NSURLProtectionSpace Authentication Method Constants or nil to use the default, NSURLAuthenticationMethodDefault.", "param_name": ["authenticationMethod"]}]}, {"return_value": {"return_name": [], "return_description": ["A new protection space object, with the given host, port, proxyType, realm, and authenticationMethod."], "return_type": []}, "method_description": "Creates a protection space object representing a proxy server. ", "is_static": false, "method_name": "init", "class_name": "URLProtectionSpace", "method_declar": "init(proxyHost host: String, port: Int, type: String?, realm: String?, authenticationMethod: String?)", "params": [{"param_type": "String", "param_description": "The host of the proxy server for the protection space object.", "param_name": ["proxyHost", "host"]}, {"param_type": "Int", "param_description": "The port for the protection space object. If port is 0 the default port for the specified proxy type is used, for example, port 80 for HTTP. Note that servers can, and do, treat these values differently.", "param_name": ["port"]}, {"param_type": "String", "param_description": "", "param_name": ["type"]}, {"param_type": "String", "param_description": "A string indicating a protocol specific subdivision of the host. realm may be nil if there is no specified realm or if the protocol doesn\u2019t support realms.", "param_name": ["realm"]}, {"param_type": "String", "param_description": "The type of authentication to use. authenticationMethod should be set to one of the values in NSURLProtectionSpace Authentication Method Constants or nil to use the default, NSURLAuthenticationMethodDefault.", "param_name": ["authenticationMethod"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Boo"]}, "method_description": "", "is_static": false, "method_name": "isProxy", "class_name": "URLProtectionSpace", "method_declar": "func isProxy() -> Bool", "params": []}], "class_type": "class", "class_name": "URLProtectionSpace", "Vars": [{"var_name": "authenticationMethod", "var_type": "String", "var_description": "The authentication method used by the receiver.", "is_static": false}, {"var_name": "distinguishedNames", "var_type": "[Data]", "var_description": "The acceptable certificate-issuing authorities for client certificate authentication.", "is_static": false}, {"var_name": "host", "var_type": "String", "var_description": "The receiver\u2019s host.", "is_static": false}, {"var_name": "port", "var_type": "Int", "var_description": "The receiver\u2019s port.", "is_static": false}, {"var_name": "`protocol`", "var_type": "String", "var_description": "The receiver\u2019s protocol.", "is_static": false}, {"var_name": "proxyType", "var_type": "String", "var_description": "The receiver's proxy type.", "is_static": false}, {"var_name": "realm", "var_type": "String", "var_description": "The receiver\u2019s authentication realm", "is_static": false}, {"var_name": "receivesCredentialSecurely", "var_type": "Bool", "var_description": "A Boolean value that indicates whether the credentials for the protection space can be sent securely.", "is_static": false}, {"var_name": "serverTrust", "var_type": "SecTrust", "var_description": "A representation of the server\u2019s SSL transaction state.", "is_static": false}, {"var_name": "NSURLProtectionSpaceHTTP", "var_type": "String", "var_description": "The protocol type for HTTP.", "is_static": false}, {"var_name": "NSURLProtectionSpaceHTTPS", "var_type": "String", "var_description": "The protocol type for HTTPS.", "is_static": false}, {"var_name": "NSURLProtectionSpaceFTP", "var_type": "String", "var_description": "The protocol type for FTP.", "is_static": false}, {"var_name": "NSURLProtectionSpaceHTTPProxy", "var_type": "String", "var_description": "The proxy type for HTTP proxies.", "is_static": false}, {"var_name": "NSURLProtectionSpaceHTTPSProxy", "var_type": "String", "var_description": "The proxy type for HTTPS proxies.", "is_static": false}, {"var_name": "NSURLProtectionSpaceFTPProxy", "var_type": "String", "var_description": "The proxy type for FTP proxies.", "is_static": false}, {"var_name": "NSURLProtectionSpaceSOCKSProxy", "var_type": "String", "var_description": "The proxy type for SOCKS proxies.", "is_static": false}, {"var_name": "NSURLAuthenticationMethodClientCertificate", "var_type": "String", "var_description": "Use client certificate authentication for this protection space. ", "is_static": false}, {"var_name": "NSURLAuthenticationMethodNegotiate", "var_type": "String", "var_description": "Negotiate whether to use Kerberos or NTLM authentication for this protection space.", "is_static": false}, {"var_name": "NSURLAuthenticationMethodNTLM", "var_type": "String", "var_description": "Use NTLM authentication for this protection space. ", "is_static": false}, {"var_name": "NSURLAuthenticationMethodServerTrust", "var_type": "String", "var_description": "Perform server trust authentication (certificate validation) for this protection space.", "is_static": false}, {"var_name": "NSURLAuthenticationMethodDefault", "var_type": "String", "var_description": "Use the default authentication method for a protocol.", "is_static": false}, {"var_name": "NSURLAuthenticationMethodHTMLForm", "var_type": "String", "var_description": "Use HTML form authentication for this protection space.", "is_static": false}, {"var_name": "NSURLAuthenticationMethodHTTPBasic", "var_type": "String", "var_description": "Use HTTP basic authentication for this protection space.", "is_static": false}, {"var_name": "NSURLAuthenticationMethodHTTPDigest", "var_type": "String", "var_description": "Use HTTP digest authentication for this protection space.", "is_static": false}], "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying", "NSSecureCoding"], "class_description": "A protection space defines a series of matching constraints that determine which credential should be provided. For example, if a request provides your delegate with a URLAuthenticationChallenge object that requests a client username and password, your app should provide the correct username and password for the particular host, port, protocol, and realm, as specified in the challenge\u2019s protection space.\nNote\nThis class has no designated initializer; its init method always returns nil. You must initialize this class by calling one of the initialization methods described in Creating a Protection Space.\n", "package_name": "foundation"}