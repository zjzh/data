{"subclass_list": [], "typealias": [], "class_inherit_list": [], "Methods": [{"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "", "is_static": false, "method_name": "init", "class_name": "XMLNode.Options", "method_declar": "init(rawValue: UInt)", "params": [{"param_type": "UInt", "param_description": "", "param_name": ["rawValue"]}]}], "class_type": "struct", "class_name": "XMLNode.Options", "Vars": [{"var_name": "documentIncludeContentTypeDeclaration", "var_type": "XMLNode.Options", "var_description": "Includes a content type declaration for HTML or XHTML in the output of the document. ", "is_static": false}, {"var_name": "documentTidyHTML", "var_type": "XMLNode.Options", "var_description": "Formats HTML into valid XHTML during processing of the document. ", "is_static": false}, {"var_name": "documentTidyXML", "var_type": "XMLNode.Options", "var_description": "Changes malformed XML into valid XML during processing of the document. ", "is_static": false}, {"var_name": "documentValidate", "var_type": "XMLNode.Options", "var_description": "Validates this document against its DTD (internal or external) or XML Schema. ", "is_static": false}, {"var_name": "documentXInclude", "var_type": "XMLNode.Options", "var_description": "Replaces all XInclude nodes in the document with the nodes referred to.", "is_static": false}, {"var_name": "nodeCompactEmptyElement", "var_type": "XMLNode.Options", "var_description": "Requests that an element should be contracted when empty; for example, <flag/>.", "is_static": false}, {"var_name": "nodeExpandEmptyElement", "var_type": "XMLNode.Options", "var_description": "Requests that an element should be expanded when empty; for example, <flag></flag>. This is the default.", "is_static": false}, {"var_name": "nodeIsCDATA", "var_type": "XMLNode.Options", "var_description": "Specifies that a text node contains and is written out as a CDATA section.", "is_static": false}, {"var_name": "nodeLoadExternalEntitiesAlways", "var_type": "XMLNode.Options", "var_description": "Requests that external entities are always loaded.", "is_static": false}, {"var_name": "nodeLoadExternalEntitiesNever", "var_type": "XMLNode.Options", "var_description": "Requests that external entities are never loaded.", "is_static": false}, {"var_name": "nodeLoadExternalEntitiesSameOriginOnly", "var_type": "XMLNode.Options", "var_description": "Requests that external entities are always loaded and only applies when a URL has been provided.", "is_static": false}, {"var_name": "nodeNeverEscapeContents", "var_type": "XMLNode.Options", "var_description": "", "is_static": false}, {"var_name": "nodePreserveAll", "var_type": "XMLNode.Options", "var_description": "", "is_static": false}, {"var_name": "nodePreserveAttributeOrder", "var_type": "XMLNode.Options", "var_description": "Requests that NSXMLNode preserve the order of attributes as in the source XML. ", "is_static": false}, {"var_name": "nodePreserveCDATA", "var_type": "XMLNode.Options", "var_description": "Requests that NSXMLNode preserve CDATA blocks where defined in the input XML. ", "is_static": false}, {"var_name": "nodePreserveCharacterReferences", "var_type": "XMLNode.Options", "var_description": "Specifies that character references (&#nnn;) should not be resolved for XML output of this node.", "is_static": false}, {"var_name": "nodePreserveDTD", "var_type": "XMLNode.Options", "var_description": "Specifies that declarations in a DTD should be preserved until it the DTD is modified. For example, parameter entities are by default expanded; with this option, they are written out as they originally occur in the DTD.", "is_static": false}, {"var_name": "nodePreserveEmptyElements", "var_type": "XMLNode.Options", "var_description": "Specifies that empty elements in the input XML be preserved in their contracted or expanded form.", "is_static": false}, {"var_name": "nodePreserveEntities", "var_type": "XMLNode.Options", "var_description": "Specifies that entities (&xyz;) should not be resolved for XML output of this node.", "is_static": false}, {"var_name": "nodePreserveNamespaceOrder", "var_type": "XMLNode.Options", "var_description": "Requests NSXML to preserve the order of namespace URI definitions as in the source XML. ", "is_static": false}, {"var_name": "nodePreservePrefixes", "var_type": "XMLNode.Options", "var_description": "Requests NSXMLNode not to choose prefixes based on the closest namespace URI definition.", "is_static": false}, {"var_name": "nodePreserveQuotes", "var_type": "XMLNode.Options", "var_description": "Specifies that the quoting style used in the input XML (single or double quotes) be preserved.", "is_static": false}, {"var_name": "nodePreserveWhitespace", "var_type": "XMLNode.Options", "var_description": "Requests NSXMLNode to preserve whitespace characters (such as tabs and carriage returns) in the XML source that are not part of node content.", "is_static": false}, {"var_name": "nodePrettyPrint", "var_type": "XMLNode.Options", "var_description": "Print this node with extra space for readability. (Output)", "is_static": false}, {"var_name": "nodePromoteSignificantWhitespace", "var_type": "XMLNode.Options", "var_description": "", "is_static": false}, {"var_name": "nodeUseDoubleQuotes", "var_type": "XMLNode.Options", "var_description": "Requests that NSXML use double quotes for the value of an attribute or namespace node. This is the default.", "is_static": false}, {"var_name": "nodeUseSingleQuotes", "var_type": "XMLNode.Options", "var_description": "Requests that NSXML use single quotes for the value of an attribute or namespace node.", "is_static": false}], "interface_list": ["OptionSet"], "class_description": "The options with \u201cPreserve\u201d in their names are applicable only when external sources of XML are parsed; they have no effect on node objects that are programmatically created. Other options are used in initialization and output methods of NSXMLDocument; see the XMLDocument reference documentation for details.\n", "package_name": "foundation"}