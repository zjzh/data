{"package_name": "foundation", "subclass_list": [], "class_description": "", "class_type": "struct", "typealias": ["typealias PersonNameComponents.ReferenceType = NSPersonNameComponents"], "interface_list": ["CustomDebugStringConvertible", "CustomReflectable", "CustomStringConvertible", "Equatable", "Hashable", "ReferenceConvertible"], "class_inherit_list": [], "Methods": [{"params": [], "class_name": "PersonNameComponents", "is_static": false, "return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_name": "init", "method_description": "Initializes a new person name components structure.", "method_declar": "init()"}, {"params": [{"param_name": ["lhs"], "param_type": "PersonNameComponents", "param_description": "A value to compare."}, {"param_name": ["rhs"], "param_type": "PersonNameComponents", "param_description": "Another value to compare."}], "class_name": "PersonNameComponents", "is_static": true, "return_value": {"return_name": [""], "return_description": [], "return_type": ["Boo"]}, "method_name": "!=", "method_description": "Returns a Boolean value indicating whether two values are not equal.", "method_declar": "static func != (lhs: PersonNameComponents, rhs: PersonNameComponents) -> Bool"}, {"params": [{"param_name": ["lhs"], "param_type": "PersonNameComponents", "param_description": ""}, {"param_name": ["rhs"], "param_type": "PersonNameComponents", "param_description": ""}], "class_name": "PersonNameComponents", "is_static": true, "return_value": {"return_name": [""], "return_description": [], "return_type": ["Boo"]}, "method_name": "==", "method_description": "Indicates whether two person name component structures are the same.", "method_declar": "static func == (lhs: PersonNameComponents, rhs: PersonNameComponents) -> Bool"}, {"params": [{"param_name": ["from", "decoder"], "param_type": "Decoder", "param_description": ""}], "class_name": "PersonNameComponents", "is_static": false, "return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_name": "init", "method_description": "", "method_declar": "init(from decoder: Decoder) throws"}, {"params": [{"param_name": ["to", "encoder"], "param_type": "Encoder", "param_description": ""}], "class_name": "PersonNameComponents", "is_static": false, "return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_name": "encode", "method_description": "", "method_declar": "func encode(to encoder: Encoder) throws"}], "class_name": "PersonNameComponents", "Vars": [{"var_description": "The portion of a name\u2019s full form of address that precedes the name itself (for example, \u201cDr.,\u201d \u201cMr.,\u201d \u201cMs.\u201d).", "var_type": "String", "is_static": false, "var_name": "namePrefix"}, {"var_description": "Name bestowed upon an individual to differentiate them from other members of a group that share a family name (for example, \u201cJohnathan\u201d).", "var_type": "String", "is_static": false, "var_name": "givenName"}, {"var_description": "Secondary name bestowed upon an individual to differentiate them from others that have the same given name (for example, \u201cMaple\u201d).", "var_type": "String", "is_static": false, "var_name": "middleName"}, {"var_description": "Name bestowed upon an individual to denote membership in a group or family. (for example, \u201cAppleseed\u201d).", "var_type": "String", "is_static": false, "var_name": "familyName"}, {"var_description": "The portion of a name\u2019s full form of address that follows the name itself (for example, \u201cEsq.,\u201d \u201cJr.,\u201d \u201cPh.D.\u201d).", "var_type": "String", "is_static": false, "var_name": "nameSuffix"}, {"var_description": "Name substituted for the purposes of familiarity (for example, \"Johnny\").", "var_type": "String", "is_static": false, "var_name": "nickname"}, {"var_description": "The phonetic representation name components of the receiver. ", "var_type": "PersonNameComponents", "is_static": false, "var_name": "phoneticRepresentation"}, {"var_description": "A textual description of the structure.", "var_type": "String", "is_static": false, "var_name": "description"}, {"var_description": "A textual description of the structure suitable for debugging.", "var_type": "String", "is_static": false, "var_name": "debugDescription"}, {"var_description": "A mirror that reflects the date interval.", "var_type": "Mirror", "is_static": false, "var_name": "customMirror"}, {"var_description": "The computed hash value for the date interval.", "var_type": "Int", "is_static": false, "var_name": "hashValue"}]}