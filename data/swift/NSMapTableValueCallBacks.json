{"class_description": "All functions must know the types of things in the map table to be able to operate on them. Sets of predefined call backs are described in NSMapTable.\n", "Methods": [{"method_description": "", "method_name": "init", "params": [], "class_name": "NSMapTableValueCallBacks", "method_declar": "init()", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "", "method_name": "init", "params": [{"param_type": "((NSMapTable<AnyObject, AnyObject>, UnsafeRawPointer) -> Void)", "param_description": "", "param_name": ["retain"]}, {"param_type": "((NSMapTable<AnyObject, AnyObject>, UnsafeMutableRawPointer) -> Void)", "param_description": "", "param_name": ["release"]}, {"param_type": "((NSMapTable<AnyObject, AnyObject>, UnsafeRawPointer) -> String)", "param_description": "", "param_name": ["describe"]}], "class_name": "NSMapTableValueCallBacks", "method_declar": "init(retain: ((NSMapTable<AnyObject, AnyObject>, UnsafeRawPointer) -> Void)?, release: ((NSMapTable<AnyObject, AnyObject>, UnsafeMutableRawPointer) -> Void)?, describe: ((NSMapTable<AnyObject, AnyObject>, UnsafeRawPointer) -> String?)?)", "return_value": {"return_description": [], "return_name": [""], "return_type": ["String"]}, "is_static": false}], "class_inherit_list": [], "class_name": "NSMapTableValueCallBacks", "typealias": [], "Vars": [{"var_description": "Points to the function that produces an autoreleased NSString * describing the given element. If NULL, then the map table produces a generic string description.", "var_type": "((NSMapTable<AnyObject,", "is_static": false, "var_name": "describe"}, {"var_description": "Points to the function that decrements a reference count for the given element, and if the reference count becomes zero, frees the given element. If NULL, then nothing is done for reference counting or releasing.", "var_type": "((NSMapTable<AnyObject,", "is_static": false, "var_name": "release"}, {"var_description": "Points to the function that increments a reference count for the given element. If NULL, then nothing is done for reference counting.", "var_type": "((NSMapTable<AnyObject,", "is_static": false, "var_name": "retain"}], "class_type": "struct", "interface_list": [], "package_name": "foundation", "subclass_list": []}