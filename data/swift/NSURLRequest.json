{"subclass_list": [], "typealias": [], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_name": [], "return_description": ["The initialized URL request."], "return_type": []}, "method_description": "Creates a URL request for a specified URL.", "is_static": false, "method_name": "init", "class_name": "NSURLRequest", "method_declar": "convenience init(url URL: URL)", "params": [{"param_type": "URL", "param_description": "", "param_name": ["url", "URL"]}]}, {"return_value": {"return_name": [], "return_description": ["The initialized URL request."], "return_type": []}, "method_description": "Creates a URL request with the specified URL, cache policy, and timeout values.", "is_static": false, "method_name": "init", "class_name": "NSURLRequest", "method_declar": "init(url URL: URL, cachePolicy: NSURLRequest.CachePolicy, timeoutInterval: TimeInterval)", "params": [{"param_type": "URL", "param_description": "", "param_name": ["url", "URL"]}, {"param_type": "NSURLRequest.CachePolicy", "param_description": "The cache policy for the request.", "param_name": ["cachePolicy"]}, {"param_type": "TimeInterval", "param_description": "The timeout interval for the request, in seconds.", "param_name": ["timeoutInterval"]}]}, {"return_value": {"return_name": [""], "return_description": ["The value associated with the header field field, or nil if there is no corresponding header field."], "return_type": ["Strin"]}, "method_description": "Returns the value of the specified HTTP header field.", "is_static": false, "method_name": "value", "class_name": "NSURLRequest", "method_declar": "func value(forHTTPHeaderField field: String) -> String?", "params": [{"param_type": "String", "param_description": "The name of the header field whose value is to be returned. In keeping with the HTTP RFC, HTTP header field names are case-insensitive.", "param_name": ["forHTTPHeaderField", "field"]}]}], "class_type": "class", "class_name": "NSURLRequest", "Vars": [{"var_name": "cachePolicy", "var_type": "NSURLRequest.CachePolicy", "var_description": "The request\u2019s cache policy.", "is_static": false}, {"var_name": "httpMethod", "var_type": "String", "var_description": "The HTTP request method.", "is_static": false}, {"var_name": "url", "var_type": "URL", "var_description": "The URL being requested.", "is_static": false}, {"var_name": "httpBody", "var_type": "Data", "var_description": "The request body.", "is_static": false}, {"var_name": "httpBodyStream", "var_type": "InputStream", "var_description": "The request body as an input stream.", "is_static": false}, {"var_name": "mainDocumentURL", "var_type": "URL", "var_description": "The main document URL associated with the request.", "is_static": false}, {"var_name": "allHTTPHeaderFields", "var_type": "[String", "var_description": "All of the request\u2019s HTTP header fields.", "is_static": false}, {"var_name": "timeoutInterval", "var_type": "TimeInterval", "var_description": "The request\u2019s timeout interval, in seconds.", "is_static": false}, {"var_name": "httpShouldHandleCookies", "var_type": "Bool", "var_description": "A Boolean value that indicates whether the default cookie handling will be used for this request.", "is_static": false}, {"var_name": "httpShouldUsePipelining", "var_type": "Bool", "var_description": "A Boolean value that indicates whether the request should continue transmitting data before receiving a response from an earlier transmission.", "is_static": false}, {"var_name": "allowsCellularAccess", "var_type": "Bool", "var_description": "A Boolean value that indicates whether the request is allowed to use the cellular radio (if present).", "is_static": false}, {"var_name": "networkServiceType", "var_type": "NSURLRequest.NetworkServiceType", "var_description": "The network service type of the request.", "is_static": false}, {"var_name": "supportsSecureCoding", "var_type": "Bool", "var_description": "A Boolean value indicating whether the NSURLRequest implements the NSSecureCoding protocol.", "is_static": false}], "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying", "NSMutableCopying", "NSSecureCoding"], "class_description": "NSURLRequest encapsulates two basic data elements of a load request: the URL to load, and the policy to use when consulting the URL content cache made available by the implementation.\nImportant\nThis class serves only to encapsulate information about a URL request. You must use other classes such as URLSession to send these requests to a server. See Fetching Website Data into Memory and Uploading Data to a Website for an introduction to these techniques.\nNSURLRequest is designed to be extended to support additional protocols by creating extensions that provide accessor methods for your own protocol-specific properties. Those methods can get and set the actual values by calling the URLProtocol methods property(forKey:in:) and setProperty(_:forKey:in:).\nThe mutable subclass of NSURLRequest is NSMutableURLRequest.\nImportant\nThe Swift overlay to the Foundation framework provides the URLRequest structure, which bridges to the NSURLRequest class and its mutable subclass, NSMutableURLRequest. For more information about value types, see Working with Cocoa Frameworks in Using Swift with Cocoa and Objective-C (Swift 4.1).\n", "package_name": "foundation"}