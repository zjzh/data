{"class_description": "Locale encapsulates information about linguistic, cultural, and technological conventions and standards. Examples of information encapsulated by a locale include the symbol used for the decimal separator in numbers and the way dates are formatted.\nLocales are typically used to provide, format, and interpret information about and according to the user\u2019s customs and preferences. They are frequently used in conjunction with formatters. Although you can use many locales, you usually use the one associated with the current user.\n", "Methods": [{"method_description": "Creates a locale with the specified identifier.", "method_name": "init", "params": [{"param_type": "String", "param_description": "", "param_name": ["identifier"]}], "class_name": "Locale", "method_declar": "init(identifier: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Returns a canonical identifier from the given string.", "method_name": "canonicalIdentifier", "params": [{"param_type": "String", "param_description": "", "param_name": ["from", "string"]}], "class_name": "Locale", "method_declar": "static func canonicalIdentifier(from string: String) -> String", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Strin"]}, "is_static": true}, {"method_description": "Returns a dictionary that splits an identifier into its component pieces.", "method_name": "components", "params": [{"param_type": "String", "param_description": "", "param_name": ["fromIdentifier", "string"]}], "class_name": "Locale", "method_declar": "static func components(fromIdentifier string: String) -> [String : String]", "return_value": {"return_description": [], "return_name": [["[String"]], "return_type": ["String"]}, "is_static": true}, {"method_description": "Constructs an identifier from a dictionary of components.", "method_name": "identifier", "params": [{"param_type": "[String", "param_description": "", "param_name": ["fromComponents", "components"]}, {"param_type": "String]", "param_description": "", "param_name": ["[String"]}], "class_name": "Locale", "method_declar": "static func identifier(fromComponents components: [String : String]) -> String", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Strin"]}, "is_static": true}, {"method_description": "Returns a canonical language identifier from the given string.", "method_name": "canonicalLanguageIdentifier", "params": [{"param_type": "String", "param_description": "", "param_name": ["from", "string"]}], "class_name": "Locale", "method_declar": "static func canonicalLanguageIdentifier(from string: String) -> String", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Strin"]}, "is_static": true}, {"method_description": "Returns the locale identifier from a given Windows locale code, or nil if it could not be converted.", "method_name": "identifier", "params": [{"param_type": "Int", "param_description": "", "param_name": ["fromWindowsLocaleCode", "code"]}], "class_name": "Locale", "method_declar": "static func identifier(fromWindowsLocaleCode code: Int) -> String?", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Strin"]}, "is_static": true}, {"method_description": "Returns the Windows locale code from a given identifier, or nil if it could not be converted.", "method_name": "windowsLocaleCode", "params": [{"param_type": "String", "param_description": "", "param_name": ["fromIdentifier", "identifier"]}], "class_name": "Locale", "method_declar": "static func windowsLocaleCode(fromIdentifier identifier: String) -> Int?", "return_value": {"return_description": [], "return_name": [""], "return_type": ["In"]}, "is_static": true}, {"method_description": "Returns a localized string for a specified calendar.", "method_name": "localizedString", "params": [{"param_type": "Calendar.Identifier", "param_description": "", "param_name": ["for", "calendarIdentifier"]}], "class_name": "Locale", "method_declar": "func localizedString(for calendarIdentifier: Calendar.Identifier) -> String?", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Strin"]}, "is_static": false}, {"method_description": "Returns a localized string for a specified ICU collation identifier.", "method_name": "localizedString", "params": [{"param_type": "String", "param_description": "", "param_name": ["forCollationIdentifier", "collationIdentifier"]}], "class_name": "Locale", "method_declar": "func localizedString(forCollationIdentifier collationIdentifier: String) -> String?", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Strin"]}, "is_static": false}, {"method_description": "Returns a localized string for a specified ICU collator identifier.", "method_name": "localizedString", "params": [{"param_type": "String", "param_description": "", "param_name": ["forCollatorIdentifier", "collatorIdentifier"]}], "class_name": "Locale", "method_declar": "func localizedString(forCollatorIdentifier collatorIdentifier: String) -> String?", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Strin"]}, "is_static": false}, {"method_description": "Returns a localized string for a specified ISO 4217 currency code.", "method_name": "localizedString", "params": [{"param_type": "String", "param_description": "", "param_name": ["forCurrencyCode", "currencyCode"]}], "class_name": "Locale", "method_declar": "func localizedString(forCurrencyCode currencyCode: String) -> String?", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Strin"]}, "is_static": false}, {"method_description": "Returns a localized string for a specified locale identifier.", "method_name": "localizedString", "params": [{"param_type": "String", "param_description": "", "param_name": ["forIdentifier", "identifier"]}], "class_name": "Locale", "method_declar": "func localizedString(forIdentifier identifier: String) -> String?", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Strin"]}, "is_static": false}, {"method_description": "Returns a localized string for a specified language code.", "method_name": "localizedString", "params": [{"param_type": "String", "param_description": "", "param_name": ["forLanguageCode", "languageCode"]}], "class_name": "Locale", "method_declar": "func localizedString(forLanguageCode languageCode: String) -> String?", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Strin"]}, "is_static": false}, {"method_description": "Returns a localized string for a specified region code.", "method_name": "localizedString", "params": [{"param_type": "String", "param_description": "", "param_name": ["forRegionCode", "regionCode"]}], "class_name": "Locale", "method_declar": "func localizedString(forRegionCode regionCode: String) -> String?", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Strin"]}, "is_static": false}, {"method_description": "Returns a localized string for a specified script code.", "method_name": "localizedString", "params": [{"param_type": "String", "param_description": "", "param_name": ["forScriptCode", "scriptCode"]}], "class_name": "Locale", "method_declar": "func localizedString(forScriptCode scriptCode: String) -> String?", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Strin"]}, "is_static": false}, {"method_description": "Returns a localized string for a specified variant code.", "method_name": "localizedString", "params": [{"param_type": "String", "param_description": "", "param_name": ["forVariantCode", "variantCode"]}], "class_name": "Locale", "method_declar": "func localizedString(forVariantCode variantCode: String) -> String?", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Strin"]}, "is_static": false}, {"method_description": "Returns the character direction for a specified language code.", "method_name": "characterDirection", "params": [{"param_type": "String", "param_description": "", "param_name": ["forLanguage", "isoLangCode"]}], "class_name": "Locale", "method_declar": "static func characterDirection(forLanguage isoLangCode: String) -> Locale.LanguageDirection", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Locale.LanguageDirectio"]}, "is_static": true}, {"method_description": "Returns the line direction for a specified language code.", "method_name": "lineDirection", "params": [{"param_type": "String", "param_description": "", "param_name": ["forLanguage", "isoLangCode"]}], "class_name": "Locale", "method_declar": "static func lineDirection(forLanguage isoLangCode: String) -> Locale.LanguageDirection", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Locale.LanguageDirectio"]}, "is_static": true}, {"method_description": "Returns a Boolean value indicating whether two values are not equal.", "method_name": "!=", "params": [{"param_type": "Locale", "param_description": "A value to compare.", "param_name": ["lhs"]}, {"param_type": "Locale", "param_description": "Another value to compare.", "param_name": ["rhs"]}], "class_name": "Locale", "method_declar": "static func != (lhs: Locale, rhs: Locale) -> Bool", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Boo"]}, "is_static": true}, {"method_description": "Returns a Boolean indicating whether two locales are identical.", "method_name": "==", "params": [{"param_type": "Locale", "param_description": "", "param_name": ["lhs"]}, {"param_type": "Locale", "param_description": "", "param_name": ["rhs"]}], "class_name": "Locale", "method_declar": "static func == (lhs: Locale, rhs: Locale) -> Bool", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Boo"]}, "is_static": true}, {"method_description": "", "method_name": "init", "params": [{"param_type": "Decoder", "param_description": "", "param_name": ["from", "decoder"]}], "class_name": "Locale", "method_declar": "init(from decoder: Decoder) throws", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "", "method_name": "encode", "params": [{"param_type": "Encoder", "param_description": "", "param_name": ["to", "encoder"]}], "class_name": "Locale", "method_declar": "func encode(to encoder: Encoder) throws", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": [], "class_name": "Locale", "typealias": ["typealias Locale.LanguageDirection = NSLocale.LanguageDirection", "typealias Locale.ReferenceType = NSLocale"], "Vars": [{"var_description": "A locale which tracks the user\u2019s current preferences.", "var_type": "Locale", "is_static": false, "var_name": "autoupdatingCurrent"}, {"var_description": "A locale representing the user's region settings at the time the property is read.", "var_type": "Locale", "is_static": false, "var_name": "current"}, {"var_description": "A list of available identifiers.", "var_type": "[String]", "is_static": false, "var_name": "availableIdentifiers"}, {"var_description": "A list of available region codes.", "var_type": "[String]", "is_static": false, "var_name": "isoRegionCodes"}, {"var_description": "A list of available language codes.", "var_type": "[String]", "is_static": false, "var_name": "isoLanguageCodes"}, {"var_description": "A list of available currency codes.", "var_type": "[String]", "is_static": false, "var_name": "isoCurrencyCodes"}, {"var_description": "A list of common currency codes.", "var_type": "[String]", "is_static": false, "var_name": "commonISOCurrencyCodes"}, {"var_description": "The identifier of the locale.", "var_type": "String", "is_static": false, "var_name": "identifier"}, {"var_description": "The calendar for the locale, or the Gregorian calendar as a fallback.", "var_type": "Calendar", "is_static": false, "var_name": "calendar"}, {"var_description": "The region code of the locale, or nil if it has none.", "var_type": "String", "is_static": false, "var_name": "regionCode"}, {"var_description": "The language code of the locale, or nil if has none.", "var_type": "String", "is_static": false, "var_name": "languageCode"}, {"var_description": "The script code of the locale, or nil if has none.", "var_type": "String", "is_static": false, "var_name": "scriptCode"}, {"var_description": "The variant code for the locale, or nil if it has none.", "var_type": "String", "is_static": false, "var_name": "variantCode"}, {"var_description": "The exemplar character set for the locale, or nil if has none.", "var_type": "CharacterSet", "is_static": false, "var_name": "exemplarCharacterSet"}, {"var_description": "The collation identifier for the locale, or nil if it has none.", "var_type": "String", "is_static": false, "var_name": "collationIdentifier"}, {"var_description": "The collator identifier of the locale.", "var_type": "String", "is_static": false, "var_name": "collatorIdentifier"}, {"var_description": "A Boolean that is true if the locale uses the metric system.", "var_type": "Bool", "is_static": false, "var_name": "usesMetricSystem"}, {"var_description": "The decimal separator of the locale.", "var_type": "String", "is_static": false, "var_name": "decimalSeparator"}, {"var_description": "The grouping separator of the locale.", "var_type": "String", "is_static": false, "var_name": "groupingSeparator"}, {"var_description": "The currency code of the locale.", "var_type": "String", "is_static": false, "var_name": "currencyCode"}, {"var_description": "The currency symbol of the locale.", "var_type": "String", "is_static": false, "var_name": "currencySymbol"}, {"var_description": "The quotation begin delimiter of the locale.", "var_type": "String", "is_static": false, "var_name": "quotationBeginDelimiter"}, {"var_description": "The quotation end delimiter of the locale.", "var_type": "String", "is_static": false, "var_name": "quotationEndDelimiter"}, {"var_description": "The alternate quotation begin delimiter of the locale.", "var_type": "String", "is_static": false, "var_name": "alternateQuotationBeginDelimiter"}, {"var_description": "The alternate quotation end delimiter of the locale.", "var_type": "String", "is_static": false, "var_name": "alternateQuotationEndDelimiter"}, {"var_description": "A list of the user\u2019s preferred languages.", "var_type": "[String]", "is_static": false, "var_name": "preferredLanguages"}, {"var_description": "A textual description of the locale.", "var_type": "String", "is_static": false, "var_name": "description"}, {"var_description": "A textual description of the locale suitable for debugging.", "var_type": "String", "is_static": false, "var_name": "debugDescription"}, {"var_description": "A mirror that reflects the locale.", "var_type": "Mirror", "is_static": false, "var_name": "customMirror"}, {"var_description": "The computed hash value for the locale.", "var_type": "Int", "is_static": false, "var_name": "hashValue"}], "class_type": "struct", "interface_list": ["CustomDebugStringConvertible", "CustomReflectable", "CustomStringConvertible", "Equatable", "Hashable", "ReferenceConvertible"], "package_name": "foundation", "subclass_list": []}