{"package_name": "foundation", "subclass_list": [], "class_description": "These constants are passed to addObserver(_:forKeyPath:options:context:) and determine the values that are returned as part of the change dictionary passed to an observeValue(forKeyPath:of:change:context:). You can pass 0 if you require no change dictionary values.\n", "class_type": "struct", "typealias": [], "interface_list": ["OptionSet"], "class_inherit_list": [], "Methods": [{"params": [{"param_name": ["rawValue"], "param_type": "UInt", "param_description": ""}], "class_name": "NSKeyValueObservingOptions", "is_static": false, "return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_name": "init", "method_description": "", "method_declar": "init(rawValue: UInt)"}], "class_name": "NSKeyValueObservingOptions", "Vars": [{"var_description": "Indicates that the change dictionary should provide the new attribute value, if applicable.", "var_type": "NSKeyValueObservingOptions", "is_static": false, "var_name": "new"}, {"var_description": "Indicates that the change dictionary should contain the old attribute value, if applicable.", "var_type": "NSKeyValueObservingOptions", "is_static": false, "var_name": "old"}, {"var_description": "If specified, a notification should be sent to the observer immediately, before the observer registration method even returns. ", "var_type": "NSKeyValueObservingOptions", "is_static": false, "var_name": "initial"}, {"var_description": "Whether separate notifications should be sent to the observer before and after each change, instead of a single notification after the change. ", "var_type": "NSKeyValueObservingOptions", "is_static": false, "var_name": "prior"}]}