{"class_description": "Use NSOrthography objects to describe the linguistic content of a piece of text, including which scripts the text contains, a dominant language (and possibly other languages) for each script, and a dominant script and language for the text as a whole.\nScripts are uniformly described by four-letter ISO 15924 script codes, such as \"Latn\", \"Grek\", and \"Cyrl\". The supertags \"Jpan\" and \"Kore\" are typically used for Japanese and Korean text, and \"Hans\" and \"Hant\" are typically used for Chinese text. The tag \"Zyyy\" is used if a specific script cannot be identified. See Internationalization and Localization Guide for more information.\nLanguages are uniformly described by BCP-47 tags (preferably in canonical form). The tag \"und\" is used if a specific language cannot be determined.\nYou typically work with orthography objects returned from methods and properties for classes like NSLinguisticTagger and NSSpellChecker.\nSubclasses must override the dominantScript and languageMap properties. These properties are set using init(dominantScript:languageMap:).\n", "Methods": [{"method_description": "Creates and returns an orthography object with the default language map for the specified language.", "method_name": "defaultOrthography", "params": [{"param_type": "String", "param_description": "A BCP-47 tag identifying the language.", "param_name": ["forLanguage", "language"]}], "class_name": "NSOrthography", "method_declar": "class func defaultOrthography(forLanguage language: String) -> Self", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Sel"]}, "is_static": false}, {"method_description": "Creates an orthography object with the specified dominant script and language map.", "method_name": "init", "params": [{"param_type": "String", "param_description": "The dominant script.", "param_name": ["dominantScript", "script"]}, {"param_type": "[String", "param_description": "A dictionary mapping ISO 15924 script codes to arrays of BCP-47 language tags.", "param_name": ["languageMap", "map"]}, {"param_type": "[String]]", "param_description": "", "param_name": ["[String"]}], "class_name": "NSOrthography", "method_declar": "init(dominantScript script: String, languageMap map: [String : [String]])", "return_value": {"return_description": ["An orthography object initialized with the specified script and language map."], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Returns the dominant language for the specified script.", "method_name": "dominantLanguage", "params": [{"param_type": "String", "param_description": "The specified script.", "param_name": ["forScript", "script"]}], "class_name": "NSOrthography", "method_declar": "func dominantLanguage(forScript script: String) -> String?", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Strin"]}, "is_static": false}, {"method_description": "Returns the list of languages for the specified script.", "method_name": "languages", "params": [{"param_type": "String", "param_description": "The specified script.", "param_name": ["forScript", "script"]}], "class_name": "NSOrthography", "method_declar": "func languages(forScript script: String) -> [String]?", "return_value": {"return_description": [], "return_name": [""], "return_type": ["[String"]}, "is_static": false}, {"method_description": "", "method_name": "init", "params": [{"param_type": "NSCoder", "param_description": "", "param_name": ["coder", "aDecoder"]}], "class_name": "NSOrthography", "method_declar": "init?(coder aDecoder: NSCoder)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": ["NSObject"], "class_name": "NSOrthography", "typealias": [], "Vars": [{"var_description": "A dictionary that maps script tags to arrays of language tags.", "var_type": "[String", "is_static": false, "var_name": "languageMap"}, {"var_description": "The first language in the list of languages for the dominant script.", "var_type": "String", "is_static": false, "var_name": "dominantLanguage"}, {"var_description": "The dominant script for the text.", "var_type": "String", "is_static": false, "var_name": "dominantScript"}, {"var_description": "The scripts appearing as keys in the language map.", "var_type": "[String]", "is_static": false, "var_name": "allScripts"}, {"var_description": "The languages appearing in values of the language map.", "var_type": "[String]", "is_static": false, "var_name": "allLanguages"}], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying", "NSSecureCoding"], "package_name": "foundation", "subclass_list": []}