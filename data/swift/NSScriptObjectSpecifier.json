{"class_description": "NSScriptObjectSpecifier is the abstract superclass for classes that instantiate objects called \u201cobject specifiers.\u201d An object specifier represents an AppleScript reference form, which is a natural-language expression such as words 10 through 20 or front document or words whose color is red.\nThe scripting system maps these words or phrases to attributes and relationships of scriptable objects. A reference form rarely occurs in isolation; usually a script statement consists of a series of reference forms preceded by a command and typically connected to each other by of, such as:\nThe expression words whose color is blue of paragraph 10 of front document specifies a location in the application's AppleScript object model\u2014the objects the application makes available to scripters. The classes of objects in the object model often closely match the classes of actual objects in the application, but they are not required to. An object specifier locates objects in the running application that correspond to the specified object model objects.\nYour application typically creates object specifiers when it implements the objectSpecifier method for its scriptable classes. That method is defined by the NSScriptObjectSpecifiers protocol.\nIt is unlikely that you would ever need to create your own subclass of NSScriptObjectSpecifier; the set of valid AppleScript reference forms is determined by Apple Computer and object specifier classes are already implemented for this set. If for some reason you do need to create a subclass, you must override the primitive method indicesOfObjectsByEvaluating(withContainer:count:) to return indices to the elements within the container whose values are matched with the child specifier\u2019s key. In addition, you probably need to declare any special instance variables and implement an initializer that invokes super\u2019s designated initializer, init(containerClassDescription:containerSpecifier:key:), and initializes these variables.\nFor a comprehensive treatment of object specifiers, including sample code, see Object Specifiers in Cocoa Scripting Guide.\n", "Methods": [{"method_description": "Returns an NSScriptObjectSpecifier object initialized with the given attributes.", "method_name": "init", "params": [{"param_type": "NSScriptClassDescription", "param_description": "", "param_name": ["containerClassDescription", "classDesc"]}, {"param_type": "NSScriptObjectSpecifier", "param_description": "", "param_name": ["containerSpecifier", "container"]}, {"param_type": "String", "param_description": "", "param_name": ["key", "property"]}], "class_name": "NSScriptObjectSpecifier", "method_declar": "init(containerClassDescription classDesc: NSScriptClassDescription, containerSpecifier container: NSScriptObjectSpecifier?, key property: String)", "return_value": {"return_description": ["An NSScriptObjectSpecifier object initialized with container specifier specifier, key key, and the class description of the object specifier classDescription, derived from the value of the specifier\u2019s key. "], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": ["NSObject"], "class_name": "NSScriptObjectSpecifier", "typealias": [], "Vars": [], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCoding"], "package_name": "foundation", "subclass_list": []}