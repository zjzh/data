{"Methods": [{"return_value": {"return_name": [""], "return_type": ["PartialKeyPath<Root>"], "return_description": ["A key path from the root of this key path and the value type of path, if path can be appended. If path can\u2019t be appended, returns nil."]}, "class_name": "WritableKeyPath", "params": [{"param_description": "The key path to append.", "param_type": "AnyKeyPath", "param_name": ["path"]}], "method_description": "Returns a new key path created by appending the given key path to this one.", "is_static": false, "method_name": "appending", "method_declar": "func appending<Root>(path: AnyKeyPath) -> PartialKeyPath<Root>?"}, {"return_value": {"return_name": ["", ""], "return_type": ["ReferenceWritableKeyPath<Root", "AppendedValue>"], "return_description": ["A key path from the root of this key path to the value type of path, if path can be appended. If path can\u2019t be appended, returns nil."]}, "class_name": "WritableKeyPath", "params": [{"param_description": "The reference writeable key path to append.", "param_type": "ReferenceWritableKeyPath<AppendedRoot, AppendedValue>", "param_name": ["path"]}], "method_description": "Returns a new key path created by appending the given key path to this one.", "is_static": false, "method_name": "appending", "method_declar": "func appending<Root, AppendedRoot, AppendedValue>(path: ReferenceWritableKeyPath<AppendedRoot, AppendedValue>) -> ReferenceWritableKeyPath<Root, AppendedValue>?"}, {"return_value": {"return_name": ["", ""], "return_type": ["ReferenceWritableKeyPath<Root", "AppendedValue>"], "return_description": ["A key path from the root of this key path to the value type of path."]}, "class_name": "WritableKeyPath", "params": [{"param_description": "The key path to append.", "param_type": "ReferenceWritableKeyPath<Value, AppendedValue>", "param_name": ["path"]}], "method_description": "Returns a new key path created by appending the given key path to this one.", "is_static": false, "method_name": "appending", "method_declar": "func appending<Root, Value, AppendedValue>(path: ReferenceWritableKeyPath<Value, AppendedValue>) -> ReferenceWritableKeyPath<Root, AppendedValue>"}, {"return_value": {"return_name": [""], "return_type": ["AnyKeyPath"], "return_description": ["A key path from the root of this key path and the value type of path, if path can be appended. If path can\u2019t be appended, returns nil."]}, "class_name": "WritableKeyPath", "params": [{"param_description": "The key path to append.", "param_type": "AnyKeyPath", "param_name": ["path"]}], "method_description": "Returns a new key path created by appending the given key path to this one.", "is_static": false, "method_name": "appending", "method_declar": "func appending(path: AnyKeyPath) -> AnyKeyPath?"}, {"return_value": {"return_name": ["", ""], "return_type": ["ReferenceWritableKeyPath<Root", "AppendedValue>"], "return_description": ["A key path from the root of this key path to the value type of path."]}, "class_name": "WritableKeyPath", "params": [{"param_description": "The key path to append.", "param_type": "WritableKeyPath<Value, AppendedValue>", "param_name": ["path"]}], "method_description": "Returns a new key path created by appending the given key path to this one.", "is_static": false, "method_name": "appending", "method_declar": "func appending<Root, Value, AppendedValue>(path: WritableKeyPath<Value, AppendedValue>) -> ReferenceWritableKeyPath<Root, AppendedValue>"}, {"return_value": {"return_name": ["", ""], "return_type": ["KeyPath<Root", "AppendedValue>"], "return_description": ["A key path from the root of this key path to the value type of path, if path can be appended. If path can\u2019t be appended, returns nil."]}, "class_name": "WritableKeyPath", "params": [{"param_description": "The key path to append.", "param_type": "KeyPath<AppendedRoot, AppendedValue>", "param_name": ["path"]}], "method_description": "Returns a new key path created by appending the given key path to this one.", "is_static": false, "method_name": "appending", "method_declar": "func appending<Root, AppendedRoot, AppendedValue>(path: KeyPath<AppendedRoot, AppendedValue>) -> KeyPath<Root, AppendedValue>?"}, {"return_value": {"return_name": ["", ""], "return_type": ["ReferenceWritableKeyPath<Root", "AppendedValue>"], "return_description": ["A key path from the root of this key path to the value type of path."]}, "class_name": "WritableKeyPath", "params": [{"param_description": "The key path to append.", "param_type": "ReferenceWritableKeyPath<Value, AppendedValue>", "param_name": ["path"]}], "method_description": "Returns a new key path created by appending the given key path to this one.", "is_static": false, "method_name": "appending", "method_declar": "func appending<Root, Value, AppendedValue>(path: ReferenceWritableKeyPath<Value, AppendedValue>) -> ReferenceWritableKeyPath<Root, AppendedValue>"}, {"return_value": {"return_name": ["", ""], "return_type": ["WritableKeyPath<Root", "AppendedValue>"], "return_description": ["A key path from the root of this key path to the value type of path."]}, "class_name": "WritableKeyPath", "params": [{"param_description": "The key path to append.", "param_type": "WritableKeyPath<Value, AppendedValue>", "param_name": ["path"]}], "method_description": "Returns a new key path created by appending the given key path to this one.", "is_static": false, "method_name": "appending", "method_declar": "func appending<Root, Value, AppendedValue>(path: WritableKeyPath<Value, AppendedValue>) -> WritableKeyPath<Root, AppendedValue>"}, {"return_value": {"return_name": ["", ""], "return_type": ["KeyPath<Root", "AppendedValue>"], "return_description": ["A key path from the root of this key path to the value type of path."]}, "class_name": "WritableKeyPath", "params": [{"param_description": "The key path to append.", "param_type": "KeyPath<Value, AppendedValue>", "param_name": ["path"]}], "method_description": "Returns a new key path created by appending the given key path to this one.", "is_static": false, "method_name": "appending", "method_declar": "func appending<Root, Value, AppendedValue>(path: KeyPath<Value, AppendedValue>) -> KeyPath<Root, AppendedValue>"}, {"return_value": {"return_name": [""], "return_type": ["Bool"], "return_description": []}, "class_name": "WritableKeyPath", "params": [{"param_description": "A value to compare.", "param_type": "WritableKeyPath<Root, Value>", "param_name": ["lhs"]}, {"param_description": "Another value to compare.", "param_type": "WritableKeyPath<Root, Value>", "param_name": ["rhs"]}], "method_description": "Returns a Boolean value indicating whether two values are not equal.", "is_static": true, "method_name": "!=", "method_declar": "static func != (lhs: WritableKeyPath<Root, Value>, rhs: WritableKeyPath<Root, Value>) -> Bool"}], "Vars": [], "class_name": "WritableKeyPath", "interface_list": [], "class_description": "", "class_inherit_list": ["KeyPath"], "package_name": "swift", "subclass_list": [], "class_type": "class", "typealias": []}