{"subclass_list": [], "typealias": [], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_name": [], "return_description": ["An initialized NSURLDownload object for request."], "return_type": []}, "method_description": "Returns an initialized URL download for a URL request and begins to download the data for the request.", "is_static": false, "method_name": "init", "class_name": "NSURLDownload", "method_declar": "init(request: URLRequest, delegate: NSURLDownloadDelegate?)", "params": [{"param_type": "URLRequest", "param_description": "The URL request to download. The request object is deep-copied as part of the initialization process. Changes made to request after this method returns do not affect the request that is used for the loading process.", "param_name": ["request"]}, {"param_type": "NSURLDownloadDelegate", "param_description": "The delegate for the download. This object will receive delegate messages as the download progresses. Delegate messages will be sent on the thread which calls this method. For the download to work correctly the calling thread\u2019s run loop must be operating in the default run loop mode.The NSURLDownload class maintains a strong reference to this delegate object.", "param_name": ["delegate"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sets the destination path of the downloaded file.", "is_static": false, "method_name": "setDestination", "class_name": "NSURLDownload", "method_declar": "func setDestination(_ path: String, allowOverwrite: Bool)", "params": [{"param_type": "String", "param_description": "The path for the downloaded file.", "param_name": ["path"]}, {"param_type": "Bool", "param_description": "true if an existing file at path can be replaced, false otherwise.", "param_name": ["allowOverwrite"]}]}, {"return_value": {"return_name": [""], "return_description": ["true if the URL download object can resume a download that was decoded with the specified MIME type, false otherwise."], "return_type": ["Boo"]}, "method_description": "Returns whether a URL download object can resume a download that was decoded with the specified MIME type.", "is_static": false, "method_name": "canResumeDownloadDecoded", "class_name": "NSURLDownload", "method_declar": "class func canResumeDownloadDecoded(withEncodingMIMEType MIMEType: String) -> Bool", "params": [{"param_type": "String", "param_description": "The MIME type the caller wants to know about.", "param_name": ["withEncodingMIMEType", "MIMEType"]}]}, {"return_value": {"return_name": [], "return_description": ["An initialized NSURLDownload object."], "return_type": []}, "method_description": "Returns an initialized NSURLDownload object that will resume downloading the specified data to the specified file and begins the download.", "is_static": false, "method_name": "init", "class_name": "NSURLDownload", "method_declar": "init(resumeData: Data, delegate: NSURLDownloadDelegate?, path: String)", "params": [{"param_type": "Data", "param_description": "Specifies the data to resume downloading.", "param_name": ["resumeData"]}, {"param_type": "NSURLDownloadDelegate", "param_description": "The delegate for the download. This object will receive delegate messages as the download progresses. Delegate messages will be sent on the thread which calls this method. For the download to work correctly the calling thread\u2019s run loop must be operating in the default run loop mode.The NSURLDownload class maintains a strong reference to this delegate object.", "param_name": ["delegate"]}, {"param_type": "String", "param_description": "The location for the downloaded data.", "param_name": ["path"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Cancels the receiver\u2019s download and deletes the downloaded file.", "is_static": false, "method_name": "cancel", "class_name": "NSURLDownload", "method_declar": "func cancel()", "params": []}], "class_type": "class", "class_name": "NSURLDownload", "Vars": [{"var_name": "resumeData", "var_type": "Data", "var_description": "Returns the resume data for a download that is not yet complete.", "is_static": false}, {"var_name": "deletesFileUponFailure", "var_type": "Bool", "var_description": "Returns whether the receiver deletes partially downloaded files when a download stops prematurely.", "is_static": false}, {"var_name": "request", "var_type": "URLRequest", "var_description": "Returns the request that initiated the receiver\u2019s download.", "is_static": false}, {"var_name": "deletesFileUponFailure", "var_type": "Bool", "var_description": "Returns whether the receiver deletes partially downloaded files when a download stops prematurely.", "is_static": false}], "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_description": "The interface for NSURLDownload provides methods to initialize a download, set the destination path and cancel loading the request.\nThe delegate object assigned to each instance of this class should implement the methods defined by the NSURLDownloadDelegate protocol. These methods provide the delegate with the current status of in-progress asynchronous downloads and allow the delegate to customize the URL loading process. These delegate methods are called on the thread that started the asynchronous load operation for the associated NSURLDownload object.\n", "package_name": "foundation"}