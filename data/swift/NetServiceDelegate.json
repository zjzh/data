{"subclass_list": [], "typealias": [], "class_inherit_list": ["NSObjectProtocol"], "Methods": [{"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Notifies the delegate that the network is ready to publish the service.", "is_static": false, "method_name": "netServiceWillPublish", "class_name": "NetServiceDelegate", "method_declar": "optional func netServiceWillPublish(_ sender: NetService)", "params": [{"param_type": "NetService", "param_description": "The service that is ready to publish.", "param_name": ["sender"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Notifies the delegate that a service could not be published.", "is_static": false, "method_name": "netService", "class_name": "NetServiceDelegate", "method_declar": "optional func netService(_ sender: NetService, didNotPublish errorDict: [String : NSNumber])", "params": [{"param_type": "NetService", "param_description": "The service that could not be published.", "param_name": ["sender"]}, {"param_type": "[String", "param_description": "A dictionary containing information about the problem. The dictionary contains the keys NSNetServicesErrorCode and NSNetServicesErrorDomain. ", "param_name": ["didNotPublish", "errorDict"]}, {"param_type": "NSNumber]", "param_description": "", "param_name": ["[String"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Notifies the delegate that a service was successfully published.", "is_static": false, "method_name": "netServiceDidPublish", "class_name": "NetServiceDelegate", "method_declar": "optional func netServiceDidPublish(_ sender: NetService)", "params": [{"param_type": "NetService", "param_description": "The service that was published.", "param_name": ["sender"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Notifies the delegate that the network is ready to resolve the service.", "is_static": false, "method_name": "netServiceWillResolve", "class_name": "NetServiceDelegate", "method_declar": "optional func netServiceWillResolve(_ sender: NetService)", "params": [{"param_type": "NetService", "param_description": "The service that the network is ready to resolve.", "param_name": ["sender"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Informs the delegate that an error occurred during resolution of a given service.", "is_static": false, "method_name": "netService", "class_name": "NetServiceDelegate", "method_declar": "optional func netService(_ sender: NetService, didNotResolve errorDict: [String : NSNumber])", "params": [{"param_type": "NetService", "param_description": "The service that did not resolve.", "param_name": ["sender"]}, {"param_type": "[String", "param_description": "A dictionary containing information about the problem. The dictionary contains the keys errorCode and errorDomain. ", "param_name": ["didNotResolve", "errorDict"]}, {"param_type": "NSNumber]", "param_description": "", "param_name": ["[String"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Informs the delegate that the address for a given service was resolved.", "is_static": false, "method_name": "netServiceDidResolveAddress", "class_name": "NetServiceDelegate", "method_declar": "optional func netServiceDidResolveAddress(_ sender: NetService)", "params": [{"param_type": "NetService", "param_description": "The service that was resolved.", "param_name": ["sender"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Notifies the delegate that the TXT record for a given service has been updated.", "is_static": false, "method_name": "netService", "class_name": "NetServiceDelegate", "method_declar": "optional func netService(_ sender: NetService, didUpdateTXTRecord data: Data)", "params": [{"param_type": "NetService", "param_description": "The service whose TXT record was updated.", "param_name": ["sender"]}, {"param_type": "Data", "param_description": "The new TXT record.", "param_name": ["didUpdateTXTRecord", "data"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Informs the delegate that a publish() or resolve(withTimeout:) request was stopped.", "is_static": false, "method_name": "netServiceDidStop", "class_name": "NetServiceDelegate", "method_declar": "optional func netServiceDidStop(_ sender: NetService)", "params": [{"param_type": "NetService", "param_description": "The service that stopped.", "param_name": ["sender"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Called when a client connects to a service managed by Bonjour.", "is_static": false, "method_name": "netService", "class_name": "NetServiceDelegate", "method_declar": "optional func netService(_ sender: NetService, didAcceptConnectionWith inputStream: InputStream, outputStream: OutputStream)", "params": [{"param_type": "NetService", "param_description": "The net service object that the client connected to.", "param_name": ["sender"]}, {"param_type": "InputStream", "param_description": "A stream object for receiving data from the client.", "param_name": ["didAcceptConnectionWith", "inputStream"]}, {"param_type": "OutputStream", "param_description": "A stream object for sending data to the client.", "param_name": ["outputStream"]}]}], "class_type": "protocol", "class_name": "NetServiceDelegate", "Vars": [], "interface_list": [], "class_description": "The NetServiceDelegate protocol defines the optional methods implemented by delegates of NetService objects.\n", "package_name": "foundation"}