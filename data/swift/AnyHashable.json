{"Methods": [{"return_value": {"return_name": [], "return_type": [], "return_description": []}, "class_name": "AnyHashable", "params": [{"param_description": "The hasher to use when combining the components of this instance.", "param_type": "inout Hasher", "param_name": ["into", "hasher"]}], "method_description": "Hashes the essential components of this value by feeding them into the given hasher.", "is_static": false, "method_name": "hash", "method_declar": "func hash(into hasher: inout Hasher)"}, {"return_value": {"return_name": [""], "return_type": ["Bool"], "return_description": []}, "class_name": "AnyHashable", "params": [{"param_description": "A value to compare.", "param_type": "AnyHashable", "param_name": ["lhs"]}, {"param_description": "Another value to compare.", "param_type": "AnyHashable", "param_name": ["rhs"]}], "method_description": "Returns a Boolean value indicating whether two values are not equal.", "is_static": true, "method_name": "!=", "method_declar": "static func != (lhs: AnyHashable, rhs: AnyHashable) -> Bool"}, {"return_value": {"return_name": [""], "return_type": ["Bool"], "return_description": []}, "class_name": "AnyHashable", "params": [{"param_description": "A type-erased hashable value.", "param_type": "AnyHashable", "param_name": ["lhs"]}, {"param_description": "Another type-erased hashable value.", "param_type": "AnyHashable", "param_name": ["rhs"]}], "method_description": "Returns a Boolean value indicating whether two type-erased hashable instances wrap the same type and value.", "is_static": true, "method_name": "==", "method_declar": "static func == (lhs: AnyHashable, rhs: AnyHashable) -> Bool"}], "Vars": [{"var_description": "The value wrapped by this instance.", "is_static": false, "var_name": "base", "var_type": "Any"}, {"var_description": "", "is_static": false, "var_name": "customMirror", "var_type": "Mirror"}, {"var_description": "", "is_static": false, "var_name": "debugDescription", "var_type": "String"}, {"var_description": "", "is_static": false, "var_name": "description", "var_type": "String"}, {"var_description": "The hash value.", "is_static": false, "var_name": "hashValue", "var_type": "Int"}], "class_name": "AnyHashable", "interface_list": ["CustomDebugStringConvertible", "CustomReflectable", "CustomStringConvertible", "Equatable", "Hashable"], "class_description": "The AnyHashable type forwards equality comparisons and hashing operations to an underlying hashable value, hiding its specific underlying type.\nYou can store mixed-type keys in dictionaries and other collections that require Hashable conformance by wrapping mixed-type keys in AnyHashable instances:\n", "class_inherit_list": [], "package_name": "swift", "subclass_list": [], "class_type": "struct", "typealias": []}