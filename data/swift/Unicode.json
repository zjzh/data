{"Methods": [{"return_value": {"return_name": [""], "return_type": ["Bool"], "return_description": ["true if the translation detected encoding errors in input; otherwise, false."]}, "class_name": "Unicode", "params": [{"param_description": "An iterator of code units to be translated, encoded as inputEncoding. If stopOnError is false, the entire iterator will be exhausted. Otherwise, iteration will stop if an encoding error is detected.", "param_type": "IteratorProtocol", "param_name": ["input"]}, {"param_description": "The Unicode encoding of input.", "param_type": "IteratorProtocolEncoding.Type", "param_name": ["from", "inputEncoding"]}, {"param_description": "The destination Unicode encoding.", "param_type": "UnicodeEncoding.Type", "param_name": ["to", "outputEncoding"]}, {"param_description": "Pass true to stop translation when an encoding error is detected in input. Otherwise, a Unicode replacement character (\"\\u{FFFD}\") is inserted for each detected error.", "param_type": "Bool", "param_name": ["stoppingOnError", "stopOnError"]}, {"param_description": "A closure that processes one outputEncoding code unit at a time.", "param_type": "(OutputEncoding.CodeUnit) -> Void", "param_name": ["into", "processCodeUnit"]}], "method_description": "Translates the given input from one Unicode encoding to another by calling the given closure.", "is_static": false, "method_name": "transcode", "method_declar": "func transcode<Input, InputEncoding, OutputEncoding>(_ input: Input, from inputEncoding: InputEncoding.Type, to outputEncoding: OutputEncoding.Type, stoppingOnError stopOnError: Bool, into processCodeUnit: (OutputEncoding.CodeUnit) -> Void) -> Bool where Input : IteratorProtocol, InputEncoding : _UnicodeEncoding, OutputEncoding : _UnicodeEncoding, Input.Element == InputEncoding.CodeUnit"}], "Vars": [], "class_name": "Unicode", "interface_list": [], "class_description": "", "class_inherit_list": [], "package_name": "swift", "subclass_list": [], "class_type": "enum", "typealias": []}