{"package_name": "foundation", "subclass_list": [], "class_description": "Concrete subclasses of NSClassDescription provide the available attributes of objects of a particular class and the relationships between that class and other classes. Defining these relationships between classes allows for more intelligent and flexible manipulation of objects with key-value coding.\nIt is important to note that there are no class descriptions by default. To use NSClassDescription objects in your code you have to implement them for your model classes. For all concrete subclasses, you must provide implementations for all instance methods of NSClassDescription. (NSClassDescription provides only the implementation for the class methods that maintain the cache of registered class descriptions.) Once created, you must register a class description with the NSClassDescription method register(_:for:).\nYou can use the NSString objects in the arrays returned by methods such as attributeKeys and toManyRelationshipKeys  to access\u2014using key-value coding\u2014the properties of an instance of the class to which a class description object corresponds. For more about attributes and relationships, see Cocoa Fundamentals Guide. For more about key-value coding, see Key-Value Coding Programming Guide.\nNSScriptClassDescription, which is used to map the relationships between scriptable classes, is the only concrete subclass of NSClassDescription provided as part of the Cocoa framework.\n", "class_type": "class", "typealias": [], "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["NSObject"], "Methods": [{"params": [{"param_name": ["for", "aClass"], "param_type": "AnyClass", "param_description": "The class for which to return a class description. See note below for important details."}], "class_name": "NSClassDescription", "is_static": false, "return_value": {"return_name": [], "return_description": ["The class description for aClass, or nil if a class description cannot be found."], "return_type": []}, "method_name": "init", "method_description": "Returns the class description for a given class.", "method_declar": "init?(for aClass: AnyClass)"}, {"params": [], "class_name": "NSClassDescription", "is_static": false, "return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_name": "invalidateClassDescriptionCache", "method_description": "Removes all NSClassDescription objects from the cache.", "method_declar": "class func invalidateClassDescriptionCache()"}, {"params": [{"param_name": ["description"], "param_type": "NSClassDescription", "param_description": "The class description to register."}, {"param_name": ["for", "aClass"], "param_type": "AnyClass", "param_description": "The class for which to register description."}], "class_name": "NSClassDescription", "is_static": false, "return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_name": "register", "method_description": "Registers an NSClassDescription object for a given class in the NSClassDescription cache.", "method_declar": "class func register(_ description: NSClassDescription, for aClass: AnyClass)"}, {"params": [{"param_name": ["forRelationshipKey", "relationshipKey"], "param_type": "String", "param_description": ""}], "class_name": "NSClassDescription", "is_static": false, "return_value": {"return_name": [""], "return_description": ["The name of the inverse relationship from the relationship specified by relationshipKey."], "return_type": ["Strin"]}, "method_name": "inverse", "method_description": "Overridden by subclasses to return the name of the inverse relationship from a relationship specified by a given key. ", "method_declar": "func inverse(forRelationshipKey relationshipKey: String) -> String?"}, {"params": [{"param_name": ["for", "aClass"], "param_type": "AnyClass", "param_description": "The class for which to return a class description. See note below for important details."}], "class_name": "NSClassDescription", "is_static": false, "return_value": {"return_name": [], "return_description": ["The class description for aClass, or nil if a class description cannot be found."], "return_type": []}, "method_name": "init", "method_description": "Returns the class description for a given class.", "method_declar": "init?(for aClass: AnyClass)"}], "class_name": "NSClassDescription", "Vars": [{"var_description": "Overridden by subclasses to return the names of attributes of instances of the described class.", "var_type": "[String]", "is_static": false, "var_name": "attributeKeys"}, {"var_description": "Overridden by subclasses to return the keys for the to-many relationship properties of instances of the described class.", "var_type": "[String]", "is_static": false, "var_name": "toManyRelationshipKeys"}, {"var_description": "Overridden by subclasses to return the keys for the to-one relationship properties of instances of the described class.", "var_type": "[String]", "is_static": false, "var_name": "toOneRelationshipKeys"}, {"var_description": "Posted by init(for:) when a class description cannot be found for a class.", "var_type": "NSNotification.Name", "is_static": false, "var_name": "NSClassDescriptionNeededForClass"}]}