{"package_name": "foundation", "subclass_list": [], "class_description": "Each instance of an Unit subclass consists of a symbol, which can be used to create string representations of NSMeasurement objects with the MeasurementFormatter class.\nThe Dimension subclass is an abstract class that represents a dimensional unit, which can be converted into different units of the same type. The Foundation framework provides several concrete Dimension subclasses to represent the most common physical quantities, including mass, length, duration, and speed.\nNSUnit is intended for subclassing. For dimensional units, you should use one of the Apple provided Dimension subclasses listed in Table 1, or create a custom subclass of Dimension. You can create a direct subclass of NSUnit to represent a custom dimensionless unit, such as a count, score, or ratio.\n", "class_type": "class", "typealias": [], "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying", "NSSecureCoding"], "class_inherit_list": ["NSObject"], "Methods": [{"params": [{"param_name": ["symbol"], "param_type": "String", "param_description": "The symbol used to represent the unit."}], "class_name": "Unit", "is_static": false, "return_value": {"return_name": [], "return_description": ["A new unit with the specified symbol."], "return_type": []}, "method_name": "init", "method_description": "Initializes a new unit with the specified symbol.", "method_declar": "init(symbol: String)"}], "class_name": "Unit", "Vars": [{"var_description": "The symbolic representation of the unit.", "var_type": "String", "is_static": false, "var_name": "symbol"}]}