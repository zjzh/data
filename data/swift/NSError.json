{"package_name": "foundation", "subclass_list": [], "class_description": "Objective-C methods can signal an error condition by returning an NSError object by reference, which provides additional information about the kind of error and any underlying cause, if one can be determined. An NSError object may also provide localized error descriptions suitable for display to the user in its user info dictionary. See Error Handling Programming Guide for more information.\nMethods in Foundation and other Cocoa frameworks most often produce errors in the Cocoa error domain (NSCocoaErrorDomain); error codes for the Cocoa Error Domain are documented in the Foundation Constants. There are also predefined domains corresponding to Mach (NSMachErrorDomain), POSIX (NSPOSIXErrorDomain), and Carbon (NSOSStatusErrorDomain) errors.\nNSError is \u201ctoll-free bridged\u201d with its Core Foundation counterpart, CFError. See Toll-Free Bridging for more information.\nApplications may choose to create subclasses of NSError, for example, to provide better localized error strings by overriding localizedDescription.\n", "class_type": "class", "typealias": ["typealias ErrorPointer = NSErrorPointer", "typealias NSErrorPointer = AutoreleasingUnsafeMutablePointer<NSError?>?", "typealias NSErrorDomain = NSString"], "interface_list": ["CVarArg", "Equatable", "Error", "Hashable", "NSCopying", "NSSecureCoding"], "class_inherit_list": ["NSObject"], "Methods": [{"params": [{"param_name": ["domain"], "param_type": "String", "param_description": "The error domain\u2014this can be one of the predefined NSError domains, or an arbitrary string describing a custom domain. domain must not be nil. See Error Domains for a list of predefined domains."}, {"param_name": ["code"], "param_type": "Int", "param_description": "The error code for the error."}, {"param_name": ["userInfo", "dict"], "param_type": "[String", "param_description": "The userInfo dictionary for the error. userInfo may be nil."}, {"param_name": ["[String"], "param_type": "Any] = nil", "param_description": ""}], "class_name": "NSError", "is_static": false, "return_value": {"return_name": [], "return_description": ["An NSError object initialized for domain with the specified error code and the dictionary of arbitrary data userInfo. "], "return_type": []}, "method_name": "init", "method_description": "Returns an NSError object initialized for a given domain and code with a given userInfo dictionary. ", "method_declar": "init(domain: String, code: Int, userInfo dict: [String : Any]? = nil)"}, {"params": [{"param_name": ["forDomain", "errorDomain"], "param_type": "String", "param_description": "The error domain of the provider."}, {"param_name": ["provider"], "param_type": "((Error, String) -> Any) = nil", "param_description": "A block to be executed synchronously at the time a corresponding property is accessed.errThe error object that is being accessed.userInfoKeyThe user info key corresponding to the accessed property."}], "class_name": "NSError", "is_static": false, "return_value": {"return_name": [""], "return_description": [], "return_type": ["Any = nil"]}, "method_name": "setUserInfoValueProvider", "method_description": "Specifies a block that is called from the implementations of localizedDescription, localizedFailureReason, localizedRecoverySuggestion, localizedRecoveryOptions, recoveryAttempter, and helpAnchor when the underlying value for any of those properties is not present in the userInfo dictionary of NSError instances with the specified domain.", "method_declar": "class func setUserInfoValueProvider(forDomain errorDomain: String, provider: ((Error, String) -> Any?)? = nil)"}, {"params": [{"param_name": ["forDomain", "errorDomain"], "param_type": "String) -> ((Error, String) -> Any", "param_description": "The error domain of the user info provider."}], "class_name": "NSError", "is_static": false, "return_value": {"return_name": [""], "return_description": ["The user info provider of the error domain, or nil if none is specified."], "return_type": ["Any"]}, "method_name": "userInfoValueProvider", "method_description": "Returns any user info provider specified by the setUserInfoValueProvider(forDomain:provider:) method for a given error domain.", "method_declar": "class func userInfoValueProvider(forDomain errorDomain: String) -> ((Error, String) -> Any?)?"}, {"params": [{"param_name": ["fromError", "error"], "param_type": "Error", "param_description": "An NSError object that describes the error, including error recovery options."}, {"param_name": ["optionIndex", "recoveryOptionIndex"], "param_type": "Int", "param_description": "The index of the user selected recovery option in error\u2019s localized recovery array."}, {"param_name": ["delegate"], "param_type": "Any", "param_description": "An object that is the modal delegate."}, {"param_name": ["didRecoverSelector"], "param_type": "Selector", "param_description": "A selector identifying the method implemented by the modal delegate."}, {"param_name": ["contextInfo"], "param_type": "UnsafeMutableRawPointer", "param_description": "Arbitrary data associated with the attempt at error recovery, to be passed to delegate in didRecoverSelector."}], "class_name": "NSError", "is_static": false, "return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_name": "attemptRecovery", "method_description": "Implemented to attempt a recovery from an error noted in a document-modal sheet.", "method_declar": "func attemptRecovery(fromError error: Error, optionIndex recoveryOptionIndex: Int, delegate: Any?, didRecoverSelector: Selector?, contextInfo: UnsafeMutableRawPointer?)"}, {"params": [{"param_name": ["fromError", "error"], "param_type": "Error", "param_description": "An NSError object that describes the error, including error recovery options."}, {"param_name": ["optionIndex", "recoveryOptionIndex"], "param_type": "Int", "param_description": "The index of the user selected recovery option in error's localized recovery array."}], "class_name": "NSError", "is_static": false, "return_value": {"return_name": [""], "return_description": ["true if the error recovery was completed successfully, false otherwise."], "return_type": ["Boo"]}, "method_name": "attemptRecovery", "method_description": "Implemented to attempt a recovery from an error noted in an application-modal dialog.", "method_declar": "func attemptRecovery(fromError error: Error, optionIndex recoveryOptionIndex: Int) -> Bool"}, {"params": [{"param_name": ["with", "existingItem"], "param_type": "NSFileProviderItem", "param_description": ""}], "class_name": "NSError", "is_static": false, "return_value": {"return_name": [""], "return_description": [], "return_type": ["Sel"]}, "method_name": "fileProviderErrorForCollision", "method_description": "Returns a properly formatted error object with a NSFileProviderItemCollisionError error code.", "method_declar": "class func fileProviderErrorForCollision(with existingItem: NSFileProviderItem) -> Self"}, {"params": [{"param_name": ["withIdentifier", "itemIdentifier"], "param_type": "NSFileProviderItemIdentifier", "param_description": ""}], "class_name": "NSError", "is_static": false, "return_value": {"return_name": [""], "return_description": [], "return_type": ["Sel"]}, "method_name": "fileProviderErrorForNonExistentItem", "method_description": "", "method_declar": "class func fileProviderErrorForNonExistentItem(withIdentifier itemIdentifier: NSFileProviderItemIdentifier) -> Self"}], "class_name": "NSError", "Vars": [{"var_description": "The error code.", "var_type": "Int", "is_static": false, "var_name": "code"}, {"var_description": "A string containing the error domain.", "var_type": "String", "is_static": false, "var_name": "domain"}, {"var_description": "The user info dictionary. ", "var_type": "[String", "is_static": false, "var_name": "userInfo"}, {"var_description": "A string containing the localized description of the error.", "var_type": "String", "is_static": false, "var_name": "localizedDescription"}, {"var_description": "An array containing the localized titles of buttons appropriate for displaying in an alert panel.", "var_type": "[String]", "is_static": false, "var_name": "localizedRecoveryOptions"}, {"var_description": "A string containing the localized recovery suggestion for the error.", "var_type": "String", "is_static": false, "var_name": "localizedRecoverySuggestion"}, {"var_description": "A string containing the localized explanation of the reason for the error.", "var_type": "String", "is_static": false, "var_name": "localizedFailureReason"}, {"var_description": "The object in the user info dictionary corresponding to the NSRecoveryAttempterErrorKey key.", "var_type": "Any", "is_static": false, "var_name": "recoveryAttempter"}, {"var_description": "A string to display in response to an alert panel help anchor button being pressed.", "var_type": "String", "is_static": false, "var_name": "helpAnchor"}, {"var_description": "Cocoa errors", "var_type": "String", "is_static": false, "var_name": "NSCocoaErrorDomain"}, {"var_description": "POSIX/BSD errors", "var_type": "String", "is_static": false, "var_name": "NSPOSIXErrorDomain"}, {"var_description": "Mac OS 9/Carbon errors", "var_type": "String", "is_static": false, "var_name": "NSOSStatusErrorDomain"}, {"var_description": "Mach errors", "var_type": "String", "is_static": false, "var_name": "NSMachErrorDomain"}, {"var_description": "URL loading system errors", "var_type": "String", "is_static": false, "var_name": "NSURLErrorDomain"}, {"var_description": "The error domain used by NSError when reporting SOCKS errors.", "var_type": "String", "is_static": false, "var_name": "NSStreamSOCKSErrorDomain"}, {"var_description": "The error domain used by NSError when reporting SSL errors.", "var_type": "String", "is_static": false, "var_name": "NSStreamSocketSSLErrorDomain"}, {"var_description": "The start of the range of error codes reserved for bundle errors.", "var_type": "Int", "is_static": false, "var_name": "NSBundleErrorMinimum"}, {"var_description": "The end of the range of error codes reserved for bundle errors.", "var_type": "Int", "is_static": false, "var_name": "NSBundleErrorMaximum"}, {"var_description": "The application exceeded the amount of on-demand resources content in use at one time.", "var_type": "Int", "is_static": false, "var_name": "NSBundleOnDemandResourceExceededMaximumSizeError"}, {"var_description": "The application specified a tag that the system couldn\u2019t find in the application tag manifest.", "var_type": "Int", "is_static": false, "var_name": "NSBundleOnDemandResourceInvalidTagError"}, {"var_description": "Insufficient space available to download the requested on-demand resources.", "var_type": "Int", "is_static": false, "var_name": "NSBundleOnDemandResourceOutOfSpaceError"}, {"var_description": "The user canceled the operation (for example, by pressing Command-period).", "var_type": "Int", "is_static": false, "var_name": "NSUserCancelledError"}, {"var_description": "The start of the range of error codes reserved for cloud-sharing errors.", "var_type": "Int", "is_static": false, "var_name": "NSCloudSharingErrorMinimum"}, {"var_description": "The end of the range of error codes reserved for cloud-sharing errors.", "var_type": "Int", "is_static": false, "var_name": "NSCloudSharingErrorMaximum"}, {"var_description": "A conflict occurred during an attempt to save changes.", "var_type": "Int", "is_static": false, "var_name": "NSCloudSharingConflictError"}, {"var_description": "Sharing failed due to a network failure.", "var_type": "Int", "is_static": false, "var_name": "NSCloudSharingNetworkFailureError"}, {"var_description": "The current user doesn\u2019t have permission to perform the requested actions.", "var_type": "Int", "is_static": false, "var_name": "NSCloudSharingNoPermissionError"}, {"var_description": "An otherwise unspecified cloud-sharing error occurred.", "var_type": "Int", "is_static": false, "var_name": "NSCloudSharingOtherError"}, {"var_description": "The user doesn\u2019t have enough storage space available to share the requested items.", "var_type": "Int", "is_static": false, "var_name": "NSCloudSharingQuotaExceededError"}, {"var_description": "Additional participants couldn\u2019t be added to the share, because the limit was reached.", "var_type": "Int", "is_static": false, "var_name": "NSCloudSharingTooManyParticipantsError"}, {"var_description": "The start of the range of error codes reserved for coder errors.", "var_type": "Int", "is_static": false, "var_name": "NSCoderErrorMinimum"}, {"var_description": "The end of the range of error codes reserved for coder errors.", "var_type": "Int", "is_static": false, "var_name": "NSCoderErrorMaximum"}, {"var_description": "The requested data wasn\u2019t found.", "var_type": "Int", "is_static": false, "var_name": "NSCoderValueNotFoundError"}, {"var_description": "Decoding failed due to corrupt data.", "var_type": "Int", "is_static": false, "var_name": "NSCoderReadCorruptError"}, {"var_description": "The beginning of the range of error codes reserved for errors related to executable files.", "var_type": "Int", "is_static": false, "var_name": "NSExecutableErrorMinimum"}, {"var_description": "The end of the range of error codes reserved for errors related to executable files.", "var_type": "Int", "is_static": false, "var_name": "NSExecutableErrorMaximum"}, {"var_description": "The executable doesn\u2019t provide an architecture compatible with the current process.", "var_type": "Int", "is_static": false, "var_name": "NSExecutableArchitectureMismatchError"}, {"var_description": "The executable failed due to linking issues.", "var_type": "Int", "is_static": false, "var_name": "NSExecutableLinkError"}, {"var_description": "Executable cannot be loaded for an otherwise-unspecified reason.", "var_type": "Int", "is_static": false, "var_name": "NSExecutableLoadError"}, {"var_description": "The executable type isn\u2019t loadable in the current process.", "var_type": "Int", "is_static": false, "var_name": "NSExecutableNotLoadableError"}, {"var_description": "The executable has Objective-C runtime information that\u2019s incompatible with the current process.", "var_type": "Int", "is_static": false, "var_name": "NSExecutableRuntimeMismatchError"}, {"var_description": "The start of the range of error codes reserved for formatting errors.", "var_type": "Int", "is_static": false, "var_name": "NSFormattingErrorMinimum"}, {"var_description": "The end of the range of error codes reserved for formatting errors.", "var_type": "Int", "is_static": false, "var_name": "NSFormattingErrorMaximum"}, {"var_description": "A formatter couldn\u2019t generate a string for an object, or parse a string into an object.", "var_type": "Int", "is_static": false, "var_name": "NSFormattingError"}, {"var_description": "The start of the range of error codes reserved for file errors.", "var_type": "Int", "is_static": false, "var_name": "NSFileErrorMinimum"}, {"var_description": "The end of the range of error codes reserved for file errors.", "var_type": "Int", "is_static": false, "var_name": "NSFileErrorMaximum"}, {"var_description": "The file could not be locked.", "var_type": "Int", "is_static": false, "var_name": "NSFileLockingError"}, {"var_description": "The volume couldn\u2019t be unmounted because it\u2019s in use.", "var_type": "Int", "is_static": false, "var_name": "NSFileManagerUnmountBusyError"}, {"var_description": "The volume couldn't be unmounted, for unknown reasons.", "var_type": "Int", "is_static": false, "var_name": "NSFileManagerUnmountUnknownError"}, {"var_description": "A filesystem operation was attempted on a non-existent file.", "var_type": "Int", "is_static": false, "var_name": "NSFileNoSuchFileError"}, {"var_description": "Could not read because of a corrupted file, bad format, or similar reason.", "var_type": "Int", "is_static": false, "var_name": "NSFileReadCorruptFileError"}, {"var_description": "Could not read because the string encoding wasn\u2019t applicable.", "var_type": "Int", "is_static": false, "var_name": "NSFileReadInapplicableStringEncodingError"}, {"var_description": "Could not read because of an invalid file name.", "var_type": "Int", "is_static": false, "var_name": "NSFileReadInvalidFileNameError"}, {"var_description": "Could not read because of a permission problem.", "var_type": "Int", "is_static": false, "var_name": "NSFileReadNoPermissionError"}, {"var_description": "Could not read because no such file was found.", "var_type": "Int", "is_static": false, "var_name": "NSFileReadNoSuchFileError"}, {"var_description": "Could not read because the specified file was too large.", "var_type": "Int", "is_static": false, "var_name": "NSFileReadTooLargeError"}, {"var_description": "Could not read, for unknown reasons.", "var_type": "Int", "is_static": false, "var_name": "NSFileReadUnknownError"}, {"var_description": "Could not read because the string coding of the file couldn\u2019t be determined.", "var_type": "Int", "is_static": false, "var_name": "NSFileReadUnknownStringEncodingError"}, {"var_description": "Could not read because the specified URL scheme is unsupported.", "var_type": "Int", "is_static": false, "var_name": "NSFileReadUnsupportedSchemeError"}, {"var_description": "Could not perform an operation because the destination file already exists.", "var_type": "Int", "is_static": false, "var_name": "NSFileWriteFileExistsError"}, {"var_description": "Could not write because the string encoding was not applicable.", "var_type": "Int", "is_static": false, "var_name": "NSFileWriteInapplicableStringEncodingError"}, {"var_description": "Could not write because of an invalid file name.", "var_type": "Int", "is_static": false, "var_name": "NSFileWriteInvalidFileNameError"}, {"var_description": "Could not write because of a permission problem.", "var_type": "Int", "is_static": false, "var_name": "NSFileWriteNoPermissionError"}, {"var_description": "Could not write because of a lack of disk space.", "var_type": "Int", "is_static": false, "var_name": "NSFileWriteOutOfSpaceError"}, {"var_description": "Could not write, for unknown reasons.", "var_type": "Int", "is_static": false, "var_name": "NSFileWriteUnknownError"}, {"var_description": "Could not write because the specified URL scheme is unsupported.", "var_type": "Int", "is_static": false, "var_name": "NSFileWriteUnsupportedSchemeError"}, {"var_description": "Could not write because the volume is read-only.", "var_type": "Int", "is_static": false, "var_name": "NSFileWriteVolumeReadOnlyError"}, {"var_description": "The minimum error code value that represents an iCloud error.", "var_type": "Int", "is_static": false, "var_name": "NSUbiquitousFileErrorMinimum"}, {"var_description": "The maximum error code value that represents an iCloud error.", "var_type": "Int", "is_static": false, "var_name": "NSUbiquitousFileErrorMaximum"}, {"var_description": "The item could not be uploaded to iCloud because it would make the account go over its quota.", "var_type": "Int", "is_static": false, "var_name": "NSUbiquitousFileNotUploadedDueToQuotaError"}, {"var_description": "A failure to connect to the iCloud servers.", "var_type": "Int", "is_static": false, "var_name": "NSUbiquitousFileUbiquityServerNotAvailable"}, {"var_description": "The item has not been uploaded to iCloud by another device yet.", "var_type": "Int", "is_static": false, "var_name": "NSUbiquitousFileUnavailableError"}, {"var_description": "The start of the range of error codes reserved for property list errors.", "var_type": "Int", "is_static": false, "var_name": "NSPropertyListErrorMinimum"}, {"var_description": "The end of the range of error codes reserved for property list errors.", "var_type": "Int", "is_static": false, "var_name": "NSPropertyListErrorMaximum"}, {"var_description": "Parsing of the property list failed.", "var_type": "Int", "is_static": false, "var_name": "NSPropertyListReadCorruptError"}, {"var_description": "Reading of the property list failed.", "var_type": "Int", "is_static": false, "var_name": "NSPropertyListReadStreamError"}, {"var_description": "The version number of the property list cannot be determined.", "var_type": "Int", "is_static": false, "var_name": "NSPropertyListReadUnknownVersionError"}, {"var_description": "Writing failed because of an invalid property list object, or an invalid property list type was specified.", "var_type": "Int", "is_static": false, "var_name": "NSPropertyListWriteInvalidError"}, {"var_description": "Writing to the property list failed.", "var_type": "Int", "is_static": false, "var_name": "NSPropertyListWriteStreamError"}, {"var_description": "The start of the range of error codes reserved for user activity errors.", "var_type": "Int", "is_static": false, "var_name": "NSUserActivityErrorMinimum"}, {"var_description": "The end of the range of error codes reserved for user activity errors.", "var_type": "Int", "is_static": false, "var_name": "NSUserActivityErrorMaximum"}, {"var_description": "The user activity couldn\u2019t be continued because a required connection was not available.", "var_type": "Int", "is_static": false, "var_name": "NSUserActivityConnectionUnavailableError"}, {"var_description": " The data for the user activity was not available.", "var_type": "Int", "is_static": false, "var_name": "NSUserActivityHandoffFailedError"}, {"var_description": "The user info dictionary was too large to receive.", "var_type": "Int", "is_static": false, "var_name": "NSUserActivityHandoffUserInfoTooLargeError"}, {"var_description": "The remote application failed to send data within the specified time.", "var_type": "Int", "is_static": false, "var_name": "NSUserActivityRemoteApplicationTimedOutError"}, {"var_description": "The start of the range of error codes reserved for validation errors.", "var_type": "Int", "is_static": false, "var_name": "NSValidationErrorMinimum"}, {"var_description": "The end of the range of error codes reserved for validation errors.", "var_type": "Int", "is_static": false, "var_name": "NSValidationErrorMaximum"}, {"var_description": "The lower bounds of XPC connection error code values.", "var_type": "Int", "is_static": false, "var_name": "NSXPCConnectionErrorMinimum"}, {"var_description": "The upper bounds of XPC connection error code values. ", "var_type": "Int", "is_static": false, "var_name": "NSXPCConnectionErrorMaximum"}, {"var_description": "The XPC connection was interrupted.", "var_type": "Int", "is_static": false, "var_name": "NSXPCConnectionInterrupted"}, {"var_description": "The XPC connection was invalid.", "var_type": "Int", "is_static": false, "var_name": "NSXPCConnectionInvalid"}, {"var_description": "The XPC connection reply was invalid.", "var_type": "Int", "is_static": false, "var_name": "NSXPCConnectionReplyInvalid"}, {"var_description": "App Transport Security disallowed a connection because there is no secure network connection.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorAppTransportSecurityRequiresSecureConnection"}, {"var_description": "An app or app extension attempted to connect to a background session that is already connected to a process.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorBackgroundSessionInUseByAnotherProcess"}, {"var_description": "The shared container identifier of the URL session configuration is needed but hasn\u2019t been set.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorBackgroundSessionRequiresSharedContainer"}, {"var_description": "The app is suspended or exits while a background data task is processing.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorBackgroundSessionWasDisconnected"}, {"var_description": "The URL Loading System received bad data from the server.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorBadServerResponse"}, {"var_description": "A malformed URL prevented a URL request from being initiated.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorBadURL"}, {"var_description": "A connection was attempted while a phone call was active on a network that doesn\u2019t support simultaneous phone and data communication, such as EDGE or GPRS.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorCallIsActive"}, {"var_description": "An asynchronous load has been canceled.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorCancelled"}, {"var_description": "A download task couldn\u2019t close the downloaded file on disk.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorCannotCloseFile"}, {"var_description": "An attempt to connect to a host failed. ", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorCannotConnectToHost"}, {"var_description": "A download task couldn\u2019t create the downloaded file on disk because of an I/O failure.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorCannotCreateFile"}, {"var_description": "Content data received during a connection request had an unknown content encoding.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorCannotDecodeContentData"}, {"var_description": "Content data received during a connection request couldn\u2019t be decoded for a known content encoding.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorCannotDecodeRawData"}, {"var_description": "The host name for a URL couldn\u2019t be resolved.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorCannotFindHost"}, {"var_description": "A specific request to load an item only from the cache couldn't be satisfied. ", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorCannotLoadFromNetwork"}, {"var_description": "A downloaded file on disk couldn\u2019t be moved.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorCannotMoveFile"}, {"var_description": "A downloaded file on disk couldn\u2019t be opened.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorCannotOpenFile"}, {"var_description": "A response to a connection request couldn\u2019t be parsed.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorCannotParseResponse"}, {"var_description": "A downloaded file couldn\u2019t be removed from disk.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorCannotRemoveFile"}, {"var_description": "A download task couldn\u2019t write the file to disk.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorCannotWriteToFile"}, {"var_description": "A server certificate was rejected.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorClientCertificateRejected"}, {"var_description": "A client certificate was required to authenticate an SSL connection during a connection request.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorClientCertificateRequired"}, {"var_description": "The host address couldn\u2019t be found via DNS lookup.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorDNSLookupFailed"}, {"var_description": "The length of the resource data exceeded the maximum allowed.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorDataLengthExceedsMaximum"}, {"var_description": "The cellular network disallowed a connection.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorDataNotAllowed"}, {"var_description": "A download task failed to decode an encoded file during the download.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorDownloadDecodingFailedMidStream"}, {"var_description": "A download task failed to decode an encoded file after downloading.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorDownloadDecodingFailedToComplete"}, {"var_description": "The specified file doesn\u2019t exist.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorFileDoesNotExist"}, {"var_description": "A request for an FTP file resulted in the server responding that the file is not a plain file, but a directory.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorFileIsDirectory"}, {"var_description": "An internal file operation failed.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorFileOutsideSafeArea"}, {"var_description": "A redirect loop was detected or the threshold for number of allowable redirects was exceeded (currently 16).", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorHTTPTooManyRedirects"}, {"var_description": "The attempted connection required activating a data context while roaming, but international roaming is disabled.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorInternationalRoamingOff"}, {"var_description": "A client or server connection was severed in the middle of an in-progress load.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorNetworkConnectionLost"}, {"var_description": "A resource couldn\u2019t be read because of insufficient permissions.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorNoPermissionsToReadFile"}, {"var_description": "A network resource was requested, but an internet connection has not been established and can\u2019t be established automatically.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorNotConnectedToInternet"}, {"var_description": "A redirect was specified by way of server response code, but the server didn\u2019t accompany this code with a redirect URL.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorRedirectToNonExistentLocation"}, {"var_description": "A body stream was needed but the client did not provide one.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorRequestBodyStreamExhausted"}, {"var_description": "A requested resource couldn\u2019t be retrieved.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorResourceUnavailable"}, {"var_description": "An attempt to establish a secure connection failed for reasons that can\u2019t be expressed more specifically.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorSecureConnectionFailed"}, {"var_description": "A server certificate is expired, or is not yet valid.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorServerCertificateHasBadDate"}, {"var_description": "A server certificate wasn\u2019t signed by any root server.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorServerCertificateHasUnknownRoot"}, {"var_description": "A server certificate isn\u2019t valid yet.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorServerCertificateNotYetValid"}, {"var_description": "A server certificate was signed by a root server that isn\u2019t trusted.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorServerCertificateUntrusted"}, {"var_description": "An asynchronous operation timed out. ", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorTimedOut"}, {"var_description": "The URL Loading System encountered an error that it can\u2019t interpret.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorUnknown"}, {"var_description": "A properly formed URL couldn\u2019t be handled by the framework.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorUnsupportedURL"}, {"var_description": "Authentication was required to access a resource.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorUserAuthenticationRequired"}, {"var_description": "An asynchronous request for authentication has been canceled by the user.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorUserCancelledAuthentication"}, {"var_description": "A server reported that a URL has a non-zero content length, but terminated the network connection gracefully without sending any data.", "var_type": "Int", "is_static": false, "var_name": "NSURLErrorZeroByteResource"}, {"var_description": "The feature isn\u2019t supported, because the file system lacks the feature, or required libraries are missing, or other similar reasons.", "var_type": "Int", "is_static": false, "var_name": "NSFeatureUnsupportedError"}, {"var_description": "A key-value coding validation error.", "var_type": "Int", "is_static": false, "var_name": "NSKeyValueValidationError"}]}