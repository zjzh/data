{"class_description": "Objective-C methods can signal an error condition by returning an NSError object by reference, which provides additional information about the kind of error and any underlying cause, if one can be determined. An NSError object may also provide localized error descriptions suitable for display to the user in its user info dictionary. See Error Handling Programming Guide for more information.\nMethods in Foundation and other Cocoa frameworks most often produce errors in the Cocoa error domain (NSCocoaErrorDomain); error codes for the Cocoa Error Domain are documented in the Foundation Constants. There are also predefined domains corresponding to Mach (NSMachErrorDomain), POSIX (NSPOSIXErrorDomain), and Carbon (NSOSStatusErrorDomain) errors.\nNSError is \u201ctoll-free bridged\u201d with its Core Foundation counterpart, CFError. See Toll-Free Bridging for more information.\nApplications may choose to create subclasses of NSError, for example, to provide better localized error strings by overriding localizedDescription.\n", "Methods": [{"method_description": "Implemented to attempt a recovery from an error noted in a document-modal sheet.", "method_name": "attemptRecovery", "params": [{"param_type": "Error", "param_description": "An NSError object that describes the error, including error recovery options.", "param_name": ["fromError", "error"]}, {"param_type": "Int", "param_description": "The index of the user selected recovery option in error\u2019s localized recovery array.", "param_name": ["optionIndex", "recoveryOptionIndex"]}, {"param_type": "Any", "param_description": "An object that is the modal delegate.", "param_name": ["delegate"]}, {"param_type": "Selector", "param_description": "A selector identifying the method implemented by the modal delegate.", "param_name": ["didRecoverSelector"]}, {"param_type": "UnsafeMutableRawPointer", "param_description": "Arbitrary data associated with the attempt at error recovery, to be passed to delegate in didRecoverSelector.", "param_name": ["contextInfo"]}], "class_name": "NSError", "method_declar": "func attemptRecovery(fromError error: Error, optionIndex recoveryOptionIndex: Int, delegate: Any?, didRecoverSelector: Selector?, contextInfo: UnsafeMutableRawPointer?)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Implemented to attempt a recovery from an error noted in an application-modal dialog.", "method_name": "attemptRecovery", "params": [{"param_type": "Error", "param_description": "An NSError object that describes the error, including error recovery options.", "param_name": ["fromError", "error"]}, {"param_type": "Int", "param_description": "The index of the user selected recovery option in error's localized recovery array.", "param_name": ["optionIndex", "recoveryOptionIndex"]}], "class_name": "NSError", "method_declar": "func attemptRecovery(fromError error: Error, optionIndex recoveryOptionIndex: Int) -> Bool", "return_value": {"return_description": ["true if the error recovery was completed successfully, false otherwise."], "return_name": [""], "return_type": ["Bool"]}, "is_static": false}], "class_inherit_list": ["NSObject"], "class_name": "NSError", "typealias": [], "Vars": [{"var_description": "The error domain used by NSError when reporting SOCKS errors.", "var_type": "String", "is_static": false, "var_name": "NSStreamSOCKSErrorDomain"}, {"var_description": "The error domain used by NSError when reporting SSL errors.", "var_type": "String", "is_static": false, "var_name": "NSStreamSocketSSLErrorDomain"}, {"var_description": "The start of the range of error codes reserved for bundle errors.", "var_type": "Int", "is_static": false, "var_name": "NSBundleErrorMinimum"}, {"var_description": "The end of the range of error codes reserved for bundle errors.", "var_type": "Int", "is_static": false, "var_name": "NSBundleErrorMaximum"}, {"var_description": "The application exceeded the amount of on-demand resources content in use at one time.", "var_type": "Int", "is_static": false, "var_name": "NSBundleOnDemandResourceExceededMaximumSizeError"}, {"var_description": "The application specified a tag that the system couldn\u2019t find in the application tag manifest.", "var_type": "Int", "is_static": false, "var_name": "NSBundleOnDemandResourceInvalidTagError"}, {"var_description": "Insufficient space available to download the requested on-demand resources.", "var_type": "Int", "is_static": false, "var_name": "NSBundleOnDemandResourceOutOfSpaceError"}, {"var_description": "The start of the range of error codes reserved for coder errors.", "var_type": "Int", "is_static": false, "var_name": "NSCoderErrorMinimum"}, {"var_description": "The end of the range of error codes reserved for coder errors.", "var_type": "Int", "is_static": false, "var_name": "NSCoderErrorMaximum"}, {"var_description": "The requested data wasn\u2019t found.", "var_type": "Int", "is_static": false, "var_name": "NSCoderValueNotFoundError"}, {"var_description": "Decoding failed due to corrupt data.", "var_type": "Int", "is_static": false, "var_name": "NSCoderReadCorruptError"}, {"var_description": "The beginning of the range of error codes reserved for errors related to executable files.", "var_type": "Int", "is_static": false, "var_name": "NSExecutableErrorMinimum"}, {"var_description": "The end of the range of error codes reserved for errors related to executable files.", "var_type": "Int", "is_static": false, "var_name": "NSExecutableErrorMaximum"}, {"var_description": "The executable doesn\u2019t provide an architecture compatible with the current process.", "var_type": "Int", "is_static": false, "var_name": "NSExecutableArchitectureMismatchError"}, {"var_description": "The executable failed due to linking issues.", "var_type": "Int", "is_static": false, "var_name": "NSExecutableLinkError"}, {"var_description": "Executable cannot be loaded for an otherwise-unspecified reason.", "var_type": "Int", "is_static": false, "var_name": "NSExecutableLoadError"}, {"var_description": "The executable type isn\u2019t loadable in the current process.", "var_type": "Int", "is_static": false, "var_name": "NSExecutableNotLoadableError"}, {"var_description": "The executable has Objective-C runtime information that\u2019s incompatible with the current process.", "var_type": "Int", "is_static": false, "var_name": "NSExecutableRuntimeMismatchError"}, {"var_description": "The start of the range of error codes reserved for property list errors.", "var_type": "Int", "is_static": false, "var_name": "NSPropertyListErrorMinimum"}, {"var_description": "The end of the range of error codes reserved for property list errors.", "var_type": "Int", "is_static": false, "var_name": "NSPropertyListErrorMaximum"}, {"var_description": "Parsing of the property list failed.", "var_type": "Int", "is_static": false, "var_name": "NSPropertyListReadCorruptError"}, {"var_description": "Reading of the property list failed.", "var_type": "Int", "is_static": false, "var_name": "NSPropertyListReadStreamError"}, {"var_description": "The version number of the property list cannot be determined.", "var_type": "Int", "is_static": false, "var_name": "NSPropertyListReadUnknownVersionError"}, {"var_description": "Writing failed because of an invalid property list object, or an invalid property list type was specified.", "var_type": "Int", "is_static": false, "var_name": "NSPropertyListWriteInvalidError"}, {"var_description": "Writing to the property list failed.", "var_type": "Int", "is_static": false, "var_name": "NSPropertyListWriteStreamError"}, {"var_description": "The start of the range of error codes reserved for user activity errors.", "var_type": "Int", "is_static": false, "var_name": "NSUserActivityErrorMinimum"}, {"var_description": "The end of the range of error codes reserved for user activity errors.", "var_type": "Int", "is_static": false, "var_name": "NSUserActivityErrorMaximum"}, {"var_description": "The user activity couldn\u2019t be continued because a required connection was not available.", "var_type": "Int", "is_static": false, "var_name": "NSUserActivityConnectionUnavailableError"}, {"var_description": " The data for the user activity was not available.", "var_type": "Int", "is_static": false, "var_name": "NSUserActivityHandoffFailedError"}, {"var_description": "The user info dictionary was too large to receive.", "var_type": "Int", "is_static": false, "var_name": "NSUserActivityHandoffUserInfoTooLargeError"}, {"var_description": "The remote application failed to send data within the specified time.", "var_type": "Int", "is_static": false, "var_name": "NSUserActivityRemoteApplicationTimedOutError"}, {"var_description": "The lower bounds of XPC connection error code values.", "var_type": "Int", "is_static": false, "var_name": "NSXPCConnectionErrorMinimum"}, {"var_description": "The upper bounds of XPC connection error code values. ", "var_type": "Int", "is_static": false, "var_name": "NSXPCConnectionErrorMaximum"}, {"var_description": "The XPC connection was interrupted.", "var_type": "Int", "is_static": false, "var_name": "NSXPCConnectionInterrupted"}, {"var_description": "The XPC connection was invalid.", "var_type": "Int", "is_static": false, "var_name": "NSXPCConnectionInvalid"}, {"var_description": "The XPC connection reply was invalid.", "var_type": "Int", "is_static": false, "var_name": "NSXPCConnectionReplyInvalid"}], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Error", "Hashable", "NSCopying", "NSSecureCoding"], "package_name": "foundation", "subclass_list": []}