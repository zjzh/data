{"subclass_list": [], "typealias": [], "class_inherit_list": [], "Methods": [{"return_value": {"return_name": [""], "return_description": [], "return_type": ["An"]}, "method_description": "Returns a proxy object with no error handling block.Required.", "is_static": false, "method_name": "remoteObjectProxy", "class_name": "NSXPCProxyCreating", "method_declar": "func remoteObjectProxy() -> Any", "params": []}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["An"]}, "method_description": "Returns a proxy object that invokes the error handling block if an error occurs on the connection.Required.", "is_static": false, "method_name": "remoteObjectProxyWithErrorHandler", "class_name": "NSXPCProxyCreating", "method_declar": "func remoteObjectProxyWithErrorHandler(_ handler: @escaping (Error) -> Void) -> Any", "params": [{"param_type": "@escaping (Error) -> Void", "param_description": "The error handling block that the proxy object should call when an error occurs while waiting for a reply.", "param_name": ["handler"]}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["An"]}, "method_description": "", "is_static": false, "method_name": "synchronousRemoteObjectProxyWithErrorHandler", "class_name": "NSXPCProxyCreating", "method_declar": "optional func synchronousRemoteObjectProxyWithErrorHandler(_ handler: @escaping (Error) -> Void) -> Any", "params": [{"param_type": "@escaping (Error) -> Void", "param_description": "", "param_name": ["handler"]}]}], "class_type": "protocol", "class_name": "NSXPCProxyCreating", "Vars": [], "interface_list": [], "class_description": "NSXPCConnection implements this protocol. All objects returned from the methods in this protocol also implement the protocol. This allows creation of new proxies from other proxies.\n", "package_name": "foundation"}