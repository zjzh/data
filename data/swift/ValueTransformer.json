{"class_description": "You create a value transformer by subclassing ValueTransformer and overriding the necessary methods to provide the required custom transformation. You then register the value transformer using the setValueTransformer(_:forName:) method, so that other parts of your app can access it by name with init(forName:).\nUse the transformedValue(_:) method to transform a value from one representation into another. If a value transformer designates that its transformation is reversible by returning true for allowsReverseTransformation(), you can also use the reverseTransformedValue(_:) to perform the transformation in reverse. For example, reversing the characters in a string is a reversible operation, whereas changing the characters in a string to be uppercase is a nonreversible operation.\nA value transformer can take inputs of one type and return a value of a different type. For example,  a value transformer could take an NSImage or UIImage object and return an NSData object containing the PNG representation of that image.\nThe following example defines a new value transformer that takes an object and returns a string based on the object\u2019\u0080\u0099s class type. This transformer isn't reversible because it doesn't make sense to transform a class name into an object.\n", "Methods": [], "class_inherit_list": ["NSObject"], "class_name": "ValueTransformer", "typealias": [], "Vars": [], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable"], "package_name": "foundation", "subclass_list": []}