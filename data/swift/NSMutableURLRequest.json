{"class_description": "NSMutableURLRequest is a subclass of NSURLRequest that enables you to mutate a single request object for a series of URL load requests instead of creating an immutable NSURLRequest object for each load.\nImportant\nThis class only encapsulates information about a URL request. You must use other classes such as URLSession to send these requests to a server. See Fetching Website Data into Memory and Uploading Data to a Website for an introduction to these techniques.\nNSMutableURLRequest, like NSURLRequest, is designed to be extended to support additional protocols by creating extensions that provide accessor methods for your own protocol-specific properties. Those methods can get and set the actual values by calling the URLProtocol methods property(forKey:in:) and setProperty(_:forKey:in:).\nThe URLSession, NSURLConnection, and NSURLDownload classes make a deep copy of each NSMutableURLRequest object passed to their initializers and task creation methods.\nImportant\nThe Swift overlay to the Foundation framework provides the URLRequest structure, which bridges to the NSMutableURLRequest class and its immutable superclass, NSURLRequest. For more information about value types, see Working with Cocoa Frameworks in Using Swift with Cocoa and Objective-C (Swift 4.1).\nThe URL Loading System is designed to handle various aspects of the HTTP protocol for you. As a result, you should not modify the following headers using the addValue(_:forHTTPHeaderField:) or setValue(_:forHTTPHeaderField:) methods:\nAuthorization\nConnection\nHost\nProxy-Authenticate\nProxy-Authorization\nWWW-Authenticate\n", "Methods": [], "class_inherit_list": ["NSURLRequest"], "class_name": "NSMutableURLRequest", "typealias": [], "Vars": [], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable"], "package_name": "foundation", "subclass_list": []}