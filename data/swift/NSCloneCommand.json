{"package_name": "foundation", "subclass_list": [], "class_description": "An instance of NSCloneCommand clones the specified scriptable object or objects (such as words, paragraphs, images, and so on) and inserts them in the specified location, or the default location if no location is specified. The cloned scriptable objects typically correspond to objects in the application, but aren\u2019t required to. This command corresponds to AppleScript\u2019s duplicate command.\nNSCloneCommand is part of Cocoa\u2019s built-in scripting support. It works automatically to support the duplicate command through key-value coding. Most applications don\u2019t need to subclass NSCloneCommand or invoke its methods.\nWhen an instance of NSCloneCommand is executed, it clones the specified objects by sending them copyWithZone: messages.\n", "class_type": "class", "typealias": [], "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["NSScriptCommand"], "Methods": [{"params": [{"param_name": ["receiversRef"], "param_type": "NSScriptObjectSpecifier", "param_description": "The object specifier for the receiver."}], "class_name": "NSCloneCommand", "is_static": false, "return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_name": "setReceiversSpecifier", "method_description": "Sets the receiver\u2019s object specifier;.", "method_declar": "func setReceiversSpecifier(_ receiversRef: NSScriptObjectSpecifier?)"}], "class_name": "NSCloneCommand", "Vars": [{"var_description": "Returns a specifier for the object or objects to be cloned.", "var_type": "NSScriptObjectSpecifier", "is_static": false, "var_name": "keySpecifier"}]}