{"class_description": "A file manager object lets you examine the contents of the file system and make changes to it. The FileManager class provides convenient access to a shared file manager object that is suitable for most types of file-related manipulations. A file manager object is typically your primary mode of interaction with the file system. You use it to locate, create, copy, and move files and directories. You also use it to get information about a file or directory or change some of its attributes.\nWhen specifying the location of files, you can use either NSURL or NSString objects. The use of the NSURL class is generally preferred for specifying file-system items because URLs can convert path information to a more efficient representation internally. You can also obtain a bookmark from an NSURL object, which is similar to an alias and offers a more sure way of locating the file or directory later.\nIf you are moving, copying, linking, or removing files or directories, you can use a delegate in conjunction with a file manager object to manage those operations. The delegate\u2019s role is to affirm the operation and to decide whether to proceed when errors occur. In macOS 10.7 and later, the delegate must conform to the FileManagerDelegate protocol.\nIn iOS 5.0 and later and in macOS 10.7 and later, FileManager includes methods for managing items stored in iCloud. Files and directories tagged for cloud storage are synced to iCloud so that they can be made available to the user\u2019s iOS devices and Macintosh computers. Changes to an item in one location are propagated to all other locations to ensure the items stay in sync.\nThe methods of the shared FileManager object can be called from multiple threads safely. However, if you use a delegate to receive notifications about the status of move, copy, remove, and link operations, you should create a unique instance of the file manager object, assign your delegate to that object, and use that file manager to initiate your operations.\n", "Methods": [{"method_description": "An NSFileManager object sends this message to its handler for each error it encounters when copying, moving, removing, or linking files or directories. DeprecatedSee delegate methods for copy, move, remove, and link methods.", "method_name": "fileManager", "params": [{"param_type": "FileManager", "param_description": "", "param_name": ["fm"]}, {"param_type": "[AnyHashable", "param_description": "A dictionary that contains two or three pieces of information (all NSString objects) related to the error:KeyValue@\"Path\"The path related to the error (usually the source path)@\"Error\"A description of the error@\"ToPath\" The destination path (not all errors)", "param_name": ["shouldProceedAfterError", "errorInfo"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[AnyHashable"]}], "class_name": "FileManager", "method_declar": "func fileManager(_ fm: FileManager, shouldProceedAfterError errorInfo: [AnyHashable : Any]) -> Bool", "return_value": {"return_description": ["true if the operation (which is often continuous within a loop) should proceed, otherwise false. "], "return_name": [""], "return_type": ["Bool"]}, "is_static": false}, {"method_description": "An NSFileManager object sends this message to a handler immediately before attempting to move, copy, rename, or delete, or before attempting to link to a given path.DeprecatedSee delegate methods for copy, move, link, and remove methods.", "method_name": "fileManager", "params": [{"param_type": "FileManager", "param_description": "", "param_name": ["fm"]}, {"param_type": "String", "param_description": "The path or a file or directory that manager is about to attempt to move, copy, rename, delete, or link to.", "param_name": ["willProcessPath", "path"]}], "class_name": "FileManager", "method_declar": "func fileManager(_ fm: FileManager, willProcessPath path: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": ["NSObject"], "class_name": "FileManager", "typealias": [], "Vars": [{"var_description": "Sent after the iCloud (\u201cubiquity\u201d) identity has changed.", "var_type": "NSNotification.Name", "is_static": false, "var_name": "NSUbiquityIdentityDidChange"}], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable"], "package_name": "foundation", "subclass_list": []}