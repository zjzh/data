{"Methods": [], "Vars": [], "class_name": "DefaultStringInterpolation", "interface_list": ["CustomStringConvertible", "StringInterpolationProtocol", "TextOutputStream"], "class_description": "Do not create an instance of this type directly. It is used by the compiler when you create a string using string interpolation. Instead, use string interpolation to create a new string by including values, literals, variables, or expressions enclosed in parentheses, prefixed by a backslash (\\(\u2026)).\nWhen implementing an ExpressibleByStringInterpolation conformance, set the StringInterpolation associated type to DefaultStringInterpolation to get the same interpolation behavior as Swift\u2019s built-in String type and construct a String with the results. If you don\u2019t want the default behavior or don\u2019t want to construct a String, use a custom type conforming to StringInterpolationProtocol instead.\nCode outside the standard library can extend string interpolation on String and many other common types by extending DefaultStringInterpolation and adding an appendInterpolation(...) method. For example:\nSee StringInterpolationProtocol for details on appendInterpolation methods.\nDefaultStringInterpolation extensions should add only mutating members and should not copy self or capture it in an escaping closure.\n", "class_inherit_list": [], "package_name": "swift", "subclass_list": [], "class_type": "struct", "typealias": []}