{"subclass_list": [], "typealias": ["typealias CompletionHandler = (Error?) -> Void"], "class_inherit_list": ["NSUserScriptTask"], "Methods": [{"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Execute the unix script with the specified arguments.", "is_static": false, "method_name": "execute", "class_name": "NSUserUnixTask", "method_declar": "func execute(withArguments arguments: [String]?, completionHandler handler: NSUserUnixTask.CompletionHandler? = nil)", "params": [{"param_type": "[String]", "param_description": "An array of NSString objects containing the script arguments. The arguments do not undergo shell expansion, so you do not need to do special quoting, and shell variables are not resolved.", "param_name": ["withArguments", "arguments"]}, {"param_type": "NSUserUnixTask.CompletionHandler = nil", "param_description": "The completion handler Block that returns the result. See NSUserUnixTask.CompletionHandler.", "param_name": ["completionHandler", "handler"]}]}], "class_type": "class", "class_name": "NSUserUnixTask", "Vars": [{"var_name": "standardError", "var_type": "FileHandle", "var_description": "The standard error stream.", "is_static": false}, {"var_name": "standardInput", "var_type": "FileHandle", "var_description": "The standard input stream.", "is_static": false}, {"var_name": "standardOutput", "var_type": "FileHandle", "var_description": "The standard output stream.", "is_static": false}], "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_description": "The NSUserUnixTask class is intended to run unix applications, typically a shell script, from your application. It is intended to execute user-supplied scripts, and will execute them outside of the application's sandbox, if any.\nThe class is not intended to execute scripts built into an application; for that, use one of the Process, NSAppleScript, or AMWorkflow classes.  If the application is sandboxed, then the script must be in the FileManager.SearchPathDirectory.applicationScriptsDirectory folder.  A sandboxed application may read from, but not write to, this folder.\nIf you simply need to execute unix scripts without regard to input or output, use NSUserScriptTask, which can execute any of the specific types.  If you need specific control over the input to, or output from, or the error stream of the script, use this class.\n", "package_name": "foundation"}