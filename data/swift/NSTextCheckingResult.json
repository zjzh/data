{"class_description": "On both iOS and macOS, instances of NSTextCheckingResult are returned by the NSRegularExpression class and the NSDataDetector class to indicate the discovery of content. In those cases, what is found may be a match for a regular expression or a date, address, phone number, and so on. In macOS, instances of NSTextCheckingResult are returned by the NSSpellChecker object to describe the results of spelling, grammar, or text-substitution actions.\n", "Methods": [{"method_description": "Returns the result type that the range represents.", "method_name": "range", "params": [{"param_type": "Int", "param_description": "The index of the result.", "param_name": ["at", "idx"]}], "class_name": "NSTextCheckingResult", "method_declar": "func range(at idx: Int) -> NSRange", "return_value": {"return_description": ["The range of the result."], "return_name": [""], "return_type": ["NSRang"]}, "is_static": false}, {"method_description": "Creates and returns a text checking result with the specified replacement string. ", "method_name": "replacementCheckingResult", "params": [{"param_type": "NSRange", "param_description": "The range of the detected result.", "param_name": ["range"]}, {"param_type": "String", "param_description": "The replacement string.", "param_name": ["replacementString"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func replacementCheckingResult(range: NSRange, replacementString: String) -> NSTextCheckingResult", "return_value": {"return_description": ["Returns an NSTextCheckingResult with the specified range and a resultType of replacement. "], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "Creates and returns a type checking result with the specified regular expression data. ", "method_name": "regularExpressionCheckingResult", "params": [{"param_type": "NSRangePointer", "param_description": "A C array of ranges, which must have at least one element, and the first element represents the overall range.", "param_name": ["ranges"]}, {"param_type": "Int", "param_description": "The number of items in the ranges array.", "param_name": ["count"]}, {"param_type": "NSRegularExpression", "param_description": "The regular expression.", "param_name": ["regularExpression"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func regularExpressionCheckingResult(ranges: NSRangePointer, count: Int, regularExpression: NSRegularExpression) -> NSTextCheckingResult", "return_value": {"return_description": ["Returns an NSTextCheckingResult with the specified range and a resultType of regularExpression. "], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "Creates and returns a text checking result with the specified URL.", "method_name": "linkCheckingResult", "params": [{"param_type": "NSRange", "param_description": "The range of the detected result.", "param_name": ["range"]}, {"param_type": "URL", "param_description": "The URL.", "param_name": ["url"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func linkCheckingResult(range: NSRange, url: URL) -> NSTextCheckingResult", "return_value": {"return_description": ["Returns an NSTextCheckingResult with the specified range and a resultType of link. "], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "Creates and returns a text checking result with the specified address components.", "method_name": "addressCheckingResult", "params": [{"param_type": "NSRange", "param_description": "The range of the detected result.", "param_name": ["range"]}, {"param_type": "[NSTextCheckingKey", "param_description": "A dictionary containing the address components. The dictionary keys are described in Keys for Address Components.", "param_name": ["components"]}, {"param_type": "String]", "param_description": "", "param_name": ["[NSTextCheckingKey"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func addressCheckingResult(range: NSRange, components: [NSTextCheckingKey : String]) -> NSTextCheckingResult", "return_value": {"return_description": ["Returns an NSTextCheckingResult with the specified range and a resultType of address. "], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "Creates and returns a text checking result with the specified transit information.", "method_name": "transitInformationCheckingResult", "params": [{"param_type": "NSRange", "param_description": "The range of the detected result.", "param_name": ["range"]}, {"param_type": "[NSTextCheckingKey", "param_description": "A dictionary containing the transit components. The currently supported keys are airline and flight.", "param_name": ["components"]}, {"param_type": "String]", "param_description": "", "param_name": ["[NSTextCheckingKey"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func transitInformationCheckingResult(range: NSRange, components: [NSTextCheckingKey : String]) -> NSTextCheckingResult", "return_value": {"return_description": ["Returns an NSTextCheckingResult with the specified range and a resultType of transitInformation. "], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "Creates and returns a text checking result with the specified phone number.", "method_name": "phoneNumberCheckingResult", "params": [{"param_type": "NSRange", "param_description": "The range of the detected result.", "param_name": ["range"]}, {"param_type": "String", "param_description": "The phone number.", "param_name": ["phoneNumber"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func phoneNumberCheckingResult(range: NSRange, phoneNumber: String) -> NSTextCheckingResult", "return_value": {"return_description": ["Returns an NSTextCheckingResult with the specified range and a resultType of phoneNumber. "], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "Creates and returns a text checking result with the specified date.", "method_name": "dateCheckingResult", "params": [{"param_type": "NSRange", "param_description": "The range of the detected result.", "param_name": ["range"]}, {"param_type": "Date", "param_description": "The detected date.", "param_name": ["date"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func dateCheckingResult(range: NSRange, date: Date) -> NSTextCheckingResult", "return_value": {"return_description": ["Returns an NSTextCheckingResult with the specified range and a resultType of date. "], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "Creates and returns a text checking result with the specified date, time zone, and duration.", "method_name": "dateCheckingResult", "params": [{"param_type": "NSRange", "param_description": "The range of the detected result.", "param_name": ["range"]}, {"param_type": "Date", "param_description": "The detected date.", "param_name": ["date"]}, {"param_type": "TimeZone", "param_description": "The detected time zone.", "param_name": ["timeZone"]}, {"param_type": "TimeInterval", "param_description": "The detected duration.", "param_name": ["duration"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func dateCheckingResult(range: NSRange, date: Date, timeZone: TimeZone, duration: TimeInterval) -> NSTextCheckingResult", "return_value": {"return_description": ["Returns an NSTextCheckingResult with the specified range and a resultType of date. "], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "Creates and returns a text checking result with the specified dash corrected replacement string.", "method_name": "dashCheckingResult", "params": [{"param_type": "NSRange", "param_description": "The range of the detected result.", "param_name": ["range"]}, {"param_type": "String", "param_description": "The replacement string.", "param_name": ["replacementString"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func dashCheckingResult(range: NSRange, replacementString: String) -> NSTextCheckingResult", "return_value": {"return_description": ["Returns an NSTextCheckingResult with the specified range and a resultType of dash. "], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "Creates and returns a text checking result with the specified quote-balanced replacement string.", "method_name": "quoteCheckingResult", "params": [{"param_type": "NSRange", "param_description": "The range of the detected result.", "param_name": ["range"]}, {"param_type": "String", "param_description": "The replacement string.", "param_name": ["replacementString"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func quoteCheckingResult(range: NSRange, replacementString: String) -> NSTextCheckingResult", "return_value": {"return_description": ["Returns an NSTextCheckingResult with the specified range and a resultType of quote. "], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "Creates and returns a text checking result with the range of a misspelled word.", "method_name": "spellCheckingResult", "params": [{"param_type": "NSRange", "param_description": "The range of the detected result.", "param_name": ["range"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func spellCheckingResult(range: NSRange) -> NSTextCheckingResult", "return_value": {"return_description": ["Returns an NSTextCheckingResult with the specified range and a resultType of spelling. "], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "Creates and returns a text checking result after detecting a possible correction.", "method_name": "correctionCheckingResult", "params": [{"param_type": "NSRange", "param_description": "The range of the detected result.", "param_name": ["range"]}, {"param_type": "String", "param_description": "The suggested replacement string.", "param_name": ["replacementString"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func correctionCheckingResult(range: NSRange, replacementString: String) -> NSTextCheckingResult", "return_value": {"return_description": ["Returns an NSTextCheckingResult with the specified range and a resultType of spelling. "], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "Creates and returns a text checking result with the specified orthography.", "method_name": "orthographyCheckingResult", "params": [{"param_type": "NSRange", "param_description": "The range of the detected result.", "param_name": ["range"]}, {"param_type": "NSOrthography", "param_description": "An orthography object that describes the script.", "param_name": ["orthography"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func orthographyCheckingResult(range: NSRange, orthography: NSOrthography) -> NSTextCheckingResult", "return_value": {"return_description": ["Returns an NSTextCheckingResult with the specified range and a resultType of orthography. "], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "Creates and returns a text checking result with the specified array of grammatical errors.", "method_name": "grammarCheckingResult", "params": [{"param_type": "NSRange", "param_description": "The range of the detected result.", "param_name": ["range"]}, {"param_type": "[[String", "param_description": "An array of details regarding the grammatical errors. This array of strings is suitable for presenting to the user.", "param_name": ["details"]}, {"param_type": "Any]]", "param_description": "", "param_name": ["[[String"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func grammarCheckingResult(range: NSRange, details: [[String : Any]]) -> NSTextCheckingResult", "return_value": {"return_description": ["Returns an NSTextCheckingResult with the specified range and a resultType of grammar. "], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "Returns a new text checking result after adjusting the ranges as specified by the offset.", "method_name": "adjustingRanges", "params": [{"param_type": "Int", "param_description": "The amount the ranges are adjusted.", "param_name": ["offset"]}], "class_name": "NSTextCheckingResult", "method_declar": "func adjustingRanges(offset: Int) -> NSTextCheckingResult", "return_value": {"return_description": ["A new NSTextCheckingResult instance with the adjusted range or ranges."], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}, {"method_description": "", "method_name": "range", "params": [{"param_type": "String", "param_description": "", "param_name": ["withName", "name"]}], "class_name": "NSTextCheckingResult", "method_declar": "func range(withName name: String) -> NSRange", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSRang"]}, "is_static": false}, {"method_description": "", "method_name": "correctionCheckingResult", "params": [{"param_type": "NSRange", "param_description": "", "param_name": ["range"]}, {"param_type": "String", "param_description": "", "param_name": ["replacementString"]}, {"param_type": "[String]", "param_description": "", "param_name": ["alternativeStrings"]}], "class_name": "NSTextCheckingResult", "method_declar": "class func correctionCheckingResult(range: NSRange, replacementString: String, alternativeStrings: [String]) -> NSTextCheckingResult", "return_value": {"return_description": [], "return_name": [""], "return_type": ["NSTextCheckingResul"]}, "is_static": false}], "class_inherit_list": ["NSObject"], "class_name": "NSTextCheckingResult", "typealias": ["typealias NSTextCheckingTypes = UInt64"], "Vars": [{"var_description": "Returns the range of the result that the receiver represents.", "var_type": "NSRange", "is_static": false, "var_name": "range"}, {"var_description": "Returns the text checking result type that the receiver represents.", "var_type": "NSTextCheckingResult.CheckingType", "is_static": false, "var_name": "resultType"}, {"var_description": "Returns the number of ranges.", "var_type": "Int", "is_static": false, "var_name": "numberOfRanges"}, {"var_description": "A replacement string from one of a number of replacement checking results.", "var_type": "String", "is_static": false, "var_name": "replacementString"}, {"var_description": "The regular expression of a type checking result.", "var_type": "NSRegularExpression", "is_static": false, "var_name": "regularExpression"}, {"var_description": "A dictionary containing the components of a type checking result.", "var_type": "[NSTextCheckingKey", "is_static": false, "var_name": "components"}, {"var_description": "The URL of a type checking result.", "var_type": "URL", "is_static": false, "var_name": "url"}, {"var_description": "The address dictionary of a type checking result.", "var_type": "[NSTextCheckingKey", "is_static": false, "var_name": "addressComponents"}, {"var_description": "The phone number of a type checking result.", "var_type": "String", "is_static": false, "var_name": "phoneNumber"}, {"var_description": "The date component of a type checking result.", "var_type": "Date", "is_static": false, "var_name": "date"}, {"var_description": "The duration component of a type checking result.", "var_type": "TimeInterval", "is_static": false, "var_name": "duration"}, {"var_description": "The time zone component of a type checking result.", "var_type": "TimeZone", "is_static": false, "var_name": "timeZone"}, {"var_description": "The detected orthography of a type checking result.", "var_type": "NSOrthography", "is_static": false, "var_name": "orthography"}, {"var_description": "The details of a located grammatical type checking result.", "var_type": "[[String", "is_static": false, "var_name": "grammarDetails"}, {"var_description": "A key that corresponds to the airline of a transit result.", "var_type": "NSTextCheckingKey", "is_static": false, "var_name": "airline"}, {"var_description": "A key that corresponds to the flight component of a transit result.", "var_type": "NSTextCheckingKey", "is_static": false, "var_name": "flight"}, {"var_description": "A key that corresponds to the name component of the address.", "var_type": "NSTextCheckingKey", "is_static": false, "var_name": "name"}, {"var_description": "A key that corresponds to the job component of the address.", "var_type": "NSTextCheckingKey", "is_static": false, "var_name": "jobTitle"}, {"var_description": "A key that corresponds to the organization component of the address.", "var_type": "NSTextCheckingKey", "is_static": false, "var_name": "organization"}, {"var_description": "A key that corresponds to the street address component of the address.", "var_type": "NSTextCheckingKey", "is_static": false, "var_name": "street"}, {"var_description": "A key that corresponds to the city component of the address.", "var_type": "NSTextCheckingKey", "is_static": false, "var_name": "city"}, {"var_description": "A key that corresponds to the state or province component of the address.", "var_type": "NSTextCheckingKey", "is_static": false, "var_name": "state"}, {"var_description": "A key that corresponds to the zip code or postal code component of the address.", "var_type": "NSTextCheckingKey", "is_static": false, "var_name": "zip"}, {"var_description": "A key that corresponds to the country component of the address.", "var_type": "NSTextCheckingKey", "is_static": false, "var_name": "country"}, {"var_description": "A key that corresponds to the phone number component of the address.", "var_type": "NSTextCheckingKey", "is_static": false, "var_name": "phone"}, {"var_description": "Checking types that can be used by clients.", "var_type": "NSTextCheckingTypes", "is_static": false, "var_name": "NSTextCheckingAllCustomTypes"}, {"var_description": "Checking types supported by the system. The first 32 types are reserved.", "var_type": "NSTextCheckingTypes", "is_static": false, "var_name": "NSTextCheckingAllSystemTypes"}, {"var_description": "All possible checking types, both system- and user-supported.", "var_type": "NSTextCheckingTypes", "is_static": false, "var_name": "NSTextCheckingAllTypes"}, {"var_description": "", "var_type": "[String]", "is_static": false, "var_name": "alternativeStrings"}], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying", "NSSecureCoding"], "package_name": "foundation", "subclass_list": []}