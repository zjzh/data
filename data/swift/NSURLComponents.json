{"class_description": "The NSURLComponents class is a class that is designed to parse URLs based on RFC 3986 and to construct URLs from their constituent parts. Its behavior differs subtly from the NSURL class, which conforms to older RFCs. However, you can easily obtain an NSURL object based on the contents of a URL components object or vice versa.\nYou create a URL components object in one of three ways: from an NSString object that contains a URL, from an NSURL object, or from scratch by using the default initializer. From there, you can modify the URL\u2019s individual components and subcomponents by modifying various properties, either in unencoded form or in URL-encoded form. If you set the unencoded property, you can then obtain the encoded equivalent by reading the encoded property value and vice versa.\nImportant\nThe Swift overlay to the Foundation framework provides the URLComponents structure, which bridges to the NSURLComponents class. For more information about value types, see Working with Cocoa Frameworks in Using Swift with Cocoa and Objective-C (Swift 4.1).\n", "Methods": [{"method_description": "Initializes a URL components object with nil for every component.", "method_name": "init", "params": [], "class_name": "NSURLComponents", "method_declar": "init()", "return_value": {"return_description": ["Returns the initialized URL components object, or nil if an error occurs."], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Initializes a URL components object by parsing a URL in string form.", "method_name": "init", "params": [{"param_type": "String", "param_description": "The URL string to parse.", "param_name": ["string", "URLString"]}], "class_name": "NSURLComponents", "method_declar": "init?(string URLString: String)", "return_value": {"return_description": ["Returns the initialized URL components object, or nil if the URL string could not be parsed."], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Initializes a URL components object by parsing the URL from an NSURL object.", "method_name": "init", "params": [{"param_type": "URL", "param_description": "The URL to parse.", "param_name": ["url"]}, {"param_type": "Bool", "param_description": "Controls whether the URL should be resolved against its base URL before parsing. If true, and if the url parameter contains a relative URL, the original URL is resolved against its base URL before parsing by calling the absoluteURL method. Otherwise, the string portion is used by itself.", "param_name": ["resolvingAgainstBaseURL", "resolve"]}], "class_name": "NSURLComponents", "method_declar": "init?(url: URL, resolvingAgainstBaseURL resolve: Bool)", "return_value": {"return_description": ["Returns the initialized URL components object, or nil if the URL could not be parsed."], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Returns a URL object derived from the components object.", "method_name": "url", "params": [{"param_type": "URL", "param_description": "If non-nil, this URL is used as the base URL portion of the resulting URL object.", "param_name": ["relativeTo", "baseURL"]}], "class_name": "NSURLComponents", "method_declar": "func url(relativeTo baseURL: URL?) -> URL?", "return_value": {"return_description": [], "return_name": [""], "return_type": ["UR"]}, "is_static": false}], "class_inherit_list": ["NSObject"], "class_name": "NSURLComponents", "typealias": [], "Vars": [{"var_description": "A URL derived from the components object, in string form.", "var_type": "String", "is_static": false, "var_name": "string"}, {"var_description": "A URL object derived from the components object.", "var_type": "URL", "is_static": false, "var_name": "url"}, {"var_description": "The fragment URL component (the part after a # symbol), or nil if not present.", "var_type": "String", "is_static": false, "var_name": "fragment"}, {"var_description": "The host URL subcomponent, or nil if not present.", "var_type": "String", "is_static": false, "var_name": "host"}, {"var_description": "The password URL subcomponent, or nil if not present.", "var_type": "String", "is_static": false, "var_name": "password"}, {"var_description": "The path URL component, or nil if not present.", "var_type": "String", "is_static": false, "var_name": "path"}, {"var_description": "The port number URL component, or nil if not present.", "var_type": "NSNumber", "is_static": false, "var_name": "port"}, {"var_description": "The query URL component as a string, or nil if not present.", "var_type": "String", "is_static": false, "var_name": "query"}, {"var_description": "The query URL component as an array of name/value pairs.", "var_type": "[URLQueryItem]", "is_static": false, "var_name": "queryItems"}, {"var_description": "The scheme URL component, or nil if not present.", "var_type": "String", "is_static": false, "var_name": "scheme"}, {"var_description": "The username URL subcomponent, or nil if not present.", "var_type": "String", "is_static": false, "var_name": "user"}, {"var_description": "The fragment URL component (the part after a # symbol) expressed as a URL-encoded string, or nil if not present.", "var_type": "String", "is_static": false, "var_name": "percentEncodedFragment"}, {"var_description": "The host URL subcomponent expressed as a URL-encoded string, or nil if not present.", "var_type": "String", "is_static": false, "var_name": "percentEncodedHost"}, {"var_description": "The password URL subcomponent expressed as a URL-encoded string, or nil if not present.", "var_type": "String", "is_static": false, "var_name": "percentEncodedPassword"}, {"var_description": "The path URL component expressed as a URL-encoded string, or nil if not present.", "var_type": "String", "is_static": false, "var_name": "percentEncodedPath"}, {"var_description": "The query URL component expressed as a URL-encoded string, or nil if not present.", "var_type": "String", "is_static": false, "var_name": "percentEncodedQuery"}, {"var_description": "The username URL subcomponent expressed as a URL-encoded string, or nil if not present.", "var_type": "String", "is_static": false, "var_name": "percentEncodedUser"}, {"var_description": "", "var_type": "[URLQueryItem]", "is_static": false, "var_name": "percentEncodedQueryItems"}, {"var_description": "Returns the character range of the fragment in the string returned by the string property.", "var_type": "NSRange", "is_static": false, "var_name": "rangeOfFragment"}, {"var_description": "Returns the character range of the host in the string returned by the string property.", "var_type": "NSRange", "is_static": false, "var_name": "rangeOfHost"}, {"var_description": "Returns the character range of the password in the string returned by the string property.", "var_type": "NSRange", "is_static": false, "var_name": "rangeOfPassword"}, {"var_description": "Returns the character range of the path in the string returned by the string property.", "var_type": "NSRange", "is_static": false, "var_name": "rangeOfPath"}, {"var_description": "Returns the character range of the port in the string returned by the string property.", "var_type": "NSRange", "is_static": false, "var_name": "rangeOfPort"}, {"var_description": "Returns the character range of the query in the string returned by the string property.", "var_type": "NSRange", "is_static": false, "var_name": "rangeOfQuery"}, {"var_description": "Returns the character range of the scheme in the string returned by the string property.", "var_type": "NSRange", "is_static": false, "var_name": "rangeOfScheme"}, {"var_description": "Returns the character range of the user in the string returned by the string property.", "var_type": "NSRange", "is_static": false, "var_name": "rangeOfUser"}], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying"], "package_name": "foundation", "subclass_list": []}