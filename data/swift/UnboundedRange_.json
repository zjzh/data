{"Methods": [{"return_value": {"return_name": [], "return_type": [], "return_description": []}, "class_name": "UnboundedRange_", "params": [{"param_description": "", "param_type": "UnboundedRange", "param_name": [""]}], "method_description": "Creates an unbounded range expression.", "is_static": true, "method_name": "...", "method_declar": "postfix static func ... (_: UnboundedRange_)"}], "Vars": [], "class_name": "UnboundedRange_", "interface_list": [], "class_description": "You can use the unbounded range operator (...) to create a slice of a collection that contains all of the collection\u2019s elements. Slicing with an unbounded range is essentially a conversion of a collection instance into its slice type.\nFor example, the following code declares countLetterChanges(_:_:), a function that finds the number of changes required to change one word or phrase into another. The function uses a recursive approach to perform the same comparisons on smaller and smaller pieces of the original strings. In order to use recursion without making copies of the strings at each step, countLetterChanges(_:_:) uses Substring, a string\u2019s slice type, for its parameters.\nTo call countLetterChanges(_:_:) with two strings, use an unbounded range in each string\u2019s subscript.\n", "class_inherit_list": [], "package_name": "swift", "subclass_list": [], "class_type": "enum", "typealias": []}