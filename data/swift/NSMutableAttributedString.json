{"class_description": "The NSMutableAttributedString class declares additional methods for mutating the content of an attributed string. You can add and remove characters (raw strings) and attributes separately or together as attributed strings. See the class description for NSAttributedString for more information about attributed strings.\nNSMutableAttributedString adds two primitive methods to those of NSAttributedString. These primitive methods provide the basis for all the other methods in its class. The primitive replaceCharacters(in:with:) method replaces a range of characters with those from a string, leaving all attribute information outside that range intact. The primitive setAttributes(_:range:) method sets attributes and values for a given range of characters, replacing any previous attributes and values for that range.\nIn macOS, AppKit also uses NSParagraphStyle and its subclass NSMutableParagraphStyle to encapsulate the paragraph or ruler attributes used by the NSAttributedString classes.\nNote that the default font for NSAttributedString objects is Helvetica 12-point, which may differ from the macOS system font, so you may wish to create the string with non-default attributes suitable for your application using, for example, init(string:attributes:).\niOS Note\nIn iOS, this class is used primarily in conjunction with the Core Text framework.\nNSMutableAttributedString is \u201ctoll-free bridged\u201d with its Core Foundation counterpart, CFMutableAttributedString. See Toll-Free Bridging for more information.\n", "Methods": [{"method_description": "Replaces the characters in the given range with the characters of the given string.", "method_name": "replaceCharacters", "params": [{"param_type": "NSRange", "param_description": "", "param_name": ["in", "range"]}, {"param_type": "String", "param_description": "", "param_name": ["with", "str"]}], "class_name": "NSMutableAttributedString", "method_declar": "func replaceCharacters(in range: NSRange, with str: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Deletes the characters in the given range along with their associated attributes.", "method_name": "deleteCharacters", "params": [{"param_type": "NSRange", "param_description": "", "param_name": ["in", "range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func deleteCharacters(in range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Sets the attributes for the characters in the specified range to the specified attributes.", "method_name": "setAttributes", "params": [{"param_type": "[NSAttributedString.Key", "param_description": "", "param_name": ["attrs"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[NSAttributedString.Key"]}, {"param_type": "NSRange", "param_description": "", "param_name": ["range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func setAttributes(_ attrs: [NSAttributedString.Key : Any]?, range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Adds an attribute with the given name and value to the characters in the specified range.", "method_name": "addAttribute", "params": [{"param_type": "NSAttributedString.Key", "param_description": "A string specifying the attribute name. Attribute keys can be supplied by another framework or can be custom ones you define. For information about the system-supplied attribute keys, see the Constants section in NSAttributedString.", "param_name": ["name"]}, {"param_type": "Any", "param_description": "The attribute value associated with name.", "param_name": ["value"]}, {"param_type": "NSRange", "param_description": "", "param_name": ["range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func addAttribute(_ name: NSAttributedString.Key, value: Any, range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Adds the given collection of attributes to the characters in the specified range.", "method_name": "addAttributes", "params": [{"param_type": "[NSAttributedString.Key", "param_description": "", "param_name": ["attrs"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[NSAttributedString.Key"]}, {"param_type": "]", "param_description": "", "param_name": ["Any]", "=", "["]}, {"param_type": "NSRange", "param_description": "", "param_name": ["range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func addAttributes(_ attrs: [NSAttributedString.Key : Any] = [:], range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Removes the named attribute from the characters in the specified range.", "method_name": "removeAttribute", "params": [{"param_type": "NSAttributedString.Key", "param_description": "A string specifying the attribute name to remove. Attribute keys can be supplied by another framework or can be custom ones you define. For information about where to find the system-supplied attribute keys, see the overview section in NSAttributedString.", "param_name": ["name"]}, {"param_type": "NSRange", "param_description": "", "param_name": ["range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func removeAttribute(_ name: NSAttributedString.Key, range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Applies the font attributes specified by mask to the characters in aRange.", "method_name": "applyFontTraits", "params": [{"param_type": "NSFontTraitMask", "param_description": "", "param_name": ["traitMask"]}, {"param_type": "NSRange", "param_description": "", "param_name": ["range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func applyFontTraits(_ traitMask: NSFontTraitMask, range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Sets the alignment characteristic of the paragraph style attribute for the characters in aRange to alignment.", "method_name": "setAlignment", "params": [{"param_type": "NSTextAlignment", "param_description": "The alignment to use.", "param_name": ["alignment"]}, {"param_type": "NSRange", "param_description": "", "param_name": ["range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func setAlignment(_ alignment: NSTextAlignment, range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Sets the base writing direction for the characters in range to writingDirection.", "method_name": "setBaseWritingDirection", "params": [{"param_type": "NSWritingDirection", "param_description": "The writing direction to use.", "param_name": ["writingDirection"]}, {"param_type": "NSRange", "param_description": "The range of characters.", "param_name": ["range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func setBaseWritingDirection(_ writingDirection: NSWritingDirection, range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Decrements the value of the superscript attribute for characters in aRange by 1.", "method_name": "subscriptRange", "params": [{"param_type": "NSRange", "param_description": "", "param_name": ["range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func subscriptRange(_ range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Increments the value of the superscript attribute for characters in aRange by 1.", "method_name": "superscriptRange", "params": [{"param_type": "NSRange", "param_description": "", "param_name": ["range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func superscriptRange(_ range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Removes the superscript attribute from the characters in aRange.", "method_name": "unscriptRange", "params": [{"param_type": "NSRange", "param_description": "", "param_name": ["range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func unscriptRange(_ range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Adds the characters and attributes of a given attributed string to the end of the receiver.", "method_name": "append", "params": [{"param_type": "NSAttributedString", "param_description": "", "param_name": ["attrString"]}], "class_name": "NSMutableAttributedString", "method_declar": "func append(_ attrString: NSAttributedString)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Inserts the characters and attributes of the given attributed string into the receiver at the given index.", "method_name": "insert", "params": [{"param_type": "NSAttributedString", "param_description": "", "param_name": ["attrString"]}, {"param_type": "Int", "param_description": "", "param_name": ["at", "loc"]}], "class_name": "NSMutableAttributedString", "method_declar": "func insert(_ attrString: NSAttributedString, at loc: Int)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Replaces the characters and attributes in a given range with the characters and attributes of the given attributed string.", "method_name": "replaceCharacters", "params": [{"param_type": "NSRange", "param_description": "", "param_name": ["in", "range"]}, {"param_type": "NSAttributedString", "param_description": "", "param_name": ["with", "attrString"]}], "class_name": "NSMutableAttributedString", "method_declar": "func replaceCharacters(in range: NSRange, with attrString: NSAttributedString)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Replaces the receiver\u2019s entire contents with the characters and attributes of the given attributed string.", "method_name": "setAttributedString", "params": [{"param_type": "NSAttributedString", "param_description": "", "param_name": ["attrString"]}], "class_name": "NSMutableAttributedString", "method_declar": "func setAttributedString(_ attrString: NSAttributedString)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Overridden by subclasses to buffer or optimize a series of changes to the receiver\u2019s characters or attributes, until it receives a matching endEditing() message, upon which it can consolidate changes and notify any observers that it has changed.", "method_name": "beginEditing", "params": [], "class_name": "NSMutableAttributedString", "method_declar": "func beginEditing()", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Overridden by subclasses to consolidate changes made since a previous beginEditing() message and to notify any observers of the changes.", "method_name": "endEditing", "params": [], "class_name": "NSMutableAttributedString", "method_declar": "func endEditing()", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Updates all attachments based on files contained in the RTFD file package at path.", "method_name": "updateAttachments", "params": [{"param_type": "String", "param_description": "The path to the file package.", "param_name": ["fromPath", "path"]}], "class_name": "NSMutableAttributedString", "method_declar": "func updateAttachments(fromPath path: String)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Cleans up font, paragraph style, and attachment attributes within the given range.", "method_name": "fixAttributes", "params": [{"param_type": "NSRange", "param_description": "The character range within which to fix attributes. Raises an rangeException if any part of range lies beyond the end of the receiver\u2019s characters.", "param_name": ["in", "range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func fixAttributes(in range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Cleans up attachment attributes in aRange, removing all attachment attributes assigned to characters other than NSAttachmentCharacter.", "method_name": "fixAttachmentAttribute", "params": [{"param_type": "NSRange", "param_description": "", "param_name": ["in", "range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func fixAttachmentAttribute(in range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Fixes the font attribute in aRange, assigning default fonts to characters with illegal fonts for their scripts and otherwise correcting font attribute assignments.", "method_name": "fixFontAttribute", "params": [{"param_type": "NSRange", "param_description": "", "param_name": ["in", "range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func fixFontAttribute(in range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Fixes the paragraph style attributes in aRange, assigning the first paragraph style attribute value in each paragraph to all characters of the paragraph.", "method_name": "fixParagraphStyleAttribute", "params": [{"param_type": "NSRange", "param_description": "", "param_name": ["in", "range"]}], "class_name": "NSMutableAttributedString", "method_declar": "func fixParagraphStyleAttribute(in range: NSRange)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Sets the contents of the receiver from the stream at data.", "method_name": "read", "params": [{"param_type": "Data", "param_description": "The data object providing text data.", "param_name": ["from", "data"]}, {"param_type": "[NSAttributedString.DocumentReadingOptionKey", "param_description": "Keys specifying the types of documents and other document import options. For a list of possible values, see \u201cOption keys for importing documents\u201d in NSAttributedString", "param_name": ["options", "opts"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[NSAttributedString.DocumentReadingOptionKey"]}, {"param_type": "]", "param_description": "", "param_name": ["Any]", "=", "["]}, {"param_type": "AutoreleasingUnsafeMutablePointer<NSDictionary>", "param_description": "On return, the dictionary (if provided) contains keys representing various document-wide attributes. For a list of possible values, see \u201cDocument Attributes\u201d in NSAttributedString. ", "param_name": ["documentAttributes", "dict"]}], "class_name": "NSMutableAttributedString", "method_declar": "func read(from data: Data, options opts: [NSAttributedString.DocumentReadingOptionKey : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) throws", "return_value": {"return_description": ["true if the attributed string is created successfully; otherwise false."], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Sets the contents of attributed string to the contents of the specified file.", "method_name": "read", "params": [{"param_type": "URL", "param_description": "The URL of the file to read.", "param_name": ["from", "url"]}, {"param_type": "[NSAttributedString.DocumentReadingOptionKey", "param_description": "The option keys for importing the document. For a list of possible values, see \u201cOption keys for importing documents\u201d in NSAttributedString. ", "param_name": ["options", "opts"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[NSAttributedString.DocumentReadingOptionKey"]}, {"param_type": "]", "param_description": "", "param_name": ["Any]", "=", "["]}, {"param_type": "AutoreleasingUnsafeMutablePointer<NSDictionary>", "param_description": "On return, contains the document attributes. For a list of possible values, see \u201cDocument Attributes\u201d in NSAttributedString. ", "param_name": ["documentAttributes", "dict"]}], "class_name": "NSMutableAttributedString", "method_declar": "func read(from url: URL, options opts: [NSAttributedString.DocumentReadingOptionKey : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) throws", "return_value": {"return_description": ["true if the attributed string is created successfully or false if it was not."], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Sets the contents of the receiver from the stream at data.DeprecatedUse read(from:options:documentAttributes:error:) instead.", "method_name": "read", "params": [{"param_type": "Data", "param_description": "The data to read.", "param_name": ["from", "data"]}, {"param_type": "[AnyHashable", "param_description": "The option keys for importing the document. For a list of possible values, see \u201cOption keys for importing documents\u201d in NSAttributedString. ", "param_name": ["options"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[AnyHashable"]}, {"param_type": "]", "param_description": "", "param_name": ["Any]", "=", "["]}, {"param_type": "AutoreleasingUnsafeMutablePointer<NSDictionary>", "param_description": "On return, contains the document attributes. For a list of possible values, see \u201cDocument Attributes\u201d in NSAttributedString. ", "param_name": ["documentAttributes", "dict"]}], "class_name": "NSMutableAttributedString", "method_declar": "func read(from data: Data, options: [AnyHashable : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) -> Bool", "return_value": {"return_description": ["true if the attributed string is created successfully or false if it was not."], "return_name": [""], "return_type": ["Boo"]}, "is_static": false}, {"method_description": "Sets the contents of receiver from the file at url.DeprecatedUse read(from:options:documentAttributes:error:) instead.", "method_name": "read", "params": [{"param_type": "URL", "param_description": "The URL of the document to open.", "param_name": ["from", "url"]}, {"param_type": "[AnyHashable", "param_description": "The option keys for importing the document. For a list of possible values, see \u201cOption keys for importing documents\u201d in NSAttributedString. ", "param_name": ["options"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[AnyHashable"]}, {"param_type": "]", "param_description": "", "param_name": ["Any]", "=", "["]}, {"param_type": "AutoreleasingUnsafeMutablePointer<NSDictionary>", "param_description": "On return, contains the document attributes. For a list of possible values, see \u201cDocument Attributes\u201d in NSAttributedString. ", "param_name": ["documentAttributes", "dict"]}], "class_name": "NSMutableAttributedString", "method_declar": "func read(from url: URL, options: [AnyHashable : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) -> Bool", "return_value": {"return_description": ["true if the attributed string is created successfully or false if it was not."], "return_name": [""], "return_type": ["Boo"]}, "is_static": false}, {"method_description": "Sets the contents of the receiver from the file at the given URL.DeprecatedUse read(from:options:documentAttributes:error:) instead.", "method_name": "read", "params": [{"param_type": "URL", "param_description": "The location of the file providing text data.", "param_name": ["fromFileURL", "url"]}, {"param_type": "[AnyHashable", "param_description": "The option keys for importing the document. For a list of possible values, see \u201cOption keys for importing documents\u201d in NSAttributedString. ", "param_name": ["options", "opts"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[AnyHashable"]}, {"param_type": "]", "param_description": "", "param_name": ["Any]", "=", "["]}, {"param_type": "AutoreleasingUnsafeMutablePointer<NSDictionary>", "param_description": "On return, contains the document attributes. For a list of possible values, see \u201cDocument Attributes\u201d in NSAttributedString. ", "param_name": ["documentAttributes", "dict"]}], "class_name": "NSMutableAttributedString", "method_declar": "func read(fromFileURL url: URL, options opts: [AnyHashable : Any] = [:], documentAttributes dict: AutoreleasingUnsafeMutablePointer<NSDictionary?>?) throws", "return_value": {"return_description": ["true if the attributed string is created successfully or false if it was not."], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": ["NSAttributedString"], "class_name": "NSMutableAttributedString", "typealias": [], "Vars": [{"var_description": "The character contents of the receiver as an NSMutableString object.", "var_type": "NSMutableString", "is_static": false, "var_name": "mutableString"}], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable"], "package_name": "foundation", "subclass_list": []}