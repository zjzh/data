{"class_description": "Each stored cookie is represented by an instance of the HTTPCookie class.\nThe persistent cookie storage returned by shared may be available to app extensions or other apps, subject to the following guidelines:\niOS \u2014 Each app and app extension has a unique data container, meaning that they have separate cookie stores. You can obtain a common cookie storage by using the sharedCookieStorage(forGroupContainerIdentifier:) method.\nmacOS (non-sandboxed) \u2014\u00a0As of macOS 10.11, each app has its own cookie storage. Prior to macOS 10.11, a common cookie store is shared among the user's apps.\nmacOS (sandboxed) \u2014 Same as iOS.\nUIWebView \u2014 UIWebView instances within an app inherit the parent app's shared cookie storage.\nWKWebView \u2014 Each\u00a0WKWebView instance has its own cookie storage. See the WKHTTPCookieStore class for more information.\nSession cookies (where the cookie object\u2019s isSessionOnly property is true) are local to a single process and are not shared.\nNote\nIn cases where a cookie storage is shared between processes, changes made to the cookie accept policy affect all currently running apps using the cookie storage. \n\nThe HTTPCookieStorage class is usable as-is, but you can subclass it. For example, you can override the storage methods like storeCookies(_:for:), getCookiesFor(_:completionHandler:) to screen which cookies are stored, or reimplement the storage mechanism for security or other reasons.\nWhen overriding methods of this class, be aware that methods that take a task parameter are preferred by the system to equivalent methods that do not. Therefore, you should override the task-based methods when subclassing, as follows:\nRetrieving cookies \u2014 Override getCookiesFor(_:completionHandler:), instead of or in addition to cookies(for:).\nAdding cookies \u2014\u00a0Override storeCookies(_:for:), instead of or in addition to setCookies(_:for:mainDocumentURL:).\n\n", "Methods": [], "class_inherit_list": ["NSObject"], "class_name": "HTTPCookieStorage", "typealias": [], "Vars": [{"var_description": "A notification posted when the cookies stored in the cookie storage have changed.", "var_type": "NSNotification.Name", "is_static": false, "var_name": "NSHTTPCookieManagerCookiesChanged"}, {"var_description": "A notification posted when the acceptance policy of the cookie storage has changed.", "var_type": "NSNotification.Name", "is_static": false, "var_name": "NSHTTPCookieManagerAcceptPolicyChanged"}], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable"], "package_name": "foundation", "subclass_list": []}