{"subclass_list": [], "typealias": [], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_name": [""], "return_description": ["The array of created cookies."], "return_type": ["[HTTPCookie"]}, "method_description": "Creates an array HTTP cookies corresponding to the provided response header fields for the provided URL.", "is_static": false, "method_name": "cookies", "class_name": "HTTPCookie", "method_declar": "class func cookies(withResponseHeaderFields headerFields: [String : String], for URL: URL) -> [HTTPCookie]", "params": [{"param_type": "[String", "param_description": "The header fields used to create the HTTPCookie objects.", "param_name": ["withResponseHeaderFields", "headerFields"]}, {"param_type": "String]", "param_description": "", "param_name": ["[String"]}, {"param_type": "URL", "param_description": "The URL associated with the created cookies.", "param_name": ["for", "URL"]}]}, {"return_value": {"return_name": [], "return_description": ["A new cookie object, with the given properies."], "return_type": []}, "method_description": "Creates an HTTP cookie instance with the given cookie properties.", "is_static": false, "method_name": "init", "class_name": "HTTPCookie", "method_declar": "init?(properties: [HTTPCookiePropertyKey : Any])", "params": [{"param_type": "[HTTPCookiePropertyKey", "param_description": "The properties for the new cookie object, expressed as key-value pairs.", "param_name": ["properties"]}, {"param_type": "Any]", "param_description": "", "param_name": ["[HTTPCookiePropertyKey"]}]}, {"return_value": {"return_name": [["[String"]], "return_description": ["The dictionary of header fields created from the provided cookies."], "return_type": ["String"]}, "method_description": "Converts an array of cookies to a dictionary of header fields.", "is_static": false, "method_name": "requestHeaderFields", "class_name": "HTTPCookie", "method_declar": "class func requestHeaderFields(with cookies: [HTTPCookie]) -> [String : String]", "params": [{"param_type": "[HTTPCookie]", "param_description": "The cookies from which the header fields are created.", "param_name": ["with", "cookies"]}]}], "class_type": "class", "class_name": "HTTPCookie", "Vars": [{"var_name": "domain", "var_type": "String", "var_description": "The domain of the cookie.", "is_static": false}, {"var_name": "path", "var_type": "String", "var_description": "The cookie\u2019s path.", "is_static": false}, {"var_name": "portList", "var_type": "[NSNumber]", "var_description": "The cookie\u2019s port list.", "is_static": false}, {"var_name": "name", "var_type": "String", "var_description": "The cookie\u2019s name.", "is_static": false}, {"var_name": "value", "var_type": "String", "var_description": "The cookie\u2018s string value.", "is_static": false}, {"var_name": "version", "var_type": "Int", "var_description": "The cookie\u2019s version.", "is_static": false}, {"var_name": "expiresDate", "var_type": "Date", "var_description": "The cookie\u2019s expiration date.", "is_static": false}, {"var_name": "isSessionOnly", "var_type": "Bool", "var_description": "A Boolean value that indicates whether the cookie should be discarded at the end of the session (regardless of expiration date).", "is_static": false}, {"var_name": "isHTTPOnly", "var_type": "Bool", "var_description": "A Boolean value that indicates whether the cookie should only be sent to HTTP servers.", "is_static": false}, {"var_name": "isSecure", "var_type": "Bool", "var_description": "A Boolean value that indicates whether this cookie should only be sent over secure channels.", "is_static": false}, {"var_name": "properties", "var_type": "[HTTPCookiePropertyKey", "var_description": "The cookie\u2019s properties.", "is_static": false}, {"var_name": "comment", "var_type": "String", "var_description": "The cookie\u2019s comment string.", "is_static": false}, {"var_name": "commentURL", "var_type": "URL", "var_description": "The cookie\u2019s comment URL.", "is_static": false}], "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_description": "An HTTPCookie object is immutable, initialized from a dictionary containing the attributes of the cookie. This class supports two different cookie versions:\nVersion 0: The original cookie format defined by Netscape.Most cookies are in this format.\nVersion 1: The cookie format defined in RFC 6265, HTTP State Management Mechanism.\n", "package_name": "foundation"}