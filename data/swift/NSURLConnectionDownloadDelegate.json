{"subclass_list": [], "typealias": [], "class_inherit_list": ["NSURLConnectionDelegate"], "Methods": [{"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent to the delegate to deliver progress information for a download of a URL asset to a destination file.", "is_static": false, "method_name": "connection", "class_name": "NSURLConnectionDownloadDelegate", "method_declar": "optional func connection(_ connection: NSURLConnection, didWriteData bytesWritten: Int64, totalBytesWritten: Int64, expectedTotalBytes: Int64)", "params": [{"param_type": "NSURLConnection", "param_description": "The URL connection object downloading the asset.", "param_name": ["connection"]}, {"param_type": "Int64", "param_description": "The number of bytes written since the last call of this method.", "param_name": ["didWriteData", "bytesWritten"]}, {"param_type": "Int64", "param_description": "The total number of bytes of the downloading asset that have been written to the file.  ", "param_name": ["totalBytesWritten"]}, {"param_type": "Int64", "param_description": "The total number of bytes of the URL asset once it is completely downloaded and written to a file. This parameter can be zero if the total number of bytes is not known.", "param_name": ["expectedTotalBytes"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent to the delegate when an URL connection resumes downloading a URL asset that was earlier suspended. ", "is_static": false, "method_name": "connectionDidResumeDownloading", "class_name": "NSURLConnectionDownloadDelegate", "method_declar": "optional func connectionDidResumeDownloading(_ connection: NSURLConnection, totalBytesWritten: Int64, expectedTotalBytes: Int64)", "params": [{"param_type": "NSURLConnection", "param_description": "The URL connection object downloading the asset.", "param_name": ["connection"]}, {"param_type": "Int64", "param_description": "The total number of bytes of the downloading asset that have been written to the destination file. ", "param_name": ["totalBytesWritten"]}, {"param_type": "Int64", "param_description": "The total number of bytes of the URL asset once it is completely downloaded and written to a file.", "param_name": ["expectedTotalBytes"]}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "method_description": "Sent to the delegate when the URL connection has successfully downloaded the URL asset to a destination file.Required.", "is_static": false, "method_name": "connectionDidFinishDownloading", "class_name": "NSURLConnectionDownloadDelegate", "method_declar": "func connectionDidFinishDownloading(_ connection: NSURLConnection, destinationURL: URL)", "params": [{"param_type": "NSURLConnection", "param_description": "The URL connection object that downloaded the asset.", "param_name": ["connection"]}, {"param_type": "URL", "param_description": "A file URL specifying a destination in the file system. For iOS applications, this is a location in the application sandbox.", "param_name": ["destinationURL"]}]}], "class_type": "protocol", "class_name": "NSURLConnectionDownloadDelegate", "Vars": [], "interface_list": [], "class_description": "The NSURLConnectionDownloadDelegate protocol describes methods that should be implemented by the delegate of instances of NSURLConnection created using Newsstand Kit\u2019s download(with:) method. The methods in this protocol provide progress information about the download of a URL asset and, when downloading concludes, provide a file URL where the downloaded file can be accessed.\nIn addition to the methods described in this protocol, an NSURLConnection delegate should also implement the methods described in the NSURLConnectionDelegate protocol.\nNote\nIf you are using NSURLConnection directly, your delegate class should instead implement the methods defined in the NSURLConnectionDataDelegate protocol.\n", "package_name": "foundation"}