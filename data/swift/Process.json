{"class_description": "Using the Process class, your program can run another program as a subprocess and can monitor that program\u2019s execution. A Process object creates a separate executable entity; it differs from Thread in that it does not share memory space with the process that creates it.\nA process operates within an environment defined by the current values for several items: the current directory, standard input, standard output, standard error, and the values of any environment variables. By default, an Process object inherits its environment from the process that launches it. If there are any values that should be different for the process, for example, if the current directory should change, you must change the value before you launch it. A process's environment cannot be changed while it is running.\nAn Process object can only be run once. Subsequent attempts raise an error.\nImportant\nIn a sandboxed application, child processes created with the Process class inherit the sandbox of the parent app. You should generally write helper applications as XPC Services instead, because XPC Services allows you to specify different sandbox entitlements for helper apps. See Daemons and Services Programming Guide and XPC for more information.\n", "Methods": [], "class_inherit_list": ["NSObject"], "class_name": "Process", "typealias": [], "Vars": [{"var_description": "Sets the command arguments that should be used to launch the executable.", "var_type": "[String]", "is_static": false, "var_name": "arguments"}, {"var_description": "Sets the current directory for the receiver.", "var_type": "String", "is_static": false, "var_name": "currentDirectoryPath"}, {"var_description": "Sets the environment for the receiver.", "var_type": "[String", "is_static": false, "var_name": "environment"}, {"var_description": "Sets the receiver\u2019s executable.", "var_type": "String", "is_static": false, "var_name": "launchPath"}, {"var_description": "Sets the standard error for the receiver.", "var_type": "Any", "is_static": false, "var_name": "standardError"}, {"var_description": "Sets the standard input for the receiver.", "var_type": "Any", "is_static": false, "var_name": "standardInput"}, {"var_description": "Sets the standard output for the receiver.", "var_type": "Any", "is_static": false, "var_name": "standardOutput"}, {"var_description": "Sets the command arguments that should be used to launch the executable.", "var_type": "[String]", "is_static": false, "var_name": "arguments"}, {"var_description": "Sets the current directory for the receiver.", "var_type": "String", "is_static": false, "var_name": "currentDirectoryPath"}, {"var_description": "Sets the environment for the receiver.", "var_type": "[String", "is_static": false, "var_name": "environment"}, {"var_description": "Sets the receiver\u2019s executable.", "var_type": "String", "is_static": false, "var_name": "launchPath"}, {"var_description": "Sets the standard error for the receiver.", "var_type": "Any", "is_static": false, "var_name": "standardError"}, {"var_description": "Sets the standard input for the receiver.", "var_type": "Any", "is_static": false, "var_name": "standardInput"}, {"var_description": "Sets the standard output for the receiver.", "var_type": "Any", "is_static": false, "var_name": "standardOutput"}], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable"], "package_name": "foundation", "subclass_list": []}