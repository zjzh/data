{"Methods": [], "Vars": [], "class_name": "ReversedCollection", "interface_list": ["BidirectionalCollection", "LazySequenceProtocol", "Sequence"], "class_description": "Note\nThis type is the result of x.reversed() where x is a collection having bidirectional indices.\nThe reversed() method is always lazy when applied to a collection with bidirectional indices, but does not implicitly confer laziness on algorithms applied to its result.  In other words, for ordinary collections c having bidirectional indices:\nc.reversed() does not create new storage\nc.reversed().map(f) maps eagerly and returns a new array\nc.lazy.reversed().map(f) maps lazily and returns a LazyMapCollection\n", "class_inherit_list": [], "package_name": "swift", "subclass_list": [], "class_type": "struct", "typealias": []}