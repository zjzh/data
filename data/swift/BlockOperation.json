{"class_description": "The BlockOperation class is a concrete subclass of Operation that manages the concurrent execution of one or more blocks. You can use this object to execute several blocks at once without having to create separate operation objects for each. When executing more than one block, the operation itself is considered finished only when all blocks have finished executing. \nBlocks added to a block operation are dispatched with default priority to an appropriate work queue. The blocks themselves should not make any assumptions about the configuration of their execution environment.\nFor more information about blocks, see Blocks Programming Topics. \n", "Methods": [{"method_description": "Creates and returns an NSBlockOperation object and adds the specified block to it.", "method_name": "init", "params": [{"param_type": "@escaping () -> Void", "param_description": "The block to add to the new block operation object\u2019s list. The block should take no parameters and have no return value.", "param_name": ["block"]}], "class_name": "BlockOperation", "method_declar": "convenience init(block: @escaping () -> Void)", "return_value": {"return_description": ["A new block operation object."], "return_name": [""], "return_type": ["Void"]}, "is_static": false}, {"method_description": "Adds the specified block to the receiver\u2019s list of blocks to perform.", "method_name": "addExecutionBlock", "params": [{"param_type": "@escaping () -> Void", "param_description": "The block to add to the receiver\u2019s list. The block should take no parameters and have no return value.", "param_name": ["block"]}], "class_name": "BlockOperation", "method_declar": "func addExecutionBlock(_ block: @escaping () -> Void)", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Void"]}, "is_static": false}], "class_inherit_list": ["Operation"], "class_name": "BlockOperation", "typealias": [], "Vars": [{"var_description": "The blocks associated with the receiver.", "var_type": "[()", "is_static": false, "var_name": "executionBlocks"}], "class_type": "class", "interface_list": ["CVarArg", "Equatable", "Hashable"], "package_name": "foundation", "subclass_list": []}