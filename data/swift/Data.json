{"class_description": "The Data value type allows simple byte buffers to take on the behavior of Foundation objects. You can create empty or pre-populated buffers from a variety of sources and later add or remove bytes. You can filter and sort the content, or compare against other buffers. You can manipulate subranges of bytes and iterate over some or all of them.\nData bridges to the NSData class and its mutable subclass, NSMutableData. You can use these interchangeably in code that interacts with Objective-C APIs.\n", "Methods": [{"method_description": "Creates an empty data buffer.", "method_name": "init", "params": [], "class_name": "Data", "method_declar": "init()", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Creates an empty data buffer of a specified size.", "method_name": "init", "params": [{"param_type": "Int", "param_description": "The size of the data.", "param_name": ["capacity"]}], "class_name": "Data", "method_declar": "init(capacity: Int)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Creates a new data buffer with the specified count of zeroed bytes.", "method_name": "init", "params": [{"param_type": "Int", "param_description": "The number of bytes the data initially contains.", "param_name": ["count"]}], "class_name": "Data", "method_declar": "init(count: Int)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Creates an empty data buffer.", "method_name": "init", "params": [], "class_name": "Data", "method_declar": "init()", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Creates a data buffer with copied memory content using a buffer pointer.", "method_name": "init", "params": [{"param_type": "UnsafeBufferPointer<SourceType>", "param_description": "A buffer pointer to copy. The size is calculated from SourceType and buffer.count.", "param_name": ["buffer"]}], "class_name": "Data", "method_declar": "init<SourceType>(buffer: UnsafeBufferPointer<SourceType>)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Creates a data buffer with copied memory content using a mutable buffer pointer.", "method_name": "init", "params": [{"param_type": "UnsafeMutableBufferPointer<SourceType>", "param_description": "A buffer pointer to copy. The size is calculated from SourceType and buffer.count.", "param_name": ["buffer"]}], "class_name": "Data", "method_declar": "init<SourceType>(buffer: UnsafeMutableBufferPointer<SourceType>)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Creates data with copied memory content.", "method_name": "init", "params": [{"param_type": "UnsafeRawPointer", "param_description": "A pointer to the memory to copy.", "param_name": ["bytes"]}, {"param_type": "Int", "param_description": "The number of bytes to copy.", "param_name": ["count"]}], "class_name": "Data", "method_declar": "init(bytes: UnsafeRawPointer, count: Int)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Creates a data buffer with memory content without copying the bytes.", "method_name": "init", "params": [{"param_type": "UnsafeMutableRawPointer", "param_description": "A pointer to the bytes.", "param_name": ["bytesNoCopy", "bytes"]}, {"param_type": "Int", "param_description": "The size of the bytes.", "param_name": ["count"]}, {"param_type": "Data.Deallocator", "param_description": "Specifies the mechanism to free the indicated buffer, or .none.", "param_name": ["deallocator"]}], "class_name": "Data", "method_declar": "init(bytesNoCopy bytes: UnsafeMutableRawPointer, count: Int, deallocator: Data.Deallocator)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Creates an empty data buffer of a specified size.", "method_name": "init", "params": [{"param_type": "Int", "param_description": "The size of the data.", "param_name": ["capacity"]}], "class_name": "Data", "method_declar": "init(capacity: Int)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Creates a new data buffer with the specified count of zeroed bytes.", "method_name": "init", "params": [{"param_type": "Int", "param_description": "The number of bytes the data initially contains.", "param_name": ["count"]}], "class_name": "Data", "method_declar": "init(count: Int)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Creates data with copied memory content.", "method_name": "init", "params": [{"param_type": "UnsafeRawPointer", "param_description": "A pointer to the memory to copy.", "param_name": ["bytes"]}, {"param_type": "Int", "param_description": "The number of bytes to copy.", "param_name": ["count"]}], "class_name": "Data", "method_declar": "init(bytes: UnsafeRawPointer, count: Int)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Creates a data buffer with copied memory content using a buffer pointer.", "method_name": "init", "params": [{"param_type": "UnsafeBufferPointer<SourceType>", "param_description": "A buffer pointer to copy. The size is calculated from SourceType and buffer.count.", "param_name": ["buffer"]}], "class_name": "Data", "method_declar": "init<SourceType>(buffer: UnsafeBufferPointer<SourceType>)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Creates a data buffer with copied memory content using a mutable buffer pointer.", "method_name": "init", "params": [{"param_type": "UnsafeMutableBufferPointer<SourceType>", "param_description": "A buffer pointer to copy. The size is calculated from SourceType and buffer.count.", "param_name": ["buffer"]}], "class_name": "Data", "method_declar": "init<SourceType>(buffer: UnsafeMutableBufferPointer<SourceType>)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}, {"method_description": "Creates a data buffer with memory content without copying the bytes.", "method_name": "init", "params": [{"param_type": "UnsafeMutableRawPointer", "param_description": "A pointer to the bytes.", "param_name": ["bytesNoCopy", "bytes"]}, {"param_type": "Int", "param_description": "The size of the bytes.", "param_name": ["count"]}, {"param_type": "Data.Deallocator", "param_description": "Specifies the mechanism to free the indicated buffer, or .none.", "param_name": ["deallocator"]}], "class_name": "Data", "method_declar": "init(bytesNoCopy bytes: UnsafeMutableRawPointer, count: Int, deallocator: Data.Deallocator)", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "is_static": false}], "class_inherit_list": [], "class_name": "Data", "typealias": [], "Vars": [], "class_type": "struct", "interface_list": ["CKRecordValueProtocol", "CustomDebugStringConvertible", "CustomReflectable", "CustomStringConvertible", "Equatable", "Hashable", "MutableCollection", "RandomAccessCollection", "RangeReplaceableCollection", "ReferenceConvertible"], "package_name": "foundation", "subclass_list": []}